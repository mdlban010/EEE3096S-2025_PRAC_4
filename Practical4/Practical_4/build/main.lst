ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB142:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include "stm32f4xx.h"
  26:Core/Src/main.c **** #include "lcd_stm32f4.h"
  27:Core/Src/main.c **** #include <stm32f4xx_hal_tim.h>
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** // TODO: Add values for below variables
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** // logic behind the values:
  40:Core/Src/main.c ****       /* NS = 128, number of samples generated, TIM2CLK = 16MHz, given,
  41:Core/Src/main.c ****       Sample rate = F_signal * NS
  42:Core/Src/main.c ****       For the waveforms (sine, sawtooth, triangle), want to generate audible tones.
  43:Core/Src/main.c ****       The human hearing range is approximately 20 Hz to 20 kHz.
  44:Core/Src/main.c ****       Sample Rate = 44,100 Hz
  45:Core/Src/main.c ****       F_SIGNAL = Sample_Rate / NS = 44,100 / 128 â‰ˆ 344.53 Hz
  46:Core/Src/main.c ****       Maximum Sample Rate = TIM2CLK / TIM2_Ticks_min
  47:Core/Src/main.c ****       assuming the minumum of TIM2_Ticks =1,
  48:Core/Src/main.c ****       Max Sample Rate = 16,000,000 Hz
  49:Core/Src/main.c ****       Max F_SIGNAL = 16,000,000 / 128 = 125,000 Hz
  50:Core/Src/main.c ****       */
  51:Core/Src/main.c **** #define NS 128        // Number of samples in LUT
  52:Core/Src/main.c **** #define TIM2CLK  16000000  // STM Clock frequency: 16MHz
  53:Core/Src/main.c **** #define F_SIGNAL 344 	// Frequency of output analog signal
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PD */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN PM */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PM */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  63:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  64:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  65:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_ch1;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE BEGIN PV */
  68:Core/Src/main.c **** // TODO: Add code for global variables, including LUTs
  69:Core/Src/main.c **** uint32_t Sin_LUT[NS] = {2047, 2147, 2248, 2347, 2446, 2545, 2641, 2737,
  70:Core/Src/main.c ****     2831, 2922, 3012, 3100, 3185, 3267, 3346, 3422,
  71:Core/Src/main.c ****     3495, 3564, 3630, 3692, 3749, 3803, 3853, 3898,
  72:Core/Src/main.c ****     3939, 3975, 4006, 4033, 4055, 4072, 4085, 4092,
  73:Core/Src/main.c ****     4095, 4092, 4085, 4072, 4055, 4033, 4006, 3975,
  74:Core/Src/main.c ****     3939, 3898, 3853, 3803, 3749, 3692, 3630, 3564,
  75:Core/Src/main.c ****     3495, 3422, 3346, 3267, 3185, 3100, 3012, 2922,
  76:Core/Src/main.c ****     2831, 2737, 2641, 2545, 2446, 2347, 2248, 2147,
  77:Core/Src/main.c ****     2047, 1947, 1846, 1747, 1648, 1549, 1453, 1357,
  78:Core/Src/main.c ****     1263, 1172, 1082, 994, 909, 827, 748, 672,
  79:Core/Src/main.c ****     599, 530, 464, 402, 345, 291, 241, 196,
  80:Core/Src/main.c ****     155, 119, 88, 61, 39, 22, 9, 2,
  81:Core/Src/main.c ****     0, 2, 9, 22, 39, 61, 88, 119,
  82:Core/Src/main.c ****     155, 196, 241, 291, 345, 402, 464, 530,
  83:Core/Src/main.c ****     599, 672, 748, 827, 909, 994, 1082, 1172,
  84:Core/Src/main.c ****     1263, 1357, 1453, 1549, 1648, 1747, 1846, 1947};
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** uint32_t Saw_LUT[NS] = {0, 31, 63, 95, 127, 159, 191, 223,
  87:Core/Src/main.c ****     255, 287, 319, 351, 383, 415, 447, 479,
  88:Core/Src/main.c ****     511, 543, 575, 607, 639, 671, 703, 735,
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 3


  89:Core/Src/main.c ****     767, 799, 831, 863, 895, 927, 959, 991,
  90:Core/Src/main.c ****     1023, 1055, 1087, 1119, 1151, 1183, 1215, 1247,
  91:Core/Src/main.c ****     1279, 1311, 1343, 1375, 1407, 1439, 1471, 1503,
  92:Core/Src/main.c ****     1535, 1567, 1599, 1631, 1663, 1695, 1727, 1759,
  93:Core/Src/main.c ****     1791, 1823, 1855, 1887, 1919, 1951, 1983, 2015,
  94:Core/Src/main.c ****     2047, 2079, 2111, 2143, 2175, 2207, 2239, 2271,
  95:Core/Src/main.c ****     2303, 2335, 2367, 2399, 2431, 2463, 2495, 2527,
  96:Core/Src/main.c ****     2559, 2591, 2623, 2655, 2687, 2719, 2751, 2783,
  97:Core/Src/main.c ****     2815, 2847, 2879, 2911, 2943, 2975, 3007, 3039,
  98:Core/Src/main.c ****     3071, 3103, 3135, 3167, 3199, 3231, 3263, 3295,
  99:Core/Src/main.c ****     3327, 3359, 3391, 3423, 3455, 3487, 3519, 3551,
 100:Core/Src/main.c ****     3583, 3615, 3647, 3679, 3711, 3743, 3775, 3807,
 101:Core/Src/main.c ****     3839, 3871, 3903, 3935, 3967, 3999, 4031, 4063};
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** uint32_t Triangle_LUT[NS] = { 0, 63, 127, 191, 255, 319, 383, 447,
 104:Core/Src/main.c ****     511, 575, 639, 703, 767, 831, 895, 959,
 105:Core/Src/main.c ****     1023, 1087, 1151, 1215, 1279, 1343, 1407, 1471,
 106:Core/Src/main.c ****     1535, 1599, 1663, 1727, 1791, 1855, 1919, 1983,
 107:Core/Src/main.c ****     2047, 2111, 2175, 2239, 2303, 2367, 2431, 2495,
 108:Core/Src/main.c ****     2559, 2623, 2687, 2751, 2815, 2879, 2943, 3007,
 109:Core/Src/main.c ****     3071, 3135, 3199, 3263, 3327, 3391, 3455, 3519,
 110:Core/Src/main.c ****     3583, 3647, 3711, 3775, 3839, 3903, 3967, 4031,
 111:Core/Src/main.c ****     4095, 4031, 3967, 3903, 3839, 3775, 3711, 3647,
 112:Core/Src/main.c ****     3583, 3519, 3455, 3391, 3327, 3263, 3199, 3135,
 113:Core/Src/main.c ****     3071, 3007, 2943, 2879, 2815, 2751, 2687, 2623,
 114:Core/Src/main.c ****     2559, 2495, 2431, 2367, 2303, 2239, 2175, 2111,
 115:Core/Src/main.c ****     2047, 1983, 1919, 1855, 1791, 1727, 1663, 1599,
 116:Core/Src/main.c ****     1535, 1471, 1407, 1343, 1279, 1215, 1151, 1087,
 117:Core/Src/main.c ****     1023, 959, 895, 831, 767, 703, 639, 575,
 118:Core/Src/main.c ****     511, 447, 383, 319, 255, 191, 127, 63};
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** uint32_t Piano_LUT = {2047, 4095, 0, 4095, 4095, 4095, 0, 4095,
 121:Core/Src/main.c ****     4095, 4095, 4095, 1096, 0, 4095, 4095, 0,
 122:Core/Src/main.c ****     0, 0, 0, 4095, 0, 4095, 0, 0,
 123:Core/Src/main.c ****     4095, 3837, 4095, 0, 0, 0, 4095, 4095,
 124:Core/Src/main.c ****     0, 4095, 0, 4095, 0, 4095, 0, 0,
 125:Core/Src/main.c ****     0, 4095, 4095, 0, 4095, 0, 4095, 1644,
 126:Core/Src/main.c ****     4095, 4095, 4095, 0, 0, 0, 4095, 0,
 127:Core/Src/main.c ****     4095, 0, 0, 0, 0, 0, 0, 4095,
 128:Core/Src/main.c ****     0, 0, 4095, 4095, 0, 0, 0, 4095,
 129:Core/Src/main.c ****     0, 4095, 0, 4095, 4095, 0, 4095, 4095,
 130:Core/Src/main.c ****     4095, 4095, 0, 4095, 4095, 0, 4095, 4095,
 131:Core/Src/main.c ****     4095, 0, 0, 0, 0, 4095, 806, 4095,
 132:Core/Src/main.c ****     4095, 0, 4095, 4095, 4095, 0, 0, 0,
 133:Core/Src/main.c ****     0, 0, 4095, 4095, 0, 0, 0, 4095,
 134:Core/Src/main.c ****     0, 4095, 0, 4095, 4095, 0, 0, 0,
 135:Core/Src/main.c ****     0, 0, 4095, 4095, 0, 4095, 0, 2047};
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** uint32_t Guitar_LUT = {2047, 4095, 4095, 4095, 4095, 0, 0, 4095,
 138:Core/Src/main.c ****     0, 4095, 4095, 0, 4095, 4095, 0, 4095,
 139:Core/Src/main.c ****     0, 4095, 0, 4095, 0, 0, 4095, 0,
 140:Core/Src/main.c ****     0, 0, 0, 4095, 0, 0, 0, 4095,
 141:Core/Src/main.c ****     4095, 0, 0, 4095, 0, 4095, 0, 0,
 142:Core/Src/main.c ****     0, 4095, 4095, 4095, 4095, 0, 4095, 0,
 143:Core/Src/main.c ****     0, 0, 4095, 0, 4095, 0, 0, 4095,
 144:Core/Src/main.c ****     0, 4095, 4095, 0, 0, 4095, 4095, 0,
 145:Core/Src/main.c ****     0, 4095, 4095, 4095, 4095, 4095, 0, 4095,
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 4


 146:Core/Src/main.c ****     4095, 0, 4095, 4095, 4095, 0, 4095, 4095,
 147:Core/Src/main.c ****     4095, 4095, 0, 4095, 4095, 0, 0, 0,
 148:Core/Src/main.c ****     4095, 4095, 0, 0, 0, 0, 4095, 0,
 149:Core/Src/main.c ****     4095, 0, 4095, 0, 4095, 0, 4095, 4095,
 150:Core/Src/main.c ****     0, 4095, 0, 4095, 4095, 0, 4095, 0,
 151:Core/Src/main.c ****     0, 4095, 4095, 0, 4095, 0, 0, 0,
 152:Core/Src/main.c ****     4095, 0, 4095, 0, 0, 4095, 2837, 0};
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** uint32_t Drum_LUT = {2047, 4095, 0, 4095, 4095, 4095, 0, 0,
 155:Core/Src/main.c ****     4095, 4095, 0, 0, 0, 0, 0, 0,
 156:Core/Src/main.c ****     4095, 0, 1902, 4095, 4095, 4095, 0, 0,
 157:Core/Src/main.c ****     4095, 0, 4095, 4095, 4095, 0, 4095, 0,
 158:Core/Src/main.c ****     0, 4095, 4095, 4095, 0, 4095, 0, 709,
 159:Core/Src/main.c ****     4095, 0, 0, 0, 4095, 4095, 0, 0,
 160:Core/Src/main.c ****     4095, 4095, 0, 4095, 0, 4095, 4095, 4095,
 161:Core/Src/main.c ****     0, 4095, 0, 0, 4095, 4095, 4095, 4095,
 162:Core/Src/main.c ****     4095, 0, 4095, 0, 4095, 4095, 4095, 4095,
 163:Core/Src/main.c ****     0, 0, 4095, 0, 4095, 0, 1418, 4095,
 164:Core/Src/main.c ****     0, 4095, 0, 3740, 4095, 4095, 4095, 0,
 165:Core/Src/main.c ****     4095, 4095, 0, 4095, 0, 4095, 0, 0,
 166:Core/Src/main.c ****     0, 4095, 0, 0, 3288, 0, 4095, 0,
 167:Core/Src/main.c ****     0, 4095, 4095, 0, 4095, 4095, 4095, 4095,
 168:Core/Src/main.c ****     4095, 2160, 0, 0, 4095, 4095, 4095, 4095,
 169:Core/Src/main.c ****     4095, 0, 0, 0, 0, 0, 4095, 2047};
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** // TODO: Equation to calculate TIM2_Ticks
 172:Core/Src/main.c **** // TIM2_Ticks determines how often to update the PWM duty cycle
 173:Core/Src/main.c **** // Formula: TIM2_Ticks = TIM2CLK / (F_SIGNAL Ã— NS)
 174:Core/Src/main.c **** // TIM2_Ticks = 16,000,000 / (344 Ã— 128) = 16,000,000 / 44,032 â‰ˆ 363
 175:Core/Src/main.c **** uint32_t TIM2_Ticks = TIM2CLK / (F_SIGNAL * NS); // How often to write new LUT value
 176:Core/Src/main.c **** uint32_t DestAddress = (uint32_t) &(TIM3->CCR3); // Write LUT TO TIM3->CCR3 to modify PWM duty cycl
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** // TASK5: Variables to track current waveform
 179:Core/Src/main.c **** volatile uint8_t current_waveform = 0; // 0=sine, 1=saw, 2=triangle, 3=piano, 4=guitar, 5=drum
 180:Core/Src/main.c **** volatile uint32_t last_button_press = 0; // for debouncing
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /* USER CODE END PV */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 185:Core/Src/main.c **** void SystemClock_Config(void);
 186:Core/Src/main.c **** static void MX_GPIO_Init(void);
 187:Core/Src/main.c **** static void MX_DMA_Init(void);
 188:Core/Src/main.c **** static void MX_TIM2_Init(void);
 189:Core/Src/main.c **** static void MX_TIM3_Init(void);
 190:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 191:Core/Src/main.c **** void EXTI0_IRQHandler(void);
 192:Core/Src/main.c **** /* USER CODE END PFP */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 195:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** /* USER CODE END 0 */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** /**
 200:Core/Src/main.c ****   * @brief  The application entry point.
 201:Core/Src/main.c ****   * @retval int
 202:Core/Src/main.c ****   */
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 5


 203:Core/Src/main.c **** int main(void)
 204:Core/Src/main.c **** {
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE END 1 */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 213:Core/Src/main.c ****   HAL_Init();
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE END Init */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* Configure the system clock */
 220:Core/Src/main.c ****   SystemClock_Config();
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* USER CODE END SysInit */
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /* Initialize all configured peripherals */
 227:Core/Src/main.c ****   MX_GPIO_Init();
 228:Core/Src/main.c ****   MX_DMA_Init();
 229:Core/Src/main.c ****   MX_TIM2_Init();
 230:Core/Src/main.c ****   MX_TIM3_Init();
 231:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 232:Core/Src/main.c ****   // TODO: Start TIM3 in PWM mode on channel 3
 233:Core/Src/main.c ****   init_LCD();
 234:Core/Src/main.c ****   HAL_Delay(10);
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 237:Core/Src/main.c ****   // TODO: Start TIM2 in Output Compare (OC) mode on channel 1
 238:Core/Src/main.c ****   HAL_TIM_OC_Start(&htim2, TIM_CHANNEL_1);
 239:Core/Src/main.c ****   // TODO: Start DMA in IT mode on TIM2->CH1. Source is LUT and Dest is TIM3->CCR3; start with Sine
 240:Core/Src/main.c ****   HAL_DMA_Start_IT(&hdma_tim2_ch1, (uint32_t)Sin_LUT, DestAddress, NS);
 241:Core/Src/main.c ****   // TODO: Write current waveform to LCD(Sine is the first waveform)
 242:Core/Src/main.c ****   lcd_command(CLEAR);
 243:Core/Src/main.c ****   lcd_putstring("Wave: Sine");
 244:Core/Src/main.c ****   // TODO: Enable DMA (start transfer from LUT to CCR)
 245:Core/Src/main.c ****   __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC1);
 246:Core/Src/main.c ****   /* USER CODE END 2 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* Infinite loop */
 249:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 250:Core/Src/main.c ****   while (1)
 251:Core/Src/main.c ****   {
 252:Core/Src/main.c ****     /* USER CODE END WHILE */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 255:Core/Src/main.c ****   }
 256:Core/Src/main.c ****   /* USER CODE END 3 */
 257:Core/Src/main.c **** }
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** /**
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 6


 260:Core/Src/main.c ****   * @brief System Clock Configuration
 261:Core/Src/main.c ****   * @retval None
 262:Core/Src/main.c ****   */
 263:Core/Src/main.c **** void SystemClock_Config(void)
 264:Core/Src/main.c **** {
 265:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 266:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 269:Core/Src/main.c ****   */
 270:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 271:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 274:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 275:Core/Src/main.c ****   */
 276:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 277:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 278:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 279:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 280:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 281:Core/Src/main.c ****   {
 282:Core/Src/main.c ****     Error_Handler();
 283:Core/Src/main.c ****   }
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 286:Core/Src/main.c ****   */
 287:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 288:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 289:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 290:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 291:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 292:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 295:Core/Src/main.c ****   {
 296:Core/Src/main.c ****     Error_Handler();
 297:Core/Src/main.c ****   }
 298:Core/Src/main.c **** }
 299:Core/Src/main.c **** 
 300:Core/Src/main.c **** /**
 301:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 302:Core/Src/main.c ****   * @param None
 303:Core/Src/main.c ****   * @retval None
 304:Core/Src/main.c ****   */
 305:Core/Src/main.c **** static void MX_TIM2_Init(void)
 306:Core/Src/main.c **** {
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 313:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 314:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 7


 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 319:Core/Src/main.c ****   htim2.Instance = TIM2;
 320:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 321:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 322:Core/Src/main.c ****   htim2.Init.Period = TIM2_Ticks -1;
 323:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 324:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 325:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 326:Core/Src/main.c ****   {
 327:Core/Src/main.c ****     Error_Handler();
 328:Core/Src/main.c ****   }
 329:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 330:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 331:Core/Src/main.c ****   {
 332:Core/Src/main.c ****     Error_Handler();
 333:Core/Src/main.c ****   }
 334:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 335:Core/Src/main.c ****   {
 336:Core/Src/main.c ****     Error_Handler();
 337:Core/Src/main.c ****   }
 338:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 339:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 340:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 341:Core/Src/main.c ****   {
 342:Core/Src/main.c ****     Error_Handler();
 343:Core/Src/main.c ****   }
 344:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 345:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 346:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 347:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 348:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 349:Core/Src/main.c ****   {
 350:Core/Src/main.c ****     Error_Handler();
 351:Core/Src/main.c ****   }
 352:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 353:Core/Src/main.c ****   /* TIM2_CH1 DMA Init */
 354:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   hdma_tim2_ch1.Instance = DMA1_Stream5;
 357:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 358:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 359:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 360:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 361:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 362:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 363:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 364:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 365:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 366:Core/Src/main.c **** 
 367:Core/Src/main.c ****   if (HAL_DMA_Init(&hdma_tim2_ch1) != HAL_OK)
 368:Core/Src/main.c ****   {
 369:Core/Src/main.c ****       Error_Handler();
 370:Core/Src/main.c ****   }
 371:Core/Src/main.c **** 
 372:Core/Src/main.c ****   /* Link DMA handle to TIM2 handle */
 373:Core/Src/main.c ****   __HAL_LINKDMA(&htim2, hdma[TIM_DMA_ID_CC1], hdma_tim2_ch1);
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 8


 374:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 375:Core/Src/main.c **** 
 376:Core/Src/main.c **** }
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** /**
 379:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 380:Core/Src/main.c ****   * @param None
 381:Core/Src/main.c ****   * @retval None
 382:Core/Src/main.c ****   */
 383:Core/Src/main.c **** static void MX_TIM3_Init(void)
 384:Core/Src/main.c **** {
 385:Core/Src/main.c **** 
 386:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 391:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 392:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 397:Core/Src/main.c ****   htim3.Instance = TIM3;
 398:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 399:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 400:Core/Src/main.c ****   htim3.Init.Period = 65535;
 401:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 402:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 403:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 404:Core/Src/main.c ****   {
 405:Core/Src/main.c ****     Error_Handler();
 406:Core/Src/main.c ****   }
 407:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 408:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 409:Core/Src/main.c ****   {
 410:Core/Src/main.c ****     Error_Handler();
 411:Core/Src/main.c ****   }
 412:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 413:Core/Src/main.c ****   {
 414:Core/Src/main.c ****     Error_Handler();
 415:Core/Src/main.c ****   }
 416:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 417:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 418:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 419:Core/Src/main.c ****   {
 420:Core/Src/main.c ****     Error_Handler();
 421:Core/Src/main.c ****   }
 422:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 423:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 424:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 425:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 426:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 427:Core/Src/main.c ****   {
 428:Core/Src/main.c ****     Error_Handler();
 429:Core/Src/main.c ****   }
 430:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 9


 431:Core/Src/main.c **** 
 432:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 433:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 434:Core/Src/main.c **** 
 435:Core/Src/main.c **** }
 436:Core/Src/main.c **** 
 437:Core/Src/main.c **** /**
 438:Core/Src/main.c ****   * Enable DMA controller clock
 439:Core/Src/main.c ****   */
 440:Core/Src/main.c **** static void MX_DMA_Init(void)
 441:Core/Src/main.c **** {
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   /* DMA controller clock enable */
 444:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****   /* DMA interrupt init */
 447:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 448:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 449:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 450:Core/Src/main.c **** 
 451:Core/Src/main.c **** }
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** /**
 454:Core/Src/main.c ****   * @brief GPIO Initialization Function
 455:Core/Src/main.c ****   * @param None
 456:Core/Src/main.c ****   * @retval None
 457:Core/Src/main.c ****   */
 458:Core/Src/main.c **** static void MX_GPIO_Init(void)
 459:Core/Src/main.c **** {
  28              		.loc 1 459 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 36
  35              		.cfi_offset 4, -36
  36              		.cfi_offset 5, -32
  37              		.cfi_offset 6, -28
  38              		.cfi_offset 7, -24
  39              		.cfi_offset 8, -20
  40              		.cfi_offset 9, -16
  41              		.cfi_offset 10, -12
  42              		.cfi_offset 11, -8
  43              		.cfi_offset 14, -4
  44 0004 89B0     		sub	sp, sp, #36
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 72
 460:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  47              		.loc 1 460 3 view .LVU1
  48              		.loc 1 460 20 is_stmt 0 view .LVU2
  49 0006 0024     		movs	r4, #0
  50 0008 0394     		str	r4, [sp, #12]
  51 000a 0494     		str	r4, [sp, #16]
  52 000c 0594     		str	r4, [sp, #20]
  53 000e 0694     		str	r4, [sp, #24]
  54 0010 0794     		str	r4, [sp, #28]
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 10


 461:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 466:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  55              		.loc 1 466 3 is_stmt 1 view .LVU3
  56              	.LBB4:
  57              		.loc 1 466 3 view .LVU4
  58 0012 0094     		str	r4, [sp]
  59              		.loc 1 466 3 view .LVU5
  60 0014 2F4B     		ldr	r3, .L3
  61 0016 1A6B     		ldr	r2, [r3, #48]
  62 0018 42F08002 		orr	r2, r2, #128
  63 001c 1A63     		str	r2, [r3, #48]
  64              		.loc 1 466 3 view .LVU6
  65 001e 1A6B     		ldr	r2, [r3, #48]
  66 0020 02F08002 		and	r2, r2, #128
  67 0024 0092     		str	r2, [sp]
  68              		.loc 1 466 3 view .LVU7
  69 0026 009A     		ldr	r2, [sp]
  70              	.LBE4:
  71              		.loc 1 466 3 view .LVU8
 467:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  72              		.loc 1 467 3 view .LVU9
  73              	.LBB5:
  74              		.loc 1 467 3 view .LVU10
  75 0028 0194     		str	r4, [sp, #4]
  76              		.loc 1 467 3 view .LVU11
  77 002a 1A6B     		ldr	r2, [r3, #48]
  78 002c 42F00102 		orr	r2, r2, #1
  79 0030 1A63     		str	r2, [r3, #48]
  80              		.loc 1 467 3 view .LVU12
  81 0032 1A6B     		ldr	r2, [r3, #48]
  82 0034 02F00102 		and	r2, r2, #1
  83 0038 0192     		str	r2, [sp, #4]
  84              		.loc 1 467 3 view .LVU13
  85 003a 019A     		ldr	r2, [sp, #4]
  86              	.LBE5:
  87              		.loc 1 467 3 view .LVU14
 468:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  88              		.loc 1 468 3 view .LVU15
  89              	.LBB6:
  90              		.loc 1 468 3 view .LVU16
  91 003c 0294     		str	r4, [sp, #8]
  92              		.loc 1 468 3 view .LVU17
  93 003e 1A6B     		ldr	r2, [r3, #48]
  94 0040 42F00202 		orr	r2, r2, #2
  95 0044 1A63     		str	r2, [r3, #48]
  96              		.loc 1 468 3 view .LVU18
  97 0046 1B6B     		ldr	r3, [r3, #48]
  98 0048 03F00203 		and	r3, r3, #2
  99 004c 0293     		str	r3, [sp, #8]
 100              		.loc 1 468 3 view .LVU19
 101 004e 029B     		ldr	r3, [sp, #8]
 102              	.LBE6:
 103              		.loc 1 468 3 view .LVU20
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 11


 469:Core/Src/main.c **** 
 470:Core/Src/main.c ****   // -------------------------------
 471:Core/Src/main.c ****   // LCD pins configuration
 472:Core/Src/main.c ****   // -------------------------------
 473:Core/Src/main.c ****   // Configure PC14 (RS) and PC15 (E) as output push-pull
 474:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_14 | GPIO_PIN_15;
 104              		.loc 1 474 3 view .LVU21
 105              		.loc 1 474 23 is_stmt 0 view .LVU22
 106 0050 4FF4404B 		mov	fp, #49152
 107 0054 CDF80CB0 		str	fp, [sp, #12]
 475:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 108              		.loc 1 475 3 is_stmt 1 view .LVU23
 109              		.loc 1 475 24 is_stmt 0 view .LVU24
 110 0058 0126     		movs	r6, #1
 111 005a 0496     		str	r6, [sp, #16]
 476:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 476 3 is_stmt 1 view .LVU25
 477:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 113              		.loc 1 477 3 view .LVU26
 478:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 114              		.loc 1 478 3 view .LVU27
 115 005c DFF87CA0 		ldr	r10, .L3+8
 116 0060 03A9     		add	r1, sp, #12
 117 0062 5046     		mov	r0, r10
 118 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 119              	.LVL0:
 479:Core/Src/main.c **** 
 480:Core/Src/main.c ****   // Configure PB8 (D4) and PB9 (D5) as output push-pull
 481:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8 | GPIO_PIN_9;
 120              		.loc 1 481 3 view .LVU28
 121              		.loc 1 481 23 is_stmt 0 view .LVU29
 122 0068 4FF44079 		mov	r9, #768
 123 006c CDF80C90 		str	r9, [sp, #12]
 482:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 124              		.loc 1 482 3 is_stmt 1 view .LVU30
 125 0070 DFF86C80 		ldr	r8, .L3+12
 126 0074 03A9     		add	r1, sp, #12
 127 0076 4046     		mov	r0, r8
 128 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 129              	.LVL1:
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****   // Configure PA12 (D6) and PA15 (D7) as output push-pull
 485:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12 | GPIO_PIN_15;
 130              		.loc 1 485 3 view .LVU31
 131              		.loc 1 485 23 is_stmt 0 view .LVU32
 132 007c 4FF41047 		mov	r7, #36864
 133 0080 0397     		str	r7, [sp, #12]
 486:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 134              		.loc 1 486 3 is_stmt 1 view .LVU33
 135 0082 154D     		ldr	r5, .L3+4
 136 0084 03A9     		add	r1, sp, #12
 137 0086 2846     		mov	r0, r5
 138 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 139              	.LVL2:
 487:Core/Src/main.c **** 
 488:Core/Src/main.c ****   // Set all LCD pins LOW initially
 489:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14 | GPIO_PIN_15, GPIO_PIN_RESET);
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 12


 140              		.loc 1 489 3 view .LVU34
 141 008c 2246     		mov	r2, r4
 142 008e 5946     		mov	r1, fp
 143 0090 5046     		mov	r0, r10
 144 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 145              	.LVL3:
 490:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8 | GPIO_PIN_9, GPIO_PIN_RESET);
 146              		.loc 1 490 3 view .LVU35
 147 0096 2246     		mov	r2, r4
 148 0098 4946     		mov	r1, r9
 149 009a 4046     		mov	r0, r8
 150 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 151              	.LVL4:
 491:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_12 | GPIO_PIN_15, GPIO_PIN_RESET);
 152              		.loc 1 491 3 view .LVU36
 153 00a0 2246     		mov	r2, r4
 154 00a2 3946     		mov	r1, r7
 155 00a4 2846     		mov	r0, r5
 156 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 157              	.LVL5:
 492:Core/Src/main.c **** 
 493:Core/Src/main.c **** 
 494:Core/Src/main.c ****   // -------------------------------
 495:Core/Src/main.c ****   // Button0 configuration (PA0)
 496:Core/Src/main.c ****   // -------------------------------
 497:Core/Src/main.c ****   GPIO_InitStruct.Pin = Button0_Pin;
 158              		.loc 1 497 3 view .LVU37
 159              		.loc 1 497 23 is_stmt 0 view .LVU38
 160 00aa 0396     		str	r6, [sp, #12]
 498:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING; // Interrupt on rising edge
 161              		.loc 1 498 3 is_stmt 1 view .LVU39
 162              		.loc 1 498 24 is_stmt 0 view .LVU40
 163 00ac 4FF48813 		mov	r3, #1114112
 164 00b0 0493     		str	r3, [sp, #16]
 499:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;         // Use pull-up resistor
 165              		.loc 1 499 3 is_stmt 1 view .LVU41
 166              		.loc 1 499 24 is_stmt 0 view .LVU42
 167 00b2 0596     		str	r6, [sp, #20]
 500:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 168              		.loc 1 500 3 is_stmt 1 view .LVU43
 169 00b4 03A9     		add	r1, sp, #12
 170 00b6 2846     		mov	r0, r5
 171 00b8 FFF7FEFF 		bl	HAL_GPIO_Init
 172              	.LVL6:
 501:Core/Src/main.c **** 
 502:Core/Src/main.c ****   // Enable and set EXTI line 0 interrupt priority
 503:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);
 173              		.loc 1 503 3 view .LVU44
 174 00bc 2246     		mov	r2, r4
 175 00be 0221     		movs	r1, #2
 176 00c0 0620     		movs	r0, #6
 177 00c2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 178              	.LVL7:
 504:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 179              		.loc 1 504 3 view .LVU45
 180 00c6 0620     		movs	r0, #6
 181 00c8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 13


 182              	.LVL8:
 505:Core/Src/main.c **** 
 506:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 507:Core/Src/main.c **** }
 183              		.loc 1 507 1 is_stmt 0 view .LVU46
 184 00cc 09B0     		add	sp, sp, #36
 185              	.LCFI2:
 186              		.cfi_def_cfa_offset 36
 187              		@ sp needed
 188 00ce BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 189              	.L4:
 190 00d2 00BF     		.align	2
 191              	.L3:
 192 00d4 00380240 		.word	1073887232
 193 00d8 00000240 		.word	1073872896
 194 00dc 00080240 		.word	1073874944
 195 00e0 00040240 		.word	1073873920
 196              		.cfi_endproc
 197              	.LFE142:
 199              		.section	.text.MX_DMA_Init,"ax",%progbits
 200              		.align	1
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 205              	MX_DMA_Init:
 206              	.LFB141:
 441:Core/Src/main.c **** 
 207              		.loc 1 441 1 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 8
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 00B5     		push	{lr}
 212              	.LCFI3:
 213              		.cfi_def_cfa_offset 4
 214              		.cfi_offset 14, -4
 215 0002 83B0     		sub	sp, sp, #12
 216              	.LCFI4:
 217              		.cfi_def_cfa_offset 16
 444:Core/Src/main.c **** 
 218              		.loc 1 444 3 view .LVU48
 219              	.LBB7:
 444:Core/Src/main.c **** 
 220              		.loc 1 444 3 view .LVU49
 221 0004 0021     		movs	r1, #0
 222 0006 0191     		str	r1, [sp, #4]
 444:Core/Src/main.c **** 
 223              		.loc 1 444 3 view .LVU50
 224 0008 094B     		ldr	r3, .L7
 225 000a 1A6B     		ldr	r2, [r3, #48]
 226 000c 42F40012 		orr	r2, r2, #2097152
 227 0010 1A63     		str	r2, [r3, #48]
 444:Core/Src/main.c **** 
 228              		.loc 1 444 3 view .LVU51
 229 0012 1B6B     		ldr	r3, [r3, #48]
 230 0014 03F40013 		and	r3, r3, #2097152
 231 0018 0193     		str	r3, [sp, #4]
 444:Core/Src/main.c **** 
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 14


 232              		.loc 1 444 3 view .LVU52
 233 001a 019B     		ldr	r3, [sp, #4]
 234              	.LBE7:
 444:Core/Src/main.c **** 
 235              		.loc 1 444 3 view .LVU53
 448:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 236              		.loc 1 448 3 view .LVU54
 237 001c 0A46     		mov	r2, r1
 238 001e 1020     		movs	r0, #16
 239 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 240              	.LVL9:
 449:Core/Src/main.c **** 
 241              		.loc 1 449 3 view .LVU55
 242 0024 1020     		movs	r0, #16
 243 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 244              	.LVL10:
 451:Core/Src/main.c **** 
 245              		.loc 1 451 1 is_stmt 0 view .LVU56
 246 002a 03B0     		add	sp, sp, #12
 247              	.LCFI5:
 248              		.cfi_def_cfa_offset 4
 249              		@ sp needed
 250 002c 5DF804FB 		ldr	pc, [sp], #4
 251              	.L8:
 252              		.align	2
 253              	.L7:
 254 0030 00380240 		.word	1073887232
 255              		.cfi_endproc
 256              	.LFE141:
 258              		.section	.rodata.EXTI0_IRQHandler.str1.4,"aMS",%progbits,1
 259              		.align	2
 260              	.LC0:
 261 0000 53696E65 		.ascii	"Sine\000"
 261      00
 262 0005 000000   		.align	2
 263              	.LC1:
 264 0008 53617774 		.ascii	"Sawtooth\000"
 264      6F6F7468 
 264      00
 265 0011 000000   		.align	2
 266              	.LC2:
 267 0014 54726961 		.ascii	"Triangle\000"
 267      6E676C65 
 267      00
 268 001d 000000   		.align	2
 269              	.LC3:
 270 0020 5069616E 		.ascii	"Piano\000"
 270      6F00
 271 0026 0000     		.align	2
 272              	.LC4:
 273 0028 47756974 		.ascii	"Guitar\000"
 273      617200
 274 002f 00       		.align	2
 275              	.LC5:
 276 0030 4472756D 		.ascii	"Drum\000"
 276      00
 277              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 15


 278              		.align	1
 279              		.global	EXTI0_IRQHandler
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 284              	EXTI0_IRQHandler:
 285              	.LFB143:
 508:Core/Src/main.c **** 
 509:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 510:Core/Src/main.c **** void EXTI0_IRQHandler(void){
 286              		.loc 1 510 28 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 10B5     		push	{r4, lr}
 291              	.LCFI6:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 4, -8
 294              		.cfi_offset 14, -4
 511:Core/Src/main.c **** 
 512:Core/Src/main.c **** 	// TODO: Debounce using HAL_GetTick()
 513:Core/Src/main.c ****   uint32_t current_time = HAL_GetTick();
 295              		.loc 1 513 3 view .LVU58
 296              		.loc 1 513 27 is_stmt 0 view .LVU59
 297 0002 FFF7FEFF 		bl	HAL_GetTick
 298              	.LVL11:
 514:Core/Src/main.c **** if (current_time - last_button_press < 200){
 299              		.loc 1 514 1 is_stmt 1 view .LVU60
 300              		.loc 1 514 18 is_stmt 0 view .LVU61
 301 0006 3B4B     		ldr	r3, .L23
 302 0008 1B68     		ldr	r3, [r3]
 303 000a C31A     		subs	r3, r0, r3
 304              		.loc 1 514 4 view .LVU62
 305 000c C72B     		cmp	r3, #199
 306 000e 1FD9     		bls	.L22
 515:Core/Src/main.c ****   HAL_GPIO_EXTI_IRQHandler(Button0_Pin); // clear interrupt flags
 516:Core/Src/main.c ****   return; // ignore press
 517:Core/Src/main.c **** }
 518:Core/Src/main.c **** last_button_press = current_time;
 307              		.loc 1 518 1 is_stmt 1 view .LVU63
 308              		.loc 1 518 19 is_stmt 0 view .LVU64
 309 0010 384B     		ldr	r3, .L23
 310 0012 1860     		str	r0, [r3]
 519:Core/Src/main.c **** 	// TODO: Disable DMA transfer and abort IT, then start DMA in IT mode with new LUT and re-enable t
 520:Core/Src/main.c **** 	// HINT: Consider using C's "switch" function to handle LUT changes
 521:Core/Src/main.c ****     __HAL_TIM_DISABLE_DMA(&htim2, TIM_DMA_CC1);
 311              		.loc 1 521 5 is_stmt 1 view .LVU65
 312 0014 384B     		ldr	r3, .L23+4
 313 0016 1A68     		ldr	r2, [r3]
 314 0018 D368     		ldr	r3, [r2, #12]
 315 001a 23F40073 		bic	r3, r3, #512
 316 001e D360     		str	r3, [r2, #12]
 522:Core/Src/main.c ****     
 523:Core/Src/main.c ****     // Abort the current DMA transfer
 524:Core/Src/main.c ****     HAL_DMA_Abort_IT(&hdma_tim2_ch1);
 317              		.loc 1 524 5 view .LVU66
 318 0020 3648     		ldr	r0, .L23+8
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 16


 319              	.LVL12:
 320              		.loc 1 524 5 is_stmt 0 view .LVU67
 321 0022 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 322              	.LVL13:
 525:Core/Src/main.c ****     
 526:Core/Src/main.c ****     // Move to next waveform (cycle through 0-5)
 527:Core/Src/main.c ****     current_waveform = (current_waveform + 1) % 6;
 323              		.loc 1 527 5 is_stmt 1 view .LVU68
 324              		.loc 1 527 42 is_stmt 0 view .LVU69
 325 0026 3649     		ldr	r1, .L23+12
 326 0028 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 327 002a 0132     		adds	r2, r2, #1
 328              		.loc 1 527 47 view .LVU70
 329 002c 354B     		ldr	r3, .L23+16
 330 002e 83FB0203 		smull	r0, r3, r3, r2
 331 0032 03EB4303 		add	r3, r3, r3, lsl #1
 332 0036 A2EB4303 		sub	r3, r2, r3, lsl #1
 333              		.loc 1 527 22 view .LVU71
 334 003a DBB2     		uxtb	r3, r3
 335 003c 0B70     		strb	r3, [r1]
 528:Core/Src/main.c **** 
 529:Core/Src/main.c ****     uint32_t *selected_LUT;
 336              		.loc 1 529 5 is_stmt 1 view .LVU72
 530:Core/Src/main.c ****     
 531:Core/Src/main.c ****     switch(current_waveform) {
 337              		.loc 1 531 5 view .LVU73
 338 003e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 339 0040 DBB2     		uxtb	r3, r3
 340 0042 052B     		cmp	r3, #5
 341 0044 4ED8     		bhi	.L12
 342 0046 DFE803F0 		tbb	[pc, r3]
 343              	.L14:
 344 004a 07       		.byte	(.L19-.L14)/2
 345 004b 22       		.byte	(.L18-.L14)/2
 346 004c 2A       		.byte	(.L17-.L14)/2
 347 004d 32       		.byte	(.L16-.L14)/2
 348 004e 3B       		.byte	(.L15-.L14)/2
 349 004f 44       		.byte	(.L13-.L14)/2
 350              	.LVL14:
 351              		.p2align 1
 352              	.L22:
 515:Core/Src/main.c ****   return; // ignore press
 353              		.loc 1 515 3 view .LVU74
 354 0050 0120     		movs	r0, #1
 355              	.LVL15:
 515:Core/Src/main.c ****   return; // ignore press
 356              		.loc 1 515 3 is_stmt 0 view .LVU75
 357 0052 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 358              	.LVL16:
 516:Core/Src/main.c **** }
 359              		.loc 1 516 3 is_stmt 1 view .LVU76
 360 0056 19E0     		b	.L9
 361              	.L19:
 532:Core/Src/main.c ****         case 0:
 533:Core/Src/main.c ****             selected_LUT = Sin_LUT;
 362              		.loc 1 533 13 view .LVU77
 363              	.LVL17:
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 17


 534:Core/Src/main.c ****             lcd_command(CLEAR);
 364              		.loc 1 534 13 view .LVU78
 365 0058 0120     		movs	r0, #1
 366 005a FFF7FEFF 		bl	lcd_command
 367              	.LVL18:
 535:Core/Src/main.c ****             lcd_putstring("Sine");
 368              		.loc 1 535 13 view .LVU79
 369 005e 2A48     		ldr	r0, .L23+20
 370 0060 FFF7FEFF 		bl	lcd_putstring
 371              	.LVL19:
 536:Core/Src/main.c ****             break;
 372              		.loc 1 536 13 view .LVU80
 533:Core/Src/main.c ****             lcd_command(CLEAR);
 373              		.loc 1 533 26 is_stmt 0 view .LVU81
 374 0064 294C     		ldr	r4, .L23+24
 375              	.LVL20:
 376              	.L20:
 537:Core/Src/main.c ****         case 1:
 538:Core/Src/main.c ****             selected_LUT = Saw_LUT;
 539:Core/Src/main.c ****             lcd_command(CLEAR);
 540:Core/Src/main.c ****             lcd_putstring("Sawtooth");
 541:Core/Src/main.c ****             break;
 542:Core/Src/main.c ****         case 2:
 543:Core/Src/main.c ****             selected_LUT = Triangle_LUT;
 544:Core/Src/main.c ****             lcd_command(CLEAR);
 545:Core/Src/main.c ****             lcd_putstring("Triangle");
 546:Core/Src/main.c ****             break;
 547:Core/Src/main.c ****         case 3:
 548:Core/Src/main.c ****             selected_LUT = Piano_LUT;
 549:Core/Src/main.c ****             lcd_command(CLEAR);
 550:Core/Src/main.c ****             lcd_putstring("Piano");
 551:Core/Src/main.c ****             break;
 552:Core/Src/main.c ****         case 4:
 553:Core/Src/main.c ****             selected_LUT = Guitar_LUT;
 554:Core/Src/main.c ****             lcd_command(CLEAR);
 555:Core/Src/main.c ****             lcd_putstring("Guitar");
 556:Core/Src/main.c ****             break;
 557:Core/Src/main.c ****         case 5:
 558:Core/Src/main.c ****             selected_LUT = Drum_LUT;
 559:Core/Src/main.c ****             lcd_command(CLEAR);
 560:Core/Src/main.c ****             lcd_putstring("Drum");
 561:Core/Src/main.c ****             break;
 562:Core/Src/main.c ****         default:
 563:Core/Src/main.c ****             selected_LUT = Sin_LUT;
 564:Core/Src/main.c ****             lcd_command(CLEAR);
 565:Core/Src/main.c ****             lcd_putstring("Sine");
 566:Core/Src/main.c ****             break;
 567:Core/Src/main.c ****     }
 568:Core/Src/main.c ****     // Start DMA with new LUT
 569:Core/Src/main.c ****     HAL_DMA_Start_IT(&hdma_tim2_ch1, (uint32_t)selected_LUT, DestAddress, NS);
 377              		.loc 1 569 5 is_stmt 1 view .LVU82
 378 0066 8023     		movs	r3, #128
 379 0068 294A     		ldr	r2, .L23+28
 380 006a 1268     		ldr	r2, [r2]
 381 006c 2146     		mov	r1, r4
 382 006e 2348     		ldr	r0, .L23+8
 383 0070 FFF7FEFF 		bl	HAL_DMA_Start_IT
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 18


 384              	.LVL21:
 570:Core/Src/main.c ****     
 571:Core/Src/main.c ****     // Re-enable DMA transfer
 572:Core/Src/main.c ****     __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC1);
 385              		.loc 1 572 5 view .LVU83
 386 0074 204B     		ldr	r3, .L23+4
 387 0076 1A68     		ldr	r2, [r3]
 388 0078 D368     		ldr	r3, [r2, #12]
 389 007a 43F40073 		orr	r3, r3, #512
 390 007e D360     		str	r3, [r2, #12]
 573:Core/Src/main.c ****     
 574:Core/Src/main.c ****     HAL_GPIO_EXTI_IRQHandler(Button0_Pin); // Clear interrupt flags
 391              		.loc 1 574 5 view .LVU84
 392 0080 0120     		movs	r0, #1
 393 0082 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 394              	.LVL22:
 575:Core/Src/main.c **** 
 576:Core/Src/main.c **** 
 577:Core/Src/main.c **** 	HAL_GPIO_EXTI_IRQHandler(Button0_Pin); // Clear interrupt flags
 395              		.loc 1 577 2 view .LVU85
 396 0086 0120     		movs	r0, #1
 397 0088 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 398              	.LVL23:
 399              	.L9:
 578:Core/Src/main.c **** }
 400              		.loc 1 578 1 is_stmt 0 view .LVU86
 401 008c 10BD     		pop	{r4, pc}
 402              	.L18:
 538:Core/Src/main.c ****             lcd_command(CLEAR);
 403              		.loc 1 538 13 is_stmt 1 view .LVU87
 404              	.LVL24:
 539:Core/Src/main.c ****             lcd_putstring("Sawtooth");
 405              		.loc 1 539 13 view .LVU88
 406 008e 0120     		movs	r0, #1
 407 0090 FFF7FEFF 		bl	lcd_command
 408              	.LVL25:
 540:Core/Src/main.c ****             break;
 409              		.loc 1 540 13 view .LVU89
 410 0094 1F48     		ldr	r0, .L23+32
 411 0096 FFF7FEFF 		bl	lcd_putstring
 412              	.LVL26:
 541:Core/Src/main.c ****         case 2:
 413              		.loc 1 541 13 view .LVU90
 538:Core/Src/main.c ****             lcd_command(CLEAR);
 414              		.loc 1 538 26 is_stmt 0 view .LVU91
 415 009a 1F4C     		ldr	r4, .L23+36
 541:Core/Src/main.c ****         case 2:
 416              		.loc 1 541 13 view .LVU92
 417 009c E3E7     		b	.L20
 418              	.LVL27:
 419              	.L17:
 543:Core/Src/main.c ****             lcd_command(CLEAR);
 420              		.loc 1 543 13 is_stmt 1 view .LVU93
 544:Core/Src/main.c ****             lcd_putstring("Triangle");
 421              		.loc 1 544 13 view .LVU94
 422 009e 0120     		movs	r0, #1
 423 00a0 FFF7FEFF 		bl	lcd_command
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 19


 424              	.LVL28:
 545:Core/Src/main.c ****             break;
 425              		.loc 1 545 13 view .LVU95
 426 00a4 1D48     		ldr	r0, .L23+40
 427 00a6 FFF7FEFF 		bl	lcd_putstring
 428              	.LVL29:
 546:Core/Src/main.c ****         case 3:
 429              		.loc 1 546 13 view .LVU96
 543:Core/Src/main.c ****             lcd_command(CLEAR);
 430              		.loc 1 543 26 is_stmt 0 view .LVU97
 431 00aa 1D4C     		ldr	r4, .L23+44
 546:Core/Src/main.c ****         case 3:
 432              		.loc 1 546 13 view .LVU98
 433 00ac DBE7     		b	.L20
 434              	.LVL30:
 435              	.L16:
 548:Core/Src/main.c ****             lcd_command(CLEAR);
 436              		.loc 1 548 13 is_stmt 1 view .LVU99
 548:Core/Src/main.c ****             lcd_command(CLEAR);
 437              		.loc 1 548 26 is_stmt 0 view .LVU100
 438 00ae 1D4B     		ldr	r3, .L23+48
 439 00b0 1C68     		ldr	r4, [r3]
 440              	.LVL31:
 549:Core/Src/main.c ****             lcd_putstring("Piano");
 441              		.loc 1 549 13 is_stmt 1 view .LVU101
 442 00b2 0120     		movs	r0, #1
 443 00b4 FFF7FEFF 		bl	lcd_command
 444              	.LVL32:
 550:Core/Src/main.c ****             break;
 445              		.loc 1 550 13 view .LVU102
 446 00b8 1B48     		ldr	r0, .L23+52
 447 00ba FFF7FEFF 		bl	lcd_putstring
 448              	.LVL33:
 551:Core/Src/main.c ****         case 4:
 449              		.loc 1 551 13 view .LVU103
 450 00be D2E7     		b	.L20
 451              	.LVL34:
 452              	.L15:
 553:Core/Src/main.c ****             lcd_command(CLEAR);
 453              		.loc 1 553 13 view .LVU104
 553:Core/Src/main.c ****             lcd_command(CLEAR);
 454              		.loc 1 553 26 is_stmt 0 view .LVU105
 455 00c0 1A4B     		ldr	r3, .L23+56
 456 00c2 1C68     		ldr	r4, [r3]
 457              	.LVL35:
 554:Core/Src/main.c ****             lcd_putstring("Guitar");
 458              		.loc 1 554 13 is_stmt 1 view .LVU106
 459 00c4 0120     		movs	r0, #1
 460 00c6 FFF7FEFF 		bl	lcd_command
 461              	.LVL36:
 555:Core/Src/main.c ****             break;
 462              		.loc 1 555 13 view .LVU107
 463 00ca 1948     		ldr	r0, .L23+60
 464 00cc FFF7FEFF 		bl	lcd_putstring
 465              	.LVL37:
 556:Core/Src/main.c ****         case 5:
 466              		.loc 1 556 13 view .LVU108
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 20


 467 00d0 C9E7     		b	.L20
 468              	.LVL38:
 469              	.L13:
 558:Core/Src/main.c ****             lcd_command(CLEAR);
 470              		.loc 1 558 13 view .LVU109
 558:Core/Src/main.c ****             lcd_command(CLEAR);
 471              		.loc 1 558 26 is_stmt 0 view .LVU110
 472 00d2 184B     		ldr	r3, .L23+64
 473 00d4 1C68     		ldr	r4, [r3]
 474              	.LVL39:
 559:Core/Src/main.c ****             lcd_putstring("Drum");
 475              		.loc 1 559 13 is_stmt 1 view .LVU111
 476 00d6 0120     		movs	r0, #1
 477 00d8 FFF7FEFF 		bl	lcd_command
 478              	.LVL40:
 560:Core/Src/main.c ****             break;
 479              		.loc 1 560 13 view .LVU112
 480 00dc 1648     		ldr	r0, .L23+68
 481 00de FFF7FEFF 		bl	lcd_putstring
 482              	.LVL41:
 561:Core/Src/main.c ****         default:
 483              		.loc 1 561 13 view .LVU113
 484 00e2 C0E7     		b	.L20
 485              	.LVL42:
 486              	.L12:
 563:Core/Src/main.c ****             lcd_command(CLEAR);
 487              		.loc 1 563 13 view .LVU114
 564:Core/Src/main.c ****             lcd_putstring("Sine");
 488              		.loc 1 564 13 view .LVU115
 489 00e4 0120     		movs	r0, #1
 490 00e6 FFF7FEFF 		bl	lcd_command
 491              	.LVL43:
 565:Core/Src/main.c ****             break;
 492              		.loc 1 565 13 view .LVU116
 493 00ea 0748     		ldr	r0, .L23+20
 494 00ec FFF7FEFF 		bl	lcd_putstring
 495              	.LVL44:
 566:Core/Src/main.c ****     }
 496              		.loc 1 566 13 view .LVU117
 563:Core/Src/main.c ****             lcd_command(CLEAR);
 497              		.loc 1 563 26 is_stmt 0 view .LVU118
 498 00f0 064C     		ldr	r4, .L23+24
 566:Core/Src/main.c ****     }
 499              		.loc 1 566 13 view .LVU119
 500 00f2 B8E7     		b	.L20
 501              	.L24:
 502              		.align	2
 503              	.L23:
 504 00f4 00000000 		.word	last_button_press
 505 00f8 00000000 		.word	htim2
 506 00fc 00000000 		.word	hdma_tim2_ch1
 507 0100 00000000 		.word	current_waveform
 508 0104 ABAAAA2A 		.word	715827883
 509 0108 00000000 		.word	.LC0
 510 010c 00000000 		.word	Sin_LUT
 511 0110 00000000 		.word	DestAddress
 512 0114 08000000 		.word	.LC1
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 21


 513 0118 00000000 		.word	Saw_LUT
 514 011c 14000000 		.word	.LC2
 515 0120 00000000 		.word	Triangle_LUT
 516 0124 00000000 		.word	Piano_LUT
 517 0128 20000000 		.word	.LC3
 518 012c 00000000 		.word	Guitar_LUT
 519 0130 28000000 		.word	.LC4
 520 0134 00000000 		.word	Drum_LUT
 521 0138 30000000 		.word	.LC5
 522              		.cfi_endproc
 523              	.LFE143:
 525              		.section	.text.Error_Handler,"ax",%progbits
 526              		.align	1
 527              		.global	Error_Handler
 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 532              	Error_Handler:
 533              	.LFB144:
 579:Core/Src/main.c **** /* USER CODE END 4 */
 580:Core/Src/main.c **** 
 581:Core/Src/main.c **** /**
 582:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 583:Core/Src/main.c ****   * @retval None
 584:Core/Src/main.c ****   */
 585:Core/Src/main.c **** void Error_Handler(void)
 586:Core/Src/main.c **** {
 534              		.loc 1 586 1 is_stmt 1 view -0
 535              		.cfi_startproc
 536              		@ Volatile: function does not return.
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 539              		@ link register save eliminated.
 587:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 588:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 589:Core/Src/main.c ****   __disable_irq();
 540              		.loc 1 589 3 view .LVU121
 541              	.LBB8:
 542              	.LBI8:
 543              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 22


  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 23


  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 24


 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 25


 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 26


 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 27


 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 28


 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 29


 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 30


 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 31


 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 32


 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 33


 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 34


 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 35


 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 36


 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 37


 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 38


 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 544              		.loc 2 960 27 view .LVU122
 545              	.LBB9:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 546              		.loc 2 962 3 view .LVU123
 547              		.syntax unified
 548              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 549 0000 72B6     		cpsid i
 550              	@ 0 "" 2
 551              		.thumb
 552              		.syntax unified
 553              	.L26:
 554              	.LBE9:
 555              	.LBE8:
 590:Core/Src/main.c ****   while (1)
 556              		.loc 1 590 3 view .LVU124
 591:Core/Src/main.c ****   {
 592:Core/Src/main.c ****   }
 557              		.loc 1 592 3 view .LVU125
 590:Core/Src/main.c ****   while (1)
 558              		.loc 1 590 9 view .LVU126
 559 0002 FEE7     		b	.L26
 560              		.cfi_endproc
 561              	.LFE144:
 563              		.section	.text.MX_TIM2_Init,"ax",%progbits
 564              		.align	1
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 39


 565              		.syntax unified
 566              		.thumb
 567              		.thumb_func
 569              	MX_TIM2_Init:
 570              	.LFB139:
 306:Core/Src/main.c **** 
 571              		.loc 1 306 1 view -0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 56
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575 0000 00B5     		push	{lr}
 576              	.LCFI7:
 577              		.cfi_def_cfa_offset 4
 578              		.cfi_offset 14, -4
 579 0002 8FB0     		sub	sp, sp, #60
 580              	.LCFI8:
 581              		.cfi_def_cfa_offset 64
 312:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 582              		.loc 1 312 3 view .LVU128
 312:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 583              		.loc 1 312 26 is_stmt 0 view .LVU129
 584 0004 0023     		movs	r3, #0
 585 0006 0A93     		str	r3, [sp, #40]
 586 0008 0B93     		str	r3, [sp, #44]
 587 000a 0C93     		str	r3, [sp, #48]
 588 000c 0D93     		str	r3, [sp, #52]
 313:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 589              		.loc 1 313 3 is_stmt 1 view .LVU130
 313:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 590              		.loc 1 313 27 is_stmt 0 view .LVU131
 591 000e 0893     		str	r3, [sp, #32]
 592 0010 0993     		str	r3, [sp, #36]
 314:Core/Src/main.c **** 
 593              		.loc 1 314 3 is_stmt 1 view .LVU132
 314:Core/Src/main.c **** 
 594              		.loc 1 314 22 is_stmt 0 view .LVU133
 595 0012 0193     		str	r3, [sp, #4]
 596 0014 0293     		str	r3, [sp, #8]
 597 0016 0393     		str	r3, [sp, #12]
 598 0018 0493     		str	r3, [sp, #16]
 599 001a 0593     		str	r3, [sp, #20]
 600 001c 0693     		str	r3, [sp, #24]
 601 001e 0793     		str	r3, [sp, #28]
 319:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 602              		.loc 1 319 3 is_stmt 1 view .LVU134
 319:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 603              		.loc 1 319 18 is_stmt 0 view .LVU135
 604 0020 3648     		ldr	r0, .L41
 605 0022 4FF08042 		mov	r2, #1073741824
 606 0026 0260     		str	r2, [r0]
 320:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 607              		.loc 1 320 3 is_stmt 1 view .LVU136
 320:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 608              		.loc 1 320 24 is_stmt 0 view .LVU137
 609 0028 4360     		str	r3, [r0, #4]
 321:Core/Src/main.c ****   htim2.Init.Period = TIM2_Ticks -1;
 610              		.loc 1 321 3 is_stmt 1 view .LVU138
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 40


 321:Core/Src/main.c ****   htim2.Init.Period = TIM2_Ticks -1;
 611              		.loc 1 321 26 is_stmt 0 view .LVU139
 612 002a 8360     		str	r3, [r0, #8]
 322:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 613              		.loc 1 322 3 is_stmt 1 view .LVU140
 322:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 614              		.loc 1 322 34 is_stmt 0 view .LVU141
 615 002c 344A     		ldr	r2, .L41+4
 616 002e 1268     		ldr	r2, [r2]
 617 0030 013A     		subs	r2, r2, #1
 322:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 618              		.loc 1 322 21 view .LVU142
 619 0032 C260     		str	r2, [r0, #12]
 323:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 620              		.loc 1 323 3 is_stmt 1 view .LVU143
 323:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 621              		.loc 1 323 28 is_stmt 0 view .LVU144
 622 0034 0361     		str	r3, [r0, #16]
 324:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 623              		.loc 1 324 3 is_stmt 1 view .LVU145
 324:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 624              		.loc 1 324 32 is_stmt 0 view .LVU146
 625 0036 8361     		str	r3, [r0, #24]
 325:Core/Src/main.c ****   {
 626              		.loc 1 325 3 is_stmt 1 view .LVU147
 325:Core/Src/main.c ****   {
 627              		.loc 1 325 7 is_stmt 0 view .LVU148
 628 0038 FFF7FEFF 		bl	HAL_TIM_Base_Init
 629              	.LVL45:
 325:Core/Src/main.c ****   {
 630              		.loc 1 325 6 discriminator 1 view .LVU149
 631 003c 0028     		cmp	r0, #0
 632 003e 50D1     		bne	.L35
 329:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 633              		.loc 1 329 3 is_stmt 1 view .LVU150
 329:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 634              		.loc 1 329 34 is_stmt 0 view .LVU151
 635 0040 4FF48053 		mov	r3, #4096
 636 0044 0A93     		str	r3, [sp, #40]
 330:Core/Src/main.c ****   {
 637              		.loc 1 330 3 is_stmt 1 view .LVU152
 330:Core/Src/main.c ****   {
 638              		.loc 1 330 7 is_stmt 0 view .LVU153
 639 0046 0AA9     		add	r1, sp, #40
 640 0048 2C48     		ldr	r0, .L41
 641 004a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 642              	.LVL46:
 330:Core/Src/main.c ****   {
 643              		.loc 1 330 6 discriminator 1 view .LVU154
 644 004e 0028     		cmp	r0, #0
 645 0050 49D1     		bne	.L36
 334:Core/Src/main.c ****   {
 646              		.loc 1 334 3 is_stmt 1 view .LVU155
 334:Core/Src/main.c ****   {
 647              		.loc 1 334 7 is_stmt 0 view .LVU156
 648 0052 2A48     		ldr	r0, .L41
 649 0054 FFF7FEFF 		bl	HAL_TIM_OC_Init
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 41


 650              	.LVL47:
 334:Core/Src/main.c ****   {
 651              		.loc 1 334 6 discriminator 1 view .LVU157
 652 0058 0028     		cmp	r0, #0
 653 005a 46D1     		bne	.L37
 338:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 654              		.loc 1 338 3 is_stmt 1 view .LVU158
 338:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 655              		.loc 1 338 37 is_stmt 0 view .LVU159
 656 005c 0023     		movs	r3, #0
 657 005e 0893     		str	r3, [sp, #32]
 339:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 658              		.loc 1 339 3 is_stmt 1 view .LVU160
 339:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 659              		.loc 1 339 33 is_stmt 0 view .LVU161
 660 0060 0993     		str	r3, [sp, #36]
 340:Core/Src/main.c ****   {
 661              		.loc 1 340 3 is_stmt 1 view .LVU162
 340:Core/Src/main.c ****   {
 662              		.loc 1 340 7 is_stmt 0 view .LVU163
 663 0062 08A9     		add	r1, sp, #32
 664 0064 2548     		ldr	r0, .L41
 665 0066 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 666              	.LVL48:
 340:Core/Src/main.c ****   {
 667              		.loc 1 340 6 discriminator 1 view .LVU164
 668 006a 0028     		cmp	r0, #0
 669 006c 3FD1     		bne	.L38
 344:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 670              		.loc 1 344 3 is_stmt 1 view .LVU165
 344:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 671              		.loc 1 344 20 is_stmt 0 view .LVU166
 672 006e 0022     		movs	r2, #0
 673 0070 0192     		str	r2, [sp, #4]
 345:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 674              		.loc 1 345 3 is_stmt 1 view .LVU167
 345:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 675              		.loc 1 345 19 is_stmt 0 view .LVU168
 676 0072 0292     		str	r2, [sp, #8]
 346:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 677              		.loc 1 346 3 is_stmt 1 view .LVU169
 346:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 678              		.loc 1 346 24 is_stmt 0 view .LVU170
 679 0074 0392     		str	r2, [sp, #12]
 347:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 680              		.loc 1 347 3 is_stmt 1 view .LVU171
 347:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 681              		.loc 1 347 24 is_stmt 0 view .LVU172
 682 0076 0592     		str	r2, [sp, #20]
 348:Core/Src/main.c ****   {
 683              		.loc 1 348 3 is_stmt 1 view .LVU173
 348:Core/Src/main.c ****   {
 684              		.loc 1 348 7 is_stmt 0 view .LVU174
 685 0078 01A9     		add	r1, sp, #4
 686 007a 2048     		ldr	r0, .L41
 687 007c FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 688              	.LVL49:
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 42


 348:Core/Src/main.c ****   {
 689              		.loc 1 348 6 discriminator 1 view .LVU175
 690 0080 0028     		cmp	r0, #0
 691 0082 36D1     		bne	.L39
 354:Core/Src/main.c **** 
 692              		.loc 1 354 3 is_stmt 1 view .LVU176
 693              	.LBB10:
 354:Core/Src/main.c **** 
 694              		.loc 1 354 3 view .LVU177
 695 0084 0023     		movs	r3, #0
 696 0086 0093     		str	r3, [sp]
 354:Core/Src/main.c **** 
 697              		.loc 1 354 3 view .LVU178
 698 0088 1E4A     		ldr	r2, .L41+8
 699 008a 116B     		ldr	r1, [r2, #48]
 700 008c 41F40011 		orr	r1, r1, #2097152
 701 0090 1163     		str	r1, [r2, #48]
 354:Core/Src/main.c **** 
 702              		.loc 1 354 3 view .LVU179
 703 0092 126B     		ldr	r2, [r2, #48]
 704 0094 02F40012 		and	r2, r2, #2097152
 705 0098 0092     		str	r2, [sp]
 354:Core/Src/main.c **** 
 706              		.loc 1 354 3 view .LVU180
 707 009a 009A     		ldr	r2, [sp]
 708              	.LBE10:
 354:Core/Src/main.c **** 
 709              		.loc 1 354 3 view .LVU181
 356:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 710              		.loc 1 356 3 view .LVU182
 356:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 711              		.loc 1 356 26 is_stmt 0 view .LVU183
 712 009c 1A48     		ldr	r0, .L41+12
 713 009e 1B4A     		ldr	r2, .L41+16
 714 00a0 0260     		str	r2, [r0]
 357:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 715              		.loc 1 357 3 is_stmt 1 view .LVU184
 357:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 716              		.loc 1 357 30 is_stmt 0 view .LVU185
 717 00a2 4FF0C062 		mov	r2, #100663296
 718 00a6 4260     		str	r2, [r0, #4]
 358:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 719              		.loc 1 358 3 is_stmt 1 view .LVU186
 358:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 720              		.loc 1 358 32 is_stmt 0 view .LVU187
 721 00a8 4022     		movs	r2, #64
 722 00aa 8260     		str	r2, [r0, #8]
 359:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 723              		.loc 1 359 3 is_stmt 1 view .LVU188
 359:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 724              		.loc 1 359 32 is_stmt 0 view .LVU189
 725 00ac C360     		str	r3, [r0, #12]
 360:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 726              		.loc 1 360 3 is_stmt 1 view .LVU190
 360:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 727              		.loc 1 360 29 is_stmt 0 view .LVU191
 728 00ae 4FF48062 		mov	r2, #1024
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 43


 729 00b2 0261     		str	r2, [r0, #16]
 361:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 730              		.loc 1 361 3 is_stmt 1 view .LVU192
 361:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 731              		.loc 1 361 42 is_stmt 0 view .LVU193
 732 00b4 4FF48052 		mov	r2, #4096
 733 00b8 4261     		str	r2, [r0, #20]
 362:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 734              		.loc 1 362 3 is_stmt 1 view .LVU194
 362:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 735              		.loc 1 362 39 is_stmt 0 view .LVU195
 736 00ba 4FF48042 		mov	r2, #16384
 737 00be 8261     		str	r2, [r0, #24]
 363:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 738              		.loc 1 363 3 is_stmt 1 view .LVU196
 363:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 739              		.loc 1 363 27 is_stmt 0 view .LVU197
 740 00c0 4FF48072 		mov	r2, #256
 741 00c4 C261     		str	r2, [r0, #28]
 364:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 742              		.loc 1 364 3 is_stmt 1 view .LVU198
 364:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 743              		.loc 1 364 31 is_stmt 0 view .LVU199
 744 00c6 4FF40032 		mov	r2, #131072
 745 00ca 0262     		str	r2, [r0, #32]
 365:Core/Src/main.c **** 
 746              		.loc 1 365 3 is_stmt 1 view .LVU200
 365:Core/Src/main.c **** 
 747              		.loc 1 365 31 is_stmt 0 view .LVU201
 748 00cc 4362     		str	r3, [r0, #36]
 367:Core/Src/main.c ****   {
 749              		.loc 1 367 3 is_stmt 1 view .LVU202
 367:Core/Src/main.c ****   {
 750              		.loc 1 367 7 is_stmt 0 view .LVU203
 751 00ce FFF7FEFF 		bl	HAL_DMA_Init
 752              	.LVL50:
 367:Core/Src/main.c ****   {
 753              		.loc 1 367 6 discriminator 1 view .LVU204
 754 00d2 80B9     		cbnz	r0, .L40
 373:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 755              		.loc 1 373 3 is_stmt 1 view .LVU205
 373:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 756              		.loc 1 373 3 view .LVU206
 757 00d4 094A     		ldr	r2, .L41
 758 00d6 0C4B     		ldr	r3, .L41+12
 759 00d8 5362     		str	r3, [r2, #36]
 373:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 760              		.loc 1 373 3 view .LVU207
 761 00da 9A63     		str	r2, [r3, #56]
 373:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 762              		.loc 1 373 3 view .LVU208
 376:Core/Src/main.c **** 
 763              		.loc 1 376 1 is_stmt 0 view .LVU209
 764 00dc 0FB0     		add	sp, sp, #60
 765              	.LCFI9:
 766              		.cfi_remember_state
 767              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 44


 768              		@ sp needed
 769 00de 5DF804FB 		ldr	pc, [sp], #4
 770              	.L35:
 771              	.LCFI10:
 772              		.cfi_restore_state
 327:Core/Src/main.c ****   }
 773              		.loc 1 327 5 is_stmt 1 view .LVU210
 774 00e2 FFF7FEFF 		bl	Error_Handler
 775              	.LVL51:
 776              	.L36:
 332:Core/Src/main.c ****   }
 777              		.loc 1 332 5 view .LVU211
 778 00e6 FFF7FEFF 		bl	Error_Handler
 779              	.LVL52:
 780              	.L37:
 336:Core/Src/main.c ****   }
 781              		.loc 1 336 5 view .LVU212
 782 00ea FFF7FEFF 		bl	Error_Handler
 783              	.LVL53:
 784              	.L38:
 342:Core/Src/main.c ****   }
 785              		.loc 1 342 5 view .LVU213
 786 00ee FFF7FEFF 		bl	Error_Handler
 787              	.LVL54:
 788              	.L39:
 350:Core/Src/main.c ****   }
 789              		.loc 1 350 5 view .LVU214
 790 00f2 FFF7FEFF 		bl	Error_Handler
 791              	.LVL55:
 792              	.L40:
 369:Core/Src/main.c ****   }
 793              		.loc 1 369 7 view .LVU215
 794 00f6 FFF7FEFF 		bl	Error_Handler
 795              	.LVL56:
 796              	.L42:
 797 00fa 00BF     		.align	2
 798              	.L41:
 799 00fc 00000000 		.word	htim2
 800 0100 00000000 		.word	TIM2_Ticks
 801 0104 00380240 		.word	1073887232
 802 0108 00000000 		.word	hdma_tim2_ch1
 803 010c 88600240 		.word	1073897608
 804              		.cfi_endproc
 805              	.LFE139:
 807              		.section	.text.MX_TIM3_Init,"ax",%progbits
 808              		.align	1
 809              		.syntax unified
 810              		.thumb
 811              		.thumb_func
 813              	MX_TIM3_Init:
 814              	.LFB140:
 384:Core/Src/main.c **** 
 815              		.loc 1 384 1 view -0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 56
 818              		@ frame_needed = 0, uses_anonymous_args = 0
 819 0000 00B5     		push	{lr}
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 45


 820              	.LCFI11:
 821              		.cfi_def_cfa_offset 4
 822              		.cfi_offset 14, -4
 823 0002 8FB0     		sub	sp, sp, #60
 824              	.LCFI12:
 825              		.cfi_def_cfa_offset 64
 390:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 826              		.loc 1 390 3 view .LVU217
 390:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 827              		.loc 1 390 26 is_stmt 0 view .LVU218
 828 0004 0023     		movs	r3, #0
 829 0006 0A93     		str	r3, [sp, #40]
 830 0008 0B93     		str	r3, [sp, #44]
 831 000a 0C93     		str	r3, [sp, #48]
 832 000c 0D93     		str	r3, [sp, #52]
 391:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 833              		.loc 1 391 3 is_stmt 1 view .LVU219
 391:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 834              		.loc 1 391 27 is_stmt 0 view .LVU220
 835 000e 0893     		str	r3, [sp, #32]
 836 0010 0993     		str	r3, [sp, #36]
 392:Core/Src/main.c **** 
 837              		.loc 1 392 3 is_stmt 1 view .LVU221
 392:Core/Src/main.c **** 
 838              		.loc 1 392 22 is_stmt 0 view .LVU222
 839 0012 0193     		str	r3, [sp, #4]
 840 0014 0293     		str	r3, [sp, #8]
 841 0016 0393     		str	r3, [sp, #12]
 842 0018 0493     		str	r3, [sp, #16]
 843 001a 0593     		str	r3, [sp, #20]
 844 001c 0693     		str	r3, [sp, #24]
 845 001e 0793     		str	r3, [sp, #28]
 397:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 846              		.loc 1 397 3 is_stmt 1 view .LVU223
 397:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 847              		.loc 1 397 18 is_stmt 0 view .LVU224
 848 0020 1E48     		ldr	r0, .L55
 849 0022 1F4A     		ldr	r2, .L55+4
 850 0024 0260     		str	r2, [r0]
 398:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 851              		.loc 1 398 3 is_stmt 1 view .LVU225
 398:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 852              		.loc 1 398 24 is_stmt 0 view .LVU226
 853 0026 4360     		str	r3, [r0, #4]
 399:Core/Src/main.c ****   htim3.Init.Period = 65535;
 854              		.loc 1 399 3 is_stmt 1 view .LVU227
 399:Core/Src/main.c ****   htim3.Init.Period = 65535;
 855              		.loc 1 399 26 is_stmt 0 view .LVU228
 856 0028 8360     		str	r3, [r0, #8]
 400:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 857              		.loc 1 400 3 is_stmt 1 view .LVU229
 400:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 858              		.loc 1 400 21 is_stmt 0 view .LVU230
 859 002a 4FF6FF72 		movw	r2, #65535
 860 002e C260     		str	r2, [r0, #12]
 401:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 861              		.loc 1 401 3 is_stmt 1 view .LVU231
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 46


 401:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 862              		.loc 1 401 28 is_stmt 0 view .LVU232
 863 0030 0361     		str	r3, [r0, #16]
 402:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 864              		.loc 1 402 3 is_stmt 1 view .LVU233
 402:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 865              		.loc 1 402 32 is_stmt 0 view .LVU234
 866 0032 8361     		str	r3, [r0, #24]
 403:Core/Src/main.c ****   {
 867              		.loc 1 403 3 is_stmt 1 view .LVU235
 403:Core/Src/main.c ****   {
 868              		.loc 1 403 7 is_stmt 0 view .LVU236
 869 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 870              	.LVL57:
 403:Core/Src/main.c ****   {
 871              		.loc 1 403 6 discriminator 1 view .LVU237
 872 0038 28BB     		cbnz	r0, .L50
 407:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 873              		.loc 1 407 3 is_stmt 1 view .LVU238
 407:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 874              		.loc 1 407 34 is_stmt 0 view .LVU239
 875 003a 4FF48053 		mov	r3, #4096
 876 003e 0A93     		str	r3, [sp, #40]
 408:Core/Src/main.c ****   {
 877              		.loc 1 408 3 is_stmt 1 view .LVU240
 408:Core/Src/main.c ****   {
 878              		.loc 1 408 7 is_stmt 0 view .LVU241
 879 0040 0AA9     		add	r1, sp, #40
 880 0042 1648     		ldr	r0, .L55
 881 0044 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 882              	.LVL58:
 408:Core/Src/main.c ****   {
 883              		.loc 1 408 6 discriminator 1 view .LVU242
 884 0048 F8B9     		cbnz	r0, .L51
 412:Core/Src/main.c ****   {
 885              		.loc 1 412 3 is_stmt 1 view .LVU243
 412:Core/Src/main.c ****   {
 886              		.loc 1 412 7 is_stmt 0 view .LVU244
 887 004a 1448     		ldr	r0, .L55
 888 004c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 889              	.LVL59:
 412:Core/Src/main.c ****   {
 890              		.loc 1 412 6 discriminator 1 view .LVU245
 891 0050 E8B9     		cbnz	r0, .L52
 416:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 892              		.loc 1 416 3 is_stmt 1 view .LVU246
 416:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 893              		.loc 1 416 37 is_stmt 0 view .LVU247
 894 0052 0023     		movs	r3, #0
 895 0054 0893     		str	r3, [sp, #32]
 417:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 896              		.loc 1 417 3 is_stmt 1 view .LVU248
 417:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 897              		.loc 1 417 33 is_stmt 0 view .LVU249
 898 0056 0993     		str	r3, [sp, #36]
 418:Core/Src/main.c ****   {
 899              		.loc 1 418 3 is_stmt 1 view .LVU250
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 47


 418:Core/Src/main.c ****   {
 900              		.loc 1 418 7 is_stmt 0 view .LVU251
 901 0058 08A9     		add	r1, sp, #32
 902 005a 1048     		ldr	r0, .L55
 903 005c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 904              	.LVL60:
 418:Core/Src/main.c ****   {
 905              		.loc 1 418 6 discriminator 1 view .LVU252
 906 0060 B8B9     		cbnz	r0, .L53
 422:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 907              		.loc 1 422 3 is_stmt 1 view .LVU253
 422:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 908              		.loc 1 422 20 is_stmt 0 view .LVU254
 909 0062 6023     		movs	r3, #96
 910 0064 0193     		str	r3, [sp, #4]
 423:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 911              		.loc 1 423 3 is_stmt 1 view .LVU255
 423:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 912              		.loc 1 423 19 is_stmt 0 view .LVU256
 913 0066 0023     		movs	r3, #0
 914 0068 0293     		str	r3, [sp, #8]
 424:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 915              		.loc 1 424 3 is_stmt 1 view .LVU257
 424:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 916              		.loc 1 424 24 is_stmt 0 view .LVU258
 917 006a 0393     		str	r3, [sp, #12]
 425:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 918              		.loc 1 425 3 is_stmt 1 view .LVU259
 425:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 919              		.loc 1 425 24 is_stmt 0 view .LVU260
 920 006c 0593     		str	r3, [sp, #20]
 426:Core/Src/main.c ****   {
 921              		.loc 1 426 3 is_stmt 1 view .LVU261
 426:Core/Src/main.c ****   {
 922              		.loc 1 426 7 is_stmt 0 view .LVU262
 923 006e 0822     		movs	r2, #8
 924 0070 01A9     		add	r1, sp, #4
 925 0072 0A48     		ldr	r0, .L55
 926 0074 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 927              	.LVL61:
 426:Core/Src/main.c ****   {
 928              		.loc 1 426 6 discriminator 1 view .LVU263
 929 0078 68B9     		cbnz	r0, .L54
 433:Core/Src/main.c **** 
 930              		.loc 1 433 3 is_stmt 1 view .LVU264
 931 007a 0848     		ldr	r0, .L55
 932 007c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 933              	.LVL62:
 435:Core/Src/main.c **** 
 934              		.loc 1 435 1 is_stmt 0 view .LVU265
 935 0080 0FB0     		add	sp, sp, #60
 936              	.LCFI13:
 937              		.cfi_remember_state
 938              		.cfi_def_cfa_offset 4
 939              		@ sp needed
 940 0082 5DF804FB 		ldr	pc, [sp], #4
 941              	.L50:
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 48


 942              	.LCFI14:
 943              		.cfi_restore_state
 405:Core/Src/main.c ****   }
 944              		.loc 1 405 5 is_stmt 1 view .LVU266
 945 0086 FFF7FEFF 		bl	Error_Handler
 946              	.LVL63:
 947              	.L51:
 410:Core/Src/main.c ****   }
 948              		.loc 1 410 5 view .LVU267
 949 008a FFF7FEFF 		bl	Error_Handler
 950              	.LVL64:
 951              	.L52:
 414:Core/Src/main.c ****   }
 952              		.loc 1 414 5 view .LVU268
 953 008e FFF7FEFF 		bl	Error_Handler
 954              	.LVL65:
 955              	.L53:
 420:Core/Src/main.c ****   }
 956              		.loc 1 420 5 view .LVU269
 957 0092 FFF7FEFF 		bl	Error_Handler
 958              	.LVL66:
 959              	.L54:
 428:Core/Src/main.c ****   }
 960              		.loc 1 428 5 view .LVU270
 961 0096 FFF7FEFF 		bl	Error_Handler
 962              	.LVL67:
 963              	.L56:
 964 009a 00BF     		.align	2
 965              	.L55:
 966 009c 00000000 		.word	htim3
 967 00a0 00040040 		.word	1073742848
 968              		.cfi_endproc
 969              	.LFE140:
 971              		.section	.text.SystemClock_Config,"ax",%progbits
 972              		.align	1
 973              		.global	SystemClock_Config
 974              		.syntax unified
 975              		.thumb
 976              		.thumb_func
 978              	SystemClock_Config:
 979              	.LFB138:
 264:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 980              		.loc 1 264 1 view -0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 80
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984 0000 00B5     		push	{lr}
 985              	.LCFI15:
 986              		.cfi_def_cfa_offset 4
 987              		.cfi_offset 14, -4
 988 0002 95B0     		sub	sp, sp, #84
 989              	.LCFI16:
 990              		.cfi_def_cfa_offset 88
 265:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 991              		.loc 1 265 3 view .LVU272
 265:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 992              		.loc 1 265 22 is_stmt 0 view .LVU273
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 49


 993 0004 3422     		movs	r2, #52
 994 0006 0021     		movs	r1, #0
 995 0008 07A8     		add	r0, sp, #28
 996 000a FFF7FEFF 		bl	memset
 997              	.LVL68:
 266:Core/Src/main.c **** 
 998              		.loc 1 266 3 is_stmt 1 view .LVU274
 266:Core/Src/main.c **** 
 999              		.loc 1 266 22 is_stmt 0 view .LVU275
 1000 000e 0023     		movs	r3, #0
 1001 0010 0293     		str	r3, [sp, #8]
 1002 0012 0393     		str	r3, [sp, #12]
 1003 0014 0493     		str	r3, [sp, #16]
 1004 0016 0593     		str	r3, [sp, #20]
 1005 0018 0693     		str	r3, [sp, #24]
 270:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1006              		.loc 1 270 3 is_stmt 1 view .LVU276
 1007              	.LBB11:
 270:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1008              		.loc 1 270 3 view .LVU277
 1009 001a 0093     		str	r3, [sp]
 270:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1010              		.loc 1 270 3 view .LVU278
 1011 001c 194A     		ldr	r2, .L63
 1012 001e 116C     		ldr	r1, [r2, #64]
 1013 0020 41F08051 		orr	r1, r1, #268435456
 1014 0024 1164     		str	r1, [r2, #64]
 270:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1015              		.loc 1 270 3 view .LVU279
 1016 0026 126C     		ldr	r2, [r2, #64]
 1017 0028 02F08052 		and	r2, r2, #268435456
 1018 002c 0092     		str	r2, [sp]
 270:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1019              		.loc 1 270 3 view .LVU280
 1020 002e 009A     		ldr	r2, [sp]
 1021              	.LBE11:
 270:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1022              		.loc 1 270 3 view .LVU281
 271:Core/Src/main.c **** 
 1023              		.loc 1 271 3 view .LVU282
 1024              	.LBB12:
 271:Core/Src/main.c **** 
 1025              		.loc 1 271 3 view .LVU283
 1026 0030 0193     		str	r3, [sp, #4]
 271:Core/Src/main.c **** 
 1027              		.loc 1 271 3 view .LVU284
 1028 0032 1549     		ldr	r1, .L63+4
 1029 0034 0A68     		ldr	r2, [r1]
 1030 0036 22F44042 		bic	r2, r2, #49152
 1031 003a 42F48042 		orr	r2, r2, #16384
 1032 003e 0A60     		str	r2, [r1]
 271:Core/Src/main.c **** 
 1033              		.loc 1 271 3 view .LVU285
 1034 0040 0A68     		ldr	r2, [r1]
 1035 0042 02F44042 		and	r2, r2, #49152
 1036 0046 0192     		str	r2, [sp, #4]
 271:Core/Src/main.c **** 
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 50


 1037              		.loc 1 271 3 view .LVU286
 1038 0048 019A     		ldr	r2, [sp, #4]
 1039              	.LBE12:
 271:Core/Src/main.c **** 
 1040              		.loc 1 271 3 view .LVU287
 276:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1041              		.loc 1 276 3 view .LVU288
 276:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1042              		.loc 1 276 36 is_stmt 0 view .LVU289
 1043 004a 0222     		movs	r2, #2
 1044 004c 0792     		str	r2, [sp, #28]
 277:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1045              		.loc 1 277 3 is_stmt 1 view .LVU290
 277:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1046              		.loc 1 277 30 is_stmt 0 view .LVU291
 1047 004e 0122     		movs	r2, #1
 1048 0050 0A92     		str	r2, [sp, #40]
 278:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1049              		.loc 1 278 3 is_stmt 1 view .LVU292
 278:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1050              		.loc 1 278 41 is_stmt 0 view .LVU293
 1051 0052 1022     		movs	r2, #16
 1052 0054 0B92     		str	r2, [sp, #44]
 279:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1053              		.loc 1 279 3 is_stmt 1 view .LVU294
 279:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1054              		.loc 1 279 34 is_stmt 0 view .LVU295
 1055 0056 0D93     		str	r3, [sp, #52]
 280:Core/Src/main.c ****   {
 1056              		.loc 1 280 3 is_stmt 1 view .LVU296
 280:Core/Src/main.c ****   {
 1057              		.loc 1 280 7 is_stmt 0 view .LVU297
 1058 0058 07A8     		add	r0, sp, #28
 1059 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1060              	.LVL69:
 280:Core/Src/main.c ****   {
 1061              		.loc 1 280 6 discriminator 1 view .LVU298
 1062 005e 68B9     		cbnz	r0, .L61
 287:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1063              		.loc 1 287 3 is_stmt 1 view .LVU299
 287:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1064              		.loc 1 287 31 is_stmt 0 view .LVU300
 1065 0060 0F23     		movs	r3, #15
 1066 0062 0293     		str	r3, [sp, #8]
 289:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1067              		.loc 1 289 3 is_stmt 1 view .LVU301
 289:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1068              		.loc 1 289 34 is_stmt 0 view .LVU302
 1069 0064 0021     		movs	r1, #0
 1070 0066 0391     		str	r1, [sp, #12]
 290:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1071              		.loc 1 290 3 is_stmt 1 view .LVU303
 290:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1072              		.loc 1 290 35 is_stmt 0 view .LVU304
 1073 0068 0491     		str	r1, [sp, #16]
 291:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1074              		.loc 1 291 3 is_stmt 1 view .LVU305
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 51


 291:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1075              		.loc 1 291 36 is_stmt 0 view .LVU306
 1076 006a 0591     		str	r1, [sp, #20]
 292:Core/Src/main.c **** 
 1077              		.loc 1 292 3 is_stmt 1 view .LVU307
 292:Core/Src/main.c **** 
 1078              		.loc 1 292 36 is_stmt 0 view .LVU308
 1079 006c 0691     		str	r1, [sp, #24]
 294:Core/Src/main.c ****   {
 1080              		.loc 1 294 3 is_stmt 1 view .LVU309
 294:Core/Src/main.c ****   {
 1081              		.loc 1 294 7 is_stmt 0 view .LVU310
 1082 006e 02A8     		add	r0, sp, #8
 1083 0070 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1084              	.LVL70:
 294:Core/Src/main.c ****   {
 1085              		.loc 1 294 6 discriminator 1 view .LVU311
 1086 0074 20B9     		cbnz	r0, .L62
 298:Core/Src/main.c **** 
 1087              		.loc 1 298 1 view .LVU312
 1088 0076 15B0     		add	sp, sp, #84
 1089              	.LCFI17:
 1090              		.cfi_remember_state
 1091              		.cfi_def_cfa_offset 4
 1092              		@ sp needed
 1093 0078 5DF804FB 		ldr	pc, [sp], #4
 1094              	.L61:
 1095              	.LCFI18:
 1096              		.cfi_restore_state
 282:Core/Src/main.c ****   }
 1097              		.loc 1 282 5 is_stmt 1 view .LVU313
 1098 007c FFF7FEFF 		bl	Error_Handler
 1099              	.LVL71:
 1100              	.L62:
 296:Core/Src/main.c ****   }
 1101              		.loc 1 296 5 view .LVU314
 1102 0080 FFF7FEFF 		bl	Error_Handler
 1103              	.LVL72:
 1104              	.L64:
 1105              		.align	2
 1106              	.L63:
 1107 0084 00380240 		.word	1073887232
 1108 0088 00700040 		.word	1073770496
 1109              		.cfi_endproc
 1110              	.LFE138:
 1112              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1113              		.align	2
 1114              	.LC6:
 1115 0000 57617665 		.ascii	"Wave: Sine\000"
 1115      3A205369 
 1115      6E6500
 1116              		.section	.text.main,"ax",%progbits
 1117              		.align	1
 1118              		.global	main
 1119              		.syntax unified
 1120              		.thumb
 1121              		.thumb_func
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 52


 1123              	main:
 1124              	.LFB137:
 204:Core/Src/main.c **** 
 1125              		.loc 1 204 1 view -0
 1126              		.cfi_startproc
 1127              		@ Volatile: function does not return.
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130 0000 08B5     		push	{r3, lr}
 1131              	.LCFI19:
 1132              		.cfi_def_cfa_offset 8
 1133              		.cfi_offset 3, -8
 1134              		.cfi_offset 14, -4
 213:Core/Src/main.c **** 
 1135              		.loc 1 213 3 view .LVU316
 1136 0002 FFF7FEFF 		bl	HAL_Init
 1137              	.LVL73:
 220:Core/Src/main.c **** 
 1138              		.loc 1 220 3 view .LVU317
 1139 0006 FFF7FEFF 		bl	SystemClock_Config
 1140              	.LVL74:
 227:Core/Src/main.c ****   MX_DMA_Init();
 1141              		.loc 1 227 3 view .LVU318
 1142 000a FFF7FEFF 		bl	MX_GPIO_Init
 1143              	.LVL75:
 228:Core/Src/main.c ****   MX_TIM2_Init();
 1144              		.loc 1 228 3 view .LVU319
 1145 000e FFF7FEFF 		bl	MX_DMA_Init
 1146              	.LVL76:
 229:Core/Src/main.c ****   MX_TIM3_Init();
 1147              		.loc 1 229 3 view .LVU320
 1148 0012 FFF7FEFF 		bl	MX_TIM2_Init
 1149              	.LVL77:
 230:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1150              		.loc 1 230 3 view .LVU321
 1151 0016 FFF7FEFF 		bl	MX_TIM3_Init
 1152              	.LVL78:
 233:Core/Src/main.c ****   HAL_Delay(10);
 1153              		.loc 1 233 3 view .LVU322
 1154 001a FFF7FEFF 		bl	init_LCD
 1155              	.LVL79:
 234:Core/Src/main.c **** 
 1156              		.loc 1 234 3 view .LVU323
 1157 001e 0A20     		movs	r0, #10
 1158 0020 FFF7FEFF 		bl	HAL_Delay
 1159              	.LVL80:
 236:Core/Src/main.c ****   // TODO: Start TIM2 in Output Compare (OC) mode on channel 1
 1160              		.loc 1 236 3 view .LVU324
 1161 0024 0821     		movs	r1, #8
 1162 0026 0D48     		ldr	r0, .L68
 1163 0028 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1164              	.LVL81:
 238:Core/Src/main.c ****   // TODO: Start DMA in IT mode on TIM2->CH1. Source is LUT and Dest is TIM3->CCR3; start with Sine
 1165              		.loc 1 238 3 view .LVU325
 1166 002c 0C4C     		ldr	r4, .L68+4
 1167 002e 0021     		movs	r1, #0
 1168 0030 2046     		mov	r0, r4
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 53


 1169 0032 FFF7FEFF 		bl	HAL_TIM_OC_Start
 1170              	.LVL82:
 240:Core/Src/main.c ****   // TODO: Write current waveform to LCD(Sine is the first waveform)
 1171              		.loc 1 240 3 view .LVU326
 1172 0036 8023     		movs	r3, #128
 1173 0038 0A4A     		ldr	r2, .L68+8
 1174 003a 1268     		ldr	r2, [r2]
 1175 003c 0A49     		ldr	r1, .L68+12
 1176 003e 0B48     		ldr	r0, .L68+16
 1177 0040 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1178              	.LVL83:
 242:Core/Src/main.c ****   lcd_putstring("Wave: Sine");
 1179              		.loc 1 242 3 view .LVU327
 1180 0044 0120     		movs	r0, #1
 1181 0046 FFF7FEFF 		bl	lcd_command
 1182              	.LVL84:
 243:Core/Src/main.c ****   // TODO: Enable DMA (start transfer from LUT to CCR)
 1183              		.loc 1 243 3 view .LVU328
 1184 004a 0948     		ldr	r0, .L68+20
 1185 004c FFF7FEFF 		bl	lcd_putstring
 1186              	.LVL85:
 245:Core/Src/main.c ****   /* USER CODE END 2 */
 1187              		.loc 1 245 3 view .LVU329
 1188 0050 2268     		ldr	r2, [r4]
 1189 0052 D368     		ldr	r3, [r2, #12]
 1190 0054 43F40073 		orr	r3, r3, #512
 1191 0058 D360     		str	r3, [r2, #12]
 1192              	.L66:
 250:Core/Src/main.c ****   {
 1193              		.loc 1 250 3 view .LVU330
 255:Core/Src/main.c ****   /* USER CODE END 3 */
 1194              		.loc 1 255 3 view .LVU331
 250:Core/Src/main.c ****   {
 1195              		.loc 1 250 9 view .LVU332
 1196 005a FEE7     		b	.L66
 1197              	.L69:
 1198              		.align	2
 1199              	.L68:
 1200 005c 00000000 		.word	htim3
 1201 0060 00000000 		.word	htim2
 1202 0064 00000000 		.word	DestAddress
 1203 0068 00000000 		.word	Sin_LUT
 1204 006c 00000000 		.word	hdma_tim2_ch1
 1205 0070 00000000 		.word	.LC6
 1206              		.cfi_endproc
 1207              	.LFE137:
 1209              		.global	last_button_press
 1210              		.section	.bss.last_button_press,"aw",%nobits
 1211              		.align	2
 1214              	last_button_press:
 1215 0000 00000000 		.space	4
 1216              		.global	current_waveform
 1217              		.section	.bss.current_waveform,"aw",%nobits
 1220              	current_waveform:
 1221 0000 00       		.space	1
 1222              		.global	DestAddress
 1223              		.section	.data.DestAddress,"aw"
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 54


 1224              		.align	2
 1227              	DestAddress:
 1228 0000 3C040040 		.word	1073742908
 1229              		.global	TIM2_Ticks
 1230              		.section	.data.TIM2_Ticks,"aw"
 1231              		.align	2
 1234              	TIM2_Ticks:
 1235 0000 6B010000 		.word	363
 1236              		.global	Drum_LUT
 1237              		.section	.data.Drum_LUT,"aw"
 1238              		.align	2
 1241              	Drum_LUT:
 1242 0000 FF070000 		.word	2047
 1243              		.global	Guitar_LUT
 1244              		.section	.data.Guitar_LUT,"aw"
 1245              		.align	2
 1248              	Guitar_LUT:
 1249 0000 FF070000 		.word	2047
 1250              		.global	Piano_LUT
 1251              		.section	.data.Piano_LUT,"aw"
 1252              		.align	2
 1255              	Piano_LUT:
 1256 0000 FF070000 		.word	2047
 1257              		.global	Triangle_LUT
 1258              		.section	.data.Triangle_LUT,"aw"
 1259              		.align	2
 1262              	Triangle_LUT:
 1263 0000 00000000 		.word	0
 1264 0004 3F000000 		.word	63
 1265 0008 7F000000 		.word	127
 1266 000c BF000000 		.word	191
 1267 0010 FF000000 		.word	255
 1268 0014 3F010000 		.word	319
 1269 0018 7F010000 		.word	383
 1270 001c BF010000 		.word	447
 1271 0020 FF010000 		.word	511
 1272 0024 3F020000 		.word	575
 1273 0028 7F020000 		.word	639
 1274 002c BF020000 		.word	703
 1275 0030 FF020000 		.word	767
 1276 0034 3F030000 		.word	831
 1277 0038 7F030000 		.word	895
 1278 003c BF030000 		.word	959
 1279 0040 FF030000 		.word	1023
 1280 0044 3F040000 		.word	1087
 1281 0048 7F040000 		.word	1151
 1282 004c BF040000 		.word	1215
 1283 0050 FF040000 		.word	1279
 1284 0054 3F050000 		.word	1343
 1285 0058 7F050000 		.word	1407
 1286 005c BF050000 		.word	1471
 1287 0060 FF050000 		.word	1535
 1288 0064 3F060000 		.word	1599
 1289 0068 7F060000 		.word	1663
 1290 006c BF060000 		.word	1727
 1291 0070 FF060000 		.word	1791
 1292 0074 3F070000 		.word	1855
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 55


 1293 0078 7F070000 		.word	1919
 1294 007c BF070000 		.word	1983
 1295 0080 FF070000 		.word	2047
 1296 0084 3F080000 		.word	2111
 1297 0088 7F080000 		.word	2175
 1298 008c BF080000 		.word	2239
 1299 0090 FF080000 		.word	2303
 1300 0094 3F090000 		.word	2367
 1301 0098 7F090000 		.word	2431
 1302 009c BF090000 		.word	2495
 1303 00a0 FF090000 		.word	2559
 1304 00a4 3F0A0000 		.word	2623
 1305 00a8 7F0A0000 		.word	2687
 1306 00ac BF0A0000 		.word	2751
 1307 00b0 FF0A0000 		.word	2815
 1308 00b4 3F0B0000 		.word	2879
 1309 00b8 7F0B0000 		.word	2943
 1310 00bc BF0B0000 		.word	3007
 1311 00c0 FF0B0000 		.word	3071
 1312 00c4 3F0C0000 		.word	3135
 1313 00c8 7F0C0000 		.word	3199
 1314 00cc BF0C0000 		.word	3263
 1315 00d0 FF0C0000 		.word	3327
 1316 00d4 3F0D0000 		.word	3391
 1317 00d8 7F0D0000 		.word	3455
 1318 00dc BF0D0000 		.word	3519
 1319 00e0 FF0D0000 		.word	3583
 1320 00e4 3F0E0000 		.word	3647
 1321 00e8 7F0E0000 		.word	3711
 1322 00ec BF0E0000 		.word	3775
 1323 00f0 FF0E0000 		.word	3839
 1324 00f4 3F0F0000 		.word	3903
 1325 00f8 7F0F0000 		.word	3967
 1326 00fc BF0F0000 		.word	4031
 1327 0100 FF0F0000 		.word	4095
 1328 0104 BF0F0000 		.word	4031
 1329 0108 7F0F0000 		.word	3967
 1330 010c 3F0F0000 		.word	3903
 1331 0110 FF0E0000 		.word	3839
 1332 0114 BF0E0000 		.word	3775
 1333 0118 7F0E0000 		.word	3711
 1334 011c 3F0E0000 		.word	3647
 1335 0120 FF0D0000 		.word	3583
 1336 0124 BF0D0000 		.word	3519
 1337 0128 7F0D0000 		.word	3455
 1338 012c 3F0D0000 		.word	3391
 1339 0130 FF0C0000 		.word	3327
 1340 0134 BF0C0000 		.word	3263
 1341 0138 7F0C0000 		.word	3199
 1342 013c 3F0C0000 		.word	3135
 1343 0140 FF0B0000 		.word	3071
 1344 0144 BF0B0000 		.word	3007
 1345 0148 7F0B0000 		.word	2943
 1346 014c 3F0B0000 		.word	2879
 1347 0150 FF0A0000 		.word	2815
 1348 0154 BF0A0000 		.word	2751
 1349 0158 7F0A0000 		.word	2687
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 56


 1350 015c 3F0A0000 		.word	2623
 1351 0160 FF090000 		.word	2559
 1352 0164 BF090000 		.word	2495
 1353 0168 7F090000 		.word	2431
 1354 016c 3F090000 		.word	2367
 1355 0170 FF080000 		.word	2303
 1356 0174 BF080000 		.word	2239
 1357 0178 7F080000 		.word	2175
 1358 017c 3F080000 		.word	2111
 1359 0180 FF070000 		.word	2047
 1360 0184 BF070000 		.word	1983
 1361 0188 7F070000 		.word	1919
 1362 018c 3F070000 		.word	1855
 1363 0190 FF060000 		.word	1791
 1364 0194 BF060000 		.word	1727
 1365 0198 7F060000 		.word	1663
 1366 019c 3F060000 		.word	1599
 1367 01a0 FF050000 		.word	1535
 1368 01a4 BF050000 		.word	1471
 1369 01a8 7F050000 		.word	1407
 1370 01ac 3F050000 		.word	1343
 1371 01b0 FF040000 		.word	1279
 1372 01b4 BF040000 		.word	1215
 1373 01b8 7F040000 		.word	1151
 1374 01bc 3F040000 		.word	1087
 1375 01c0 FF030000 		.word	1023
 1376 01c4 BF030000 		.word	959
 1377 01c8 7F030000 		.word	895
 1378 01cc 3F030000 		.word	831
 1379 01d0 FF020000 		.word	767
 1380 01d4 BF020000 		.word	703
 1381 01d8 7F020000 		.word	639
 1382 01dc 3F020000 		.word	575
 1383 01e0 FF010000 		.word	511
 1384 01e4 BF010000 		.word	447
 1385 01e8 7F010000 		.word	383
 1386 01ec 3F010000 		.word	319
 1387 01f0 FF000000 		.word	255
 1388 01f4 BF000000 		.word	191
 1389 01f8 7F000000 		.word	127
 1390 01fc 3F000000 		.word	63
 1391              		.global	Saw_LUT
 1392              		.section	.data.Saw_LUT,"aw"
 1393              		.align	2
 1396              	Saw_LUT:
 1397 0000 00000000 		.word	0
 1398 0004 1F000000 		.word	31
 1399 0008 3F000000 		.word	63
 1400 000c 5F000000 		.word	95
 1401 0010 7F000000 		.word	127
 1402 0014 9F000000 		.word	159
 1403 0018 BF000000 		.word	191
 1404 001c DF000000 		.word	223
 1405 0020 FF000000 		.word	255
 1406 0024 1F010000 		.word	287
 1407 0028 3F010000 		.word	319
 1408 002c 5F010000 		.word	351
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 57


 1409 0030 7F010000 		.word	383
 1410 0034 9F010000 		.word	415
 1411 0038 BF010000 		.word	447
 1412 003c DF010000 		.word	479
 1413 0040 FF010000 		.word	511
 1414 0044 1F020000 		.word	543
 1415 0048 3F020000 		.word	575
 1416 004c 5F020000 		.word	607
 1417 0050 7F020000 		.word	639
 1418 0054 9F020000 		.word	671
 1419 0058 BF020000 		.word	703
 1420 005c DF020000 		.word	735
 1421 0060 FF020000 		.word	767
 1422 0064 1F030000 		.word	799
 1423 0068 3F030000 		.word	831
 1424 006c 5F030000 		.word	863
 1425 0070 7F030000 		.word	895
 1426 0074 9F030000 		.word	927
 1427 0078 BF030000 		.word	959
 1428 007c DF030000 		.word	991
 1429 0080 FF030000 		.word	1023
 1430 0084 1F040000 		.word	1055
 1431 0088 3F040000 		.word	1087
 1432 008c 5F040000 		.word	1119
 1433 0090 7F040000 		.word	1151
 1434 0094 9F040000 		.word	1183
 1435 0098 BF040000 		.word	1215
 1436 009c DF040000 		.word	1247
 1437 00a0 FF040000 		.word	1279
 1438 00a4 1F050000 		.word	1311
 1439 00a8 3F050000 		.word	1343
 1440 00ac 5F050000 		.word	1375
 1441 00b0 7F050000 		.word	1407
 1442 00b4 9F050000 		.word	1439
 1443 00b8 BF050000 		.word	1471
 1444 00bc DF050000 		.word	1503
 1445 00c0 FF050000 		.word	1535
 1446 00c4 1F060000 		.word	1567
 1447 00c8 3F060000 		.word	1599
 1448 00cc 5F060000 		.word	1631
 1449 00d0 7F060000 		.word	1663
 1450 00d4 9F060000 		.word	1695
 1451 00d8 BF060000 		.word	1727
 1452 00dc DF060000 		.word	1759
 1453 00e0 FF060000 		.word	1791
 1454 00e4 1F070000 		.word	1823
 1455 00e8 3F070000 		.word	1855
 1456 00ec 5F070000 		.word	1887
 1457 00f0 7F070000 		.word	1919
 1458 00f4 9F070000 		.word	1951
 1459 00f8 BF070000 		.word	1983
 1460 00fc DF070000 		.word	2015
 1461 0100 FF070000 		.word	2047
 1462 0104 1F080000 		.word	2079
 1463 0108 3F080000 		.word	2111
 1464 010c 5F080000 		.word	2143
 1465 0110 7F080000 		.word	2175
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 58


 1466 0114 9F080000 		.word	2207
 1467 0118 BF080000 		.word	2239
 1468 011c DF080000 		.word	2271
 1469 0120 FF080000 		.word	2303
 1470 0124 1F090000 		.word	2335
 1471 0128 3F090000 		.word	2367
 1472 012c 5F090000 		.word	2399
 1473 0130 7F090000 		.word	2431
 1474 0134 9F090000 		.word	2463
 1475 0138 BF090000 		.word	2495
 1476 013c DF090000 		.word	2527
 1477 0140 FF090000 		.word	2559
 1478 0144 1F0A0000 		.word	2591
 1479 0148 3F0A0000 		.word	2623
 1480 014c 5F0A0000 		.word	2655
 1481 0150 7F0A0000 		.word	2687
 1482 0154 9F0A0000 		.word	2719
 1483 0158 BF0A0000 		.word	2751
 1484 015c DF0A0000 		.word	2783
 1485 0160 FF0A0000 		.word	2815
 1486 0164 1F0B0000 		.word	2847
 1487 0168 3F0B0000 		.word	2879
 1488 016c 5F0B0000 		.word	2911
 1489 0170 7F0B0000 		.word	2943
 1490 0174 9F0B0000 		.word	2975
 1491 0178 BF0B0000 		.word	3007
 1492 017c DF0B0000 		.word	3039
 1493 0180 FF0B0000 		.word	3071
 1494 0184 1F0C0000 		.word	3103
 1495 0188 3F0C0000 		.word	3135
 1496 018c 5F0C0000 		.word	3167
 1497 0190 7F0C0000 		.word	3199
 1498 0194 9F0C0000 		.word	3231
 1499 0198 BF0C0000 		.word	3263
 1500 019c DF0C0000 		.word	3295
 1501 01a0 FF0C0000 		.word	3327
 1502 01a4 1F0D0000 		.word	3359
 1503 01a8 3F0D0000 		.word	3391
 1504 01ac 5F0D0000 		.word	3423
 1505 01b0 7F0D0000 		.word	3455
 1506 01b4 9F0D0000 		.word	3487
 1507 01b8 BF0D0000 		.word	3519
 1508 01bc DF0D0000 		.word	3551
 1509 01c0 FF0D0000 		.word	3583
 1510 01c4 1F0E0000 		.word	3615
 1511 01c8 3F0E0000 		.word	3647
 1512 01cc 5F0E0000 		.word	3679
 1513 01d0 7F0E0000 		.word	3711
 1514 01d4 9F0E0000 		.word	3743
 1515 01d8 BF0E0000 		.word	3775
 1516 01dc DF0E0000 		.word	3807
 1517 01e0 FF0E0000 		.word	3839
 1518 01e4 1F0F0000 		.word	3871
 1519 01e8 3F0F0000 		.word	3903
 1520 01ec 5F0F0000 		.word	3935
 1521 01f0 7F0F0000 		.word	3967
 1522 01f4 9F0F0000 		.word	3999
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 59


 1523 01f8 BF0F0000 		.word	4031
 1524 01fc DF0F0000 		.word	4063
 1525              		.global	Sin_LUT
 1526              		.section	.data.Sin_LUT,"aw"
 1527              		.align	2
 1530              	Sin_LUT:
 1531 0000 FF070000 		.word	2047
 1532 0004 63080000 		.word	2147
 1533 0008 C8080000 		.word	2248
 1534 000c 2B090000 		.word	2347
 1535 0010 8E090000 		.word	2446
 1536 0014 F1090000 		.word	2545
 1537 0018 510A0000 		.word	2641
 1538 001c B10A0000 		.word	2737
 1539 0020 0F0B0000 		.word	2831
 1540 0024 6A0B0000 		.word	2922
 1541 0028 C40B0000 		.word	3012
 1542 002c 1C0C0000 		.word	3100
 1543 0030 710C0000 		.word	3185
 1544 0034 C30C0000 		.word	3267
 1545 0038 120D0000 		.word	3346
 1546 003c 5E0D0000 		.word	3422
 1547 0040 A70D0000 		.word	3495
 1548 0044 EC0D0000 		.word	3564
 1549 0048 2E0E0000 		.word	3630
 1550 004c 6C0E0000 		.word	3692
 1551 0050 A50E0000 		.word	3749
 1552 0054 DB0E0000 		.word	3803
 1553 0058 0D0F0000 		.word	3853
 1554 005c 3A0F0000 		.word	3898
 1555 0060 630F0000 		.word	3939
 1556 0064 870F0000 		.word	3975
 1557 0068 A60F0000 		.word	4006
 1558 006c C10F0000 		.word	4033
 1559 0070 D70F0000 		.word	4055
 1560 0074 E80F0000 		.word	4072
 1561 0078 F50F0000 		.word	4085
 1562 007c FC0F0000 		.word	4092
 1563 0080 FF0F0000 		.word	4095
 1564 0084 FC0F0000 		.word	4092
 1565 0088 F50F0000 		.word	4085
 1566 008c E80F0000 		.word	4072
 1567 0090 D70F0000 		.word	4055
 1568 0094 C10F0000 		.word	4033
 1569 0098 A60F0000 		.word	4006
 1570 009c 870F0000 		.word	3975
 1571 00a0 630F0000 		.word	3939
 1572 00a4 3A0F0000 		.word	3898
 1573 00a8 0D0F0000 		.word	3853
 1574 00ac DB0E0000 		.word	3803
 1575 00b0 A50E0000 		.word	3749
 1576 00b4 6C0E0000 		.word	3692
 1577 00b8 2E0E0000 		.word	3630
 1578 00bc EC0D0000 		.word	3564
 1579 00c0 A70D0000 		.word	3495
 1580 00c4 5E0D0000 		.word	3422
 1581 00c8 120D0000 		.word	3346
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 60


 1582 00cc C30C0000 		.word	3267
 1583 00d0 710C0000 		.word	3185
 1584 00d4 1C0C0000 		.word	3100
 1585 00d8 C40B0000 		.word	3012
 1586 00dc 6A0B0000 		.word	2922
 1587 00e0 0F0B0000 		.word	2831
 1588 00e4 B10A0000 		.word	2737
 1589 00e8 510A0000 		.word	2641
 1590 00ec F1090000 		.word	2545
 1591 00f0 8E090000 		.word	2446
 1592 00f4 2B090000 		.word	2347
 1593 00f8 C8080000 		.word	2248
 1594 00fc 63080000 		.word	2147
 1595 0100 FF070000 		.word	2047
 1596 0104 9B070000 		.word	1947
 1597 0108 36070000 		.word	1846
 1598 010c D3060000 		.word	1747
 1599 0110 70060000 		.word	1648
 1600 0114 0D060000 		.word	1549
 1601 0118 AD050000 		.word	1453
 1602 011c 4D050000 		.word	1357
 1603 0120 EF040000 		.word	1263
 1604 0124 94040000 		.word	1172
 1605 0128 3A040000 		.word	1082
 1606 012c E2030000 		.word	994
 1607 0130 8D030000 		.word	909
 1608 0134 3B030000 		.word	827
 1609 0138 EC020000 		.word	748
 1610 013c A0020000 		.word	672
 1611 0140 57020000 		.word	599
 1612 0144 12020000 		.word	530
 1613 0148 D0010000 		.word	464
 1614 014c 92010000 		.word	402
 1615 0150 59010000 		.word	345
 1616 0154 23010000 		.word	291
 1617 0158 F1000000 		.word	241
 1618 015c C4000000 		.word	196
 1619 0160 9B000000 		.word	155
 1620 0164 77000000 		.word	119
 1621 0168 58000000 		.word	88
 1622 016c 3D000000 		.word	61
 1623 0170 27000000 		.word	39
 1624 0174 16000000 		.word	22
 1625 0178 09000000 		.word	9
 1626 017c 02000000 		.word	2
 1627 0180 00000000 		.word	0
 1628 0184 02000000 		.word	2
 1629 0188 09000000 		.word	9
 1630 018c 16000000 		.word	22
 1631 0190 27000000 		.word	39
 1632 0194 3D000000 		.word	61
 1633 0198 58000000 		.word	88
 1634 019c 77000000 		.word	119
 1635 01a0 9B000000 		.word	155
 1636 01a4 C4000000 		.word	196
 1637 01a8 F1000000 		.word	241
 1638 01ac 23010000 		.word	291
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 61


 1639 01b0 59010000 		.word	345
 1640 01b4 92010000 		.word	402
 1641 01b8 D0010000 		.word	464
 1642 01bc 12020000 		.word	530
 1643 01c0 57020000 		.word	599
 1644 01c4 A0020000 		.word	672
 1645 01c8 EC020000 		.word	748
 1646 01cc 3B030000 		.word	827
 1647 01d0 8D030000 		.word	909
 1648 01d4 E2030000 		.word	994
 1649 01d8 3A040000 		.word	1082
 1650 01dc 94040000 		.word	1172
 1651 01e0 EF040000 		.word	1263
 1652 01e4 4D050000 		.word	1357
 1653 01e8 AD050000 		.word	1453
 1654 01ec 0D060000 		.word	1549
 1655 01f0 70060000 		.word	1648
 1656 01f4 D3060000 		.word	1747
 1657 01f8 36070000 		.word	1846
 1658 01fc 9B070000 		.word	1947
 1659              		.global	hdma_tim2_ch1
 1660              		.section	.bss.hdma_tim2_ch1,"aw",%nobits
 1661              		.align	2
 1664              	hdma_tim2_ch1:
 1665 0000 00000000 		.space	96
 1665      00000000 
 1665      00000000 
 1665      00000000 
 1665      00000000 
 1666              		.global	htim3
 1667              		.section	.bss.htim3,"aw",%nobits
 1668              		.align	2
 1671              	htim3:
 1672 0000 00000000 		.space	72
 1672      00000000 
 1672      00000000 
 1672      00000000 
 1672      00000000 
 1673              		.global	htim2
 1674              		.section	.bss.htim2,"aw",%nobits
 1675              		.align	2
 1678              	htim2:
 1679 0000 00000000 		.space	72
 1679      00000000 
 1679      00000000 
 1679      00000000 
 1679      00000000 
 1680              		.text
 1681              	.Letext0:
 1682              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1683              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1684              		.file 5 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1685              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1686              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1687              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1688              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1689              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 62


 1690              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1691              		.file 12 "Core/Inc/main.h"
 1692              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1693              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1694              		.file 15 "Core/Inc/lcd_stm32f4.h"
 1695              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1696              		.file 17 "<built-in>"
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 63


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:192    .text.MX_GPIO_Init:000000d4 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:200    .text.MX_DMA_Init:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:205    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:254    .text.MX_DMA_Init:00000030 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:259    .rodata.EXTI0_IRQHandler.str1.4:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:278    .text.EXTI0_IRQHandler:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:284    .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:344    .text.EXTI0_IRQHandler:0000004a $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:351    .text.EXTI0_IRQHandler:00000050 $t
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:504    .text.EXTI0_IRQHandler:000000f4 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1214   .bss.last_button_press:00000000 last_button_press
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1678   .bss.htim2:00000000 htim2
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1664   .bss.hdma_tim2_ch1:00000000 hdma_tim2_ch1
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1220   .bss.current_waveform:00000000 current_waveform
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1530   .data.Sin_LUT:00000000 Sin_LUT
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1227   .data.DestAddress:00000000 DestAddress
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1396   .data.Saw_LUT:00000000 Saw_LUT
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1262   .data.Triangle_LUT:00000000 Triangle_LUT
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1255   .data.Piano_LUT:00000000 Piano_LUT
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1248   .data.Guitar_LUT:00000000 Guitar_LUT
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1241   .data.Drum_LUT:00000000 Drum_LUT
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:526    .text.Error_Handler:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:532    .text.Error_Handler:00000000 Error_Handler
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:564    .text.MX_TIM2_Init:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:569    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:799    .text.MX_TIM2_Init:000000fc $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1234   .data.TIM2_Ticks:00000000 TIM2_Ticks
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:808    .text.MX_TIM3_Init:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:813    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:966    .text.MX_TIM3_Init:0000009c $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1671   .bss.htim3:00000000 htim3
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:972    .text.SystemClock_Config:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:978    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1107   .text.SystemClock_Config:00000084 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1113   .rodata.main.str1.4:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1117   .text.main:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1123   .text.main:00000000 main
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1200   .text.main:0000005c $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1211   .bss.last_button_press:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1221   .bss.current_waveform:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1224   .data.DestAddress:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1231   .data.TIM2_Ticks:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1238   .data.Drum_LUT:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1245   .data.Guitar_LUT:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1252   .data.Piano_LUT:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1259   .data.Triangle_LUT:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1393   .data.Saw_LUT:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1527   .data.Sin_LUT:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1661   .bss.hdma_tim2_ch1:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1668   .bss.htim3:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s:1675   .bss.htim2:00000000 $d

UNDEFINED SYMBOLS
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\ccPjO0ra.s 			page 64


HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GetTick
HAL_DMA_Abort_IT
HAL_GPIO_EXTI_IRQHandler
lcd_command
lcd_putstring
HAL_DMA_Start_IT
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
HAL_DMA_Init
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
init_LCD
HAL_Delay
HAL_TIM_PWM_Start
HAL_TIM_OC_Start
