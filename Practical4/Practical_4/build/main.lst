ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB142:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include "stm32f4xx.h"
  26:Core/Src/main.c **** #include "lcd_stm32f4.h"
  27:Core/Src/main.c **** #include <stm32f4xx_hal_tim.h>
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** // TODO: Add values for below variables
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** // logic behind the values:
  40:Core/Src/main.c ****       /* NS = 128, number of samples generated, TIM2CLK = 16MHz, given,
  41:Core/Src/main.c ****       Sample rate = F_signal * NS
  42:Core/Src/main.c ****       For the waveforms (sine, sawtooth, triangle), want to generate audible tones.
  43:Core/Src/main.c ****       The human hearing range is approximately 20 Hz to 20 kHz.
  44:Core/Src/main.c ****       Sample Rate = 44,100 Hz
  45:Core/Src/main.c ****       F_SIGNAL = Sample_Rate / NS = 44,100 / 128 â‰ˆ 344.53 Hz
  46:Core/Src/main.c ****       Maximum Sample Rate = TIM2CLK / TIM2_Ticks_min
  47:Core/Src/main.c ****       assuming the minumum of TIM2_Ticks =1,
  48:Core/Src/main.c ****       Max Sample Rate = 16,000,000 Hz
  49:Core/Src/main.c ****       Max F_SIGNAL = 16,000,000 / 128 = 125,000 Hz
  50:Core/Src/main.c ****       */
  51:Core/Src/main.c **** #define NS 128        // Number of samples in LUT
  52:Core/Src/main.c **** #define TIM2CLK  16000000  // STM Clock frequency: 16MHz
  53:Core/Src/main.c **** #define F_SIGNAL 344 	// Frequency of output analog signal
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PD */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN PM */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PM */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  63:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  64:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  65:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_ch1;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE BEGIN PV */
  68:Core/Src/main.c **** // TODO: Add code for global variables, including LUTs
  69:Core/Src/main.c **** uint32_t Sin_LUT[NS] = {2047, 2147, 2248, 2347, 2446, 2545, 2641, 2737,
  70:Core/Src/main.c ****     2831, 2922, 3012, 3100, 3185, 3267, 3346, 3422,
  71:Core/Src/main.c ****     3495, 3564, 3630, 3692, 3749, 3803, 3853, 3898,
  72:Core/Src/main.c ****     3939, 3975, 4006, 4033, 4055, 4072, 4085, 4092,
  73:Core/Src/main.c ****     4095, 4092, 4085, 4072, 4055, 4033, 4006, 3975,
  74:Core/Src/main.c ****     3939, 3898, 3853, 3803, 3749, 3692, 3630, 3564,
  75:Core/Src/main.c ****     3495, 3422, 3346, 3267, 3185, 3100, 3012, 2922,
  76:Core/Src/main.c ****     2831, 2737, 2641, 2545, 2446, 2347, 2248, 2147,
  77:Core/Src/main.c ****     2047, 1947, 1846, 1747, 1648, 1549, 1453, 1357,
  78:Core/Src/main.c ****     1263, 1172, 1082, 994, 909, 827, 748, 672,
  79:Core/Src/main.c ****     599, 530, 464, 402, 345, 291, 241, 196,
  80:Core/Src/main.c ****     155, 119, 88, 61, 39, 22, 9, 2,
  81:Core/Src/main.c ****     0, 2, 9, 22, 39, 61, 88, 119,
  82:Core/Src/main.c ****     155, 196, 241, 291, 345, 402, 464, 530,
  83:Core/Src/main.c ****     599, 672, 748, 827, 909, 994, 1082, 1172,
  84:Core/Src/main.c ****     1263, 1357, 1453, 1549, 1648, 1747, 1846, 1947};
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** uint32_t Saw_LUT[NS] = {0, 31, 63, 95, 127, 159, 191, 223,
  87:Core/Src/main.c ****     255, 287, 319, 351, 383, 415, 447, 479,
  88:Core/Src/main.c ****     511, 543, 575, 607, 639, 671, 703, 735,
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 3


  89:Core/Src/main.c ****     767, 799, 831, 863, 895, 927, 959, 991,
  90:Core/Src/main.c ****     1023, 1055, 1087, 1119, 1151, 1183, 1215, 1247,
  91:Core/Src/main.c ****     1279, 1311, 1343, 1375, 1407, 1439, 1471, 1503,
  92:Core/Src/main.c ****     1535, 1567, 1599, 1631, 1663, 1695, 1727, 1759,
  93:Core/Src/main.c ****     1791, 1823, 1855, 1887, 1919, 1951, 1983, 2015,
  94:Core/Src/main.c ****     2047, 2079, 2111, 2143, 2175, 2207, 2239, 2271,
  95:Core/Src/main.c ****     2303, 2335, 2367, 2399, 2431, 2463, 2495, 2527,
  96:Core/Src/main.c ****     2559, 2591, 2623, 2655, 2687, 2719, 2751, 2783,
  97:Core/Src/main.c ****     2815, 2847, 2879, 2911, 2943, 2975, 3007, 3039,
  98:Core/Src/main.c ****     3071, 3103, 3135, 3167, 3199, 3231, 3263, 3295,
  99:Core/Src/main.c ****     3327, 3359, 3391, 3423, 3455, 3487, 3519, 3551,
 100:Core/Src/main.c ****     3583, 3615, 3647, 3679, 3711, 3743, 3775, 3807,
 101:Core/Src/main.c ****     3839, 3871, 3903, 3935, 3967, 3999, 4031, 4063};
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** uint32_t Triangle_LUT[NS] = { 0, 63, 127, 191, 255, 319, 383, 447,
 104:Core/Src/main.c ****     511, 575, 639, 703, 767, 831, 895, 959,
 105:Core/Src/main.c ****     1023, 1087, 1151, 1215, 1279, 1343, 1407, 1471,
 106:Core/Src/main.c ****     1535, 1599, 1663, 1727, 1791, 1855, 1919, 1983,
 107:Core/Src/main.c ****     2047, 2111, 2175, 2239, 2303, 2367, 2431, 2495,
 108:Core/Src/main.c ****     2559, 2623, 2687, 2751, 2815, 2879, 2943, 3007,
 109:Core/Src/main.c ****     3071, 3135, 3199, 3263, 3327, 3391, 3455, 3519,
 110:Core/Src/main.c ****     3583, 3647, 3711, 3775, 3839, 3903, 3967, 4031,
 111:Core/Src/main.c ****     4095, 4031, 3967, 3903, 3839, 3775, 3711, 3647,
 112:Core/Src/main.c ****     3583, 3519, 3455, 3391, 3327, 3263, 3199, 3135,
 113:Core/Src/main.c ****     3071, 3007, 2943, 2879, 2815, 2751, 2687, 2623,
 114:Core/Src/main.c ****     2559, 2495, 2431, 2367, 2303, 2239, 2175, 2111,
 115:Core/Src/main.c ****     2047, 1983, 1919, 1855, 1791, 1727, 1663, 1599,
 116:Core/Src/main.c ****     1535, 1471, 1407, 1343, 1279, 1215, 1151, 1087,
 117:Core/Src/main.c ****     1023, 959, 895, 831, 767, 703, 639, 575,
 118:Core/Src/main.c ****     511, 447, 383, 319, 255, 191, 127, 63};
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** uint32_t Piano_LUT = {2047, 4095, 0, 4095, 4095, 4095, 0, 4095,
 121:Core/Src/main.c ****     4095, 4095, 4095, 1096, 0, 4095, 4095, 0,
 122:Core/Src/main.c ****     0, 0, 0, 4095, 0, 4095, 0, 0,
 123:Core/Src/main.c ****     4095, 3837, 4095, 0, 0, 0, 4095, 4095,
 124:Core/Src/main.c ****     0, 4095, 0, 4095, 0, 4095, 0, 0,
 125:Core/Src/main.c ****     0, 4095, 4095, 0, 4095, 0, 4095, 1644,
 126:Core/Src/main.c ****     4095, 4095, 4095, 0, 0, 0, 4095, 0,
 127:Core/Src/main.c ****     4095, 0, 0, 0, 0, 0, 0, 4095,
 128:Core/Src/main.c ****     0, 0, 4095, 4095, 0, 0, 0, 4095,
 129:Core/Src/main.c ****     0, 4095, 0, 4095, 4095, 0, 4095, 4095,
 130:Core/Src/main.c ****     4095, 4095, 0, 4095, 4095, 0, 4095, 4095,
 131:Core/Src/main.c ****     4095, 0, 0, 0, 0, 4095, 806, 4095,
 132:Core/Src/main.c ****     4095, 0, 4095, 4095, 4095, 0, 0, 0,
 133:Core/Src/main.c ****     0, 0, 4095, 4095, 0, 0, 0, 4095,
 134:Core/Src/main.c ****     0, 4095, 0, 4095, 4095, 0, 0, 0,
 135:Core/Src/main.c ****     0, 0, 4095, 4095, 0, 4095, 0, 2047};
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** uint32_t Guitar_LUT = {2047, 4095, 4095, 4095, 4095, 0, 0, 4095,
 138:Core/Src/main.c ****     0, 4095, 4095, 0, 4095, 4095, 0, 4095,
 139:Core/Src/main.c ****     0, 4095, 0, 4095, 0, 0, 4095, 0,
 140:Core/Src/main.c ****     0, 0, 0, 4095, 0, 0, 0, 4095,
 141:Core/Src/main.c ****     4095, 0, 0, 4095, 0, 4095, 0, 0,
 142:Core/Src/main.c ****     0, 4095, 4095, 4095, 4095, 0, 4095, 0,
 143:Core/Src/main.c ****     0, 0, 4095, 0, 4095, 0, 0, 4095,
 144:Core/Src/main.c ****     0, 4095, 4095, 0, 0, 4095, 4095, 0,
 145:Core/Src/main.c ****     0, 4095, 4095, 4095, 4095, 4095, 0, 4095,
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 4


 146:Core/Src/main.c ****     4095, 0, 4095, 4095, 4095, 0, 4095, 4095,
 147:Core/Src/main.c ****     4095, 4095, 0, 4095, 4095, 0, 0, 0,
 148:Core/Src/main.c ****     4095, 4095, 0, 0, 0, 0, 4095, 0,
 149:Core/Src/main.c ****     4095, 0, 4095, 0, 4095, 0, 4095, 4095,
 150:Core/Src/main.c ****     0, 4095, 0, 4095, 4095, 0, 4095, 0,
 151:Core/Src/main.c ****     0, 4095, 4095, 0, 4095, 0, 0, 0,
 152:Core/Src/main.c ****     4095, 0, 4095, 0, 0, 4095, 2837, 0};
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** uint32_t Drum_LUT = {2047, 4095, 0, 4095, 4095, 4095, 0, 0,
 155:Core/Src/main.c ****     4095, 4095, 0, 0, 0, 0, 0, 0,
 156:Core/Src/main.c ****     4095, 0, 1902, 4095, 4095, 4095, 0, 0,
 157:Core/Src/main.c ****     4095, 0, 4095, 4095, 4095, 0, 4095, 0,
 158:Core/Src/main.c ****     0, 4095, 4095, 4095, 0, 4095, 0, 709,
 159:Core/Src/main.c ****     4095, 0, 0, 0, 4095, 4095, 0, 0,
 160:Core/Src/main.c ****     4095, 4095, 0, 4095, 0, 4095, 4095, 4095,
 161:Core/Src/main.c ****     0, 4095, 0, 0, 4095, 4095, 4095, 4095,
 162:Core/Src/main.c ****     4095, 0, 4095, 0, 4095, 4095, 4095, 4095,
 163:Core/Src/main.c ****     0, 0, 4095, 0, 4095, 0, 1418, 4095,
 164:Core/Src/main.c ****     0, 4095, 0, 3740, 4095, 4095, 4095, 0,
 165:Core/Src/main.c ****     4095, 4095, 0, 4095, 0, 4095, 0, 0,
 166:Core/Src/main.c ****     0, 4095, 0, 0, 3288, 0, 4095, 0,
 167:Core/Src/main.c ****     0, 4095, 4095, 0, 4095, 4095, 4095, 4095,
 168:Core/Src/main.c ****     4095, 2160, 0, 0, 4095, 4095, 4095, 4095,
 169:Core/Src/main.c ****     4095, 0, 0, 0, 0, 0, 4095, 2047};
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** // TODO: Equation to calculate TIM2_Ticks
 172:Core/Src/main.c **** // TIM2_Ticks determines how often to update the PWM duty cycle
 173:Core/Src/main.c **** // Formula: TIM2_Ticks = TIM2CLK / (F_SIGNAL Ã— NS)
 174:Core/Src/main.c **** // TIM2_Ticks = 16,000,000 / (344 Ã— 128) = 16,000,000 / 44,032 â‰ˆ 363
 175:Core/Src/main.c **** uint32_t TIM2_Ticks = TIM2CLK / (F_SIGNAL * NS); // How often to write new LUT value
 176:Core/Src/main.c **** uint32_t DestAddress = (uint32_t) &(TIM3->CCR3); // Write LUT TO TIM3->CCR3 to modify PWM duty cycl
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /* USER CODE END PV */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 182:Core/Src/main.c **** void SystemClock_Config(void);
 183:Core/Src/main.c **** static void MX_GPIO_Init(void);
 184:Core/Src/main.c **** static void MX_DMA_Init(void);
 185:Core/Src/main.c **** static void MX_TIM2_Init(void);
 186:Core/Src/main.c **** static void MX_TIM3_Init(void);
 187:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 188:Core/Src/main.c **** void EXTI0_IRQHandler(void);
 189:Core/Src/main.c **** /* USER CODE END PFP */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 192:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** /* USER CODE END 0 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** /**
 197:Core/Src/main.c ****   * @brief  The application entry point.
 198:Core/Src/main.c ****   * @retval int
 199:Core/Src/main.c ****   */
 200:Core/Src/main.c **** int main(void)
 201:Core/Src/main.c **** {
 202:Core/Src/main.c **** 
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 5


 203:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /* USER CODE END 1 */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 210:Core/Src/main.c ****   HAL_Init();
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE END Init */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* Configure the system clock */
 217:Core/Src/main.c ****   SystemClock_Config();
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE END SysInit */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* Initialize all configured peripherals */
 224:Core/Src/main.c ****   MX_GPIO_Init();
 225:Core/Src/main.c ****   MX_DMA_Init();
 226:Core/Src/main.c ****   MX_TIM2_Init();
 227:Core/Src/main.c ****   MX_TIM3_Init();
 228:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 229:Core/Src/main.c ****   // TODO: Start TIM3 in PWM mode on channel 3
 230:Core/Src/main.c ****   init_LCD();
 231:Core/Src/main.c ****   HAL_Delay(10);
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 234:Core/Src/main.c ****   // TODO: Start TIM2 in Output Compare (OC) mode on channel 1
 235:Core/Src/main.c ****   HAL_TIM_OC_Start(&htim2, TIM_CHANNEL_1);
 236:Core/Src/main.c ****   // TODO: Start DMA in IT mode on TIM2->CH1. Source is LUT and Dest is TIM3->CCR3; start with Sine
 237:Core/Src/main.c ****   HAL_DMA_Start_IT(&hdma_tim2_ch1, (uint32_t)Sin_LUT, DestAddress, NS);
 238:Core/Src/main.c ****   // TODO: Write current waveform to LCD(Sine is the first waveform)
 239:Core/Src/main.c ****   lcd_command(CLEAR);
 240:Core/Src/main.c ****   lcd_putstring("Sine");
 241:Core/Src/main.c ****   // TODO: Enable DMA (start transfer from LUT to CCR)
 242:Core/Src/main.c ****   __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC1);
 243:Core/Src/main.c ****   /* USER CODE END 2 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* Infinite loop */
 246:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 247:Core/Src/main.c ****   while (1)
 248:Core/Src/main.c ****   {
 249:Core/Src/main.c ****     /* USER CODE END WHILE */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 252:Core/Src/main.c ****   }
 253:Core/Src/main.c ****   /* USER CODE END 3 */
 254:Core/Src/main.c **** }
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** /**
 257:Core/Src/main.c ****   * @brief System Clock Configuration
 258:Core/Src/main.c ****   * @retval None
 259:Core/Src/main.c ****   */
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 6


 260:Core/Src/main.c **** void SystemClock_Config(void)
 261:Core/Src/main.c **** {
 262:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 263:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 266:Core/Src/main.c ****   */
 267:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 268:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 271:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 272:Core/Src/main.c ****   */
 273:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 274:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 275:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 276:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 277:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 278:Core/Src/main.c ****   {
 279:Core/Src/main.c ****     Error_Handler();
 280:Core/Src/main.c ****   }
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 283:Core/Src/main.c ****   */
 284:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 285:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 286:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 287:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 288:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 289:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 292:Core/Src/main.c ****   {
 293:Core/Src/main.c ****     Error_Handler();
 294:Core/Src/main.c ****   }
 295:Core/Src/main.c **** }
 296:Core/Src/main.c **** 
 297:Core/Src/main.c **** /**
 298:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 299:Core/Src/main.c ****   * @param None
 300:Core/Src/main.c ****   * @retval None
 301:Core/Src/main.c ****   */
 302:Core/Src/main.c **** static void MX_TIM2_Init(void)
 303:Core/Src/main.c **** {
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 310:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 311:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 316:Core/Src/main.c ****   htim2.Instance = TIM2;
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 7


 317:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 318:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 319:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 320:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 321:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 322:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 323:Core/Src/main.c ****   {
 324:Core/Src/main.c ****     Error_Handler();
 325:Core/Src/main.c ****   }
 326:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 327:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 328:Core/Src/main.c ****   {
 329:Core/Src/main.c ****     Error_Handler();
 330:Core/Src/main.c ****   }
 331:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 332:Core/Src/main.c ****   {
 333:Core/Src/main.c ****     Error_Handler();
 334:Core/Src/main.c ****   }
 335:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 336:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 337:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 338:Core/Src/main.c ****   {
 339:Core/Src/main.c ****     Error_Handler();
 340:Core/Src/main.c ****   }
 341:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 342:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 343:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 344:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 345:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 346:Core/Src/main.c ****   {
 347:Core/Src/main.c ****     Error_Handler();
 348:Core/Src/main.c ****   }
 349:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 350:Core/Src/main.c ****   /* TIM2_CH1 DMA Init */
 351:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   hdma_tim2_ch1.Instance = DMA1_Stream5;
 354:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 355:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 356:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 357:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 358:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 359:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 360:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 361:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 362:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   if (HAL_DMA_Init(&hdma_tim2_ch1) != HAL_OK)
 365:Core/Src/main.c ****   {
 366:Core/Src/main.c ****       Error_Handler();
 367:Core/Src/main.c ****   }
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   /* Link DMA handle to TIM2 handle */
 370:Core/Src/main.c ****   __HAL_LINKDMA(&htim2, hdma[TIM_DMA_ID_CC1], hdma_tim2_ch1);
 371:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 372:Core/Src/main.c **** 
 373:Core/Src/main.c **** }
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 8


 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** /**
 376:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 377:Core/Src/main.c ****   * @param None
 378:Core/Src/main.c ****   * @retval None
 379:Core/Src/main.c ****   */
 380:Core/Src/main.c **** static void MX_TIM3_Init(void)
 381:Core/Src/main.c **** {
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 388:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 389:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 394:Core/Src/main.c ****   htim3.Instance = TIM3;
 395:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 396:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 397:Core/Src/main.c ****   htim3.Init.Period = 65535;
 398:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 399:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 400:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 401:Core/Src/main.c ****   {
 402:Core/Src/main.c ****     Error_Handler();
 403:Core/Src/main.c ****   }
 404:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 405:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 406:Core/Src/main.c ****   {
 407:Core/Src/main.c ****     Error_Handler();
 408:Core/Src/main.c ****   }
 409:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 410:Core/Src/main.c ****   {
 411:Core/Src/main.c ****     Error_Handler();
 412:Core/Src/main.c ****   }
 413:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 414:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 415:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 416:Core/Src/main.c ****   {
 417:Core/Src/main.c ****     Error_Handler();
 418:Core/Src/main.c ****   }
 419:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 420:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 421:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 422:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 423:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 424:Core/Src/main.c ****   {
 425:Core/Src/main.c ****     Error_Handler();
 426:Core/Src/main.c ****   }
 427:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 430:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 9


 431:Core/Src/main.c **** 
 432:Core/Src/main.c **** }
 433:Core/Src/main.c **** 
 434:Core/Src/main.c **** /**
 435:Core/Src/main.c ****   * Enable DMA controller clock
 436:Core/Src/main.c ****   */
 437:Core/Src/main.c **** static void MX_DMA_Init(void)
 438:Core/Src/main.c **** {
 439:Core/Src/main.c **** 
 440:Core/Src/main.c ****   /* DMA controller clock enable */
 441:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   /* DMA interrupt init */
 444:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 445:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 446:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 447:Core/Src/main.c **** 
 448:Core/Src/main.c **** }
 449:Core/Src/main.c **** 
 450:Core/Src/main.c **** /**
 451:Core/Src/main.c ****   * @brief GPIO Initialization Function
 452:Core/Src/main.c ****   * @param None
 453:Core/Src/main.c ****   * @retval None
 454:Core/Src/main.c ****   */
 455:Core/Src/main.c **** static void MX_GPIO_Init(void)
 456:Core/Src/main.c **** {
  28              		.loc 1 456 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 36
  35              		.cfi_offset 4, -36
  36              		.cfi_offset 5, -32
  37              		.cfi_offset 6, -28
  38              		.cfi_offset 7, -24
  39              		.cfi_offset 8, -20
  40              		.cfi_offset 9, -16
  41              		.cfi_offset 10, -12
  42              		.cfi_offset 11, -8
  43              		.cfi_offset 14, -4
  44 0004 89B0     		sub	sp, sp, #36
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 72
 457:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  47              		.loc 1 457 3 view .LVU1
  48              		.loc 1 457 20 is_stmt 0 view .LVU2
  49 0006 0024     		movs	r4, #0
  50 0008 0394     		str	r4, [sp, #12]
  51 000a 0494     		str	r4, [sp, #16]
  52 000c 0594     		str	r4, [sp, #20]
  53 000e 0694     		str	r4, [sp, #24]
  54 0010 0794     		str	r4, [sp, #28]
 458:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 10


 461:Core/Src/main.c **** 
 462:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 463:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  55              		.loc 1 463 3 is_stmt 1 view .LVU3
  56              	.LBB4:
  57              		.loc 1 463 3 view .LVU4
  58 0012 0094     		str	r4, [sp]
  59              		.loc 1 463 3 view .LVU5
  60 0014 2F4B     		ldr	r3, .L3
  61 0016 1A6B     		ldr	r2, [r3, #48]
  62 0018 42F08002 		orr	r2, r2, #128
  63 001c 1A63     		str	r2, [r3, #48]
  64              		.loc 1 463 3 view .LVU6
  65 001e 1A6B     		ldr	r2, [r3, #48]
  66 0020 02F08002 		and	r2, r2, #128
  67 0024 0092     		str	r2, [sp]
  68              		.loc 1 463 3 view .LVU7
  69 0026 009A     		ldr	r2, [sp]
  70              	.LBE4:
  71              		.loc 1 463 3 view .LVU8
 464:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  72              		.loc 1 464 3 view .LVU9
  73              	.LBB5:
  74              		.loc 1 464 3 view .LVU10
  75 0028 0194     		str	r4, [sp, #4]
  76              		.loc 1 464 3 view .LVU11
  77 002a 1A6B     		ldr	r2, [r3, #48]
  78 002c 42F00102 		orr	r2, r2, #1
  79 0030 1A63     		str	r2, [r3, #48]
  80              		.loc 1 464 3 view .LVU12
  81 0032 1A6B     		ldr	r2, [r3, #48]
  82 0034 02F00102 		and	r2, r2, #1
  83 0038 0192     		str	r2, [sp, #4]
  84              		.loc 1 464 3 view .LVU13
  85 003a 019A     		ldr	r2, [sp, #4]
  86              	.LBE5:
  87              		.loc 1 464 3 view .LVU14
 465:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  88              		.loc 1 465 3 view .LVU15
  89              	.LBB6:
  90              		.loc 1 465 3 view .LVU16
  91 003c 0294     		str	r4, [sp, #8]
  92              		.loc 1 465 3 view .LVU17
  93 003e 1A6B     		ldr	r2, [r3, #48]
  94 0040 42F00202 		orr	r2, r2, #2
  95 0044 1A63     		str	r2, [r3, #48]
  96              		.loc 1 465 3 view .LVU18
  97 0046 1B6B     		ldr	r3, [r3, #48]
  98 0048 03F00203 		and	r3, r3, #2
  99 004c 0293     		str	r3, [sp, #8]
 100              		.loc 1 465 3 view .LVU19
 101 004e 029B     		ldr	r3, [sp, #8]
 102              	.LBE6:
 103              		.loc 1 465 3 view .LVU20
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   // -------------------------------
 468:Core/Src/main.c ****   // LCD pins configuration
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 11


 469:Core/Src/main.c ****   // -------------------------------
 470:Core/Src/main.c ****   // Configure PC14 (RS) and PC15 (E) as output push-pull
 471:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_14 | GPIO_PIN_15;
 104              		.loc 1 471 3 view .LVU21
 105              		.loc 1 471 23 is_stmt 0 view .LVU22
 106 0050 4FF4404B 		mov	fp, #49152
 107 0054 CDF80CB0 		str	fp, [sp, #12]
 472:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 108              		.loc 1 472 3 is_stmt 1 view .LVU23
 109              		.loc 1 472 24 is_stmt 0 view .LVU24
 110 0058 0126     		movs	r6, #1
 111 005a 0496     		str	r6, [sp, #16]
 473:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 473 3 is_stmt 1 view .LVU25
 474:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 113              		.loc 1 474 3 view .LVU26
 475:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 114              		.loc 1 475 3 view .LVU27
 115 005c DFF87CA0 		ldr	r10, .L3+8
 116 0060 03A9     		add	r1, sp, #12
 117 0062 5046     		mov	r0, r10
 118 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 119              	.LVL0:
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****   // Configure PB8 (D4) and PB9 (D5) as output push-pull
 478:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8 | GPIO_PIN_9;
 120              		.loc 1 478 3 view .LVU28
 121              		.loc 1 478 23 is_stmt 0 view .LVU29
 122 0068 4FF44079 		mov	r9, #768
 123 006c CDF80C90 		str	r9, [sp, #12]
 479:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 124              		.loc 1 479 3 is_stmt 1 view .LVU30
 125 0070 DFF86C80 		ldr	r8, .L3+12
 126 0074 03A9     		add	r1, sp, #12
 127 0076 4046     		mov	r0, r8
 128 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 129              	.LVL1:
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   // Configure PA12 (D6) and PA15 (D7) as output push-pull
 482:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12 | GPIO_PIN_15;
 130              		.loc 1 482 3 view .LVU31
 131              		.loc 1 482 23 is_stmt 0 view .LVU32
 132 007c 4FF41047 		mov	r7, #36864
 133 0080 0397     		str	r7, [sp, #12]
 483:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 134              		.loc 1 483 3 is_stmt 1 view .LVU33
 135 0082 154D     		ldr	r5, .L3+4
 136 0084 03A9     		add	r1, sp, #12
 137 0086 2846     		mov	r0, r5
 138 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 139              	.LVL2:
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****   // Set all LCD pins LOW initially
 486:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14 | GPIO_PIN_15, GPIO_PIN_RESET);
 140              		.loc 1 486 3 view .LVU34
 141 008c 2246     		mov	r2, r4
 142 008e 5946     		mov	r1, fp
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 12


 143 0090 5046     		mov	r0, r10
 144 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 145              	.LVL3:
 487:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8 | GPIO_PIN_9, GPIO_PIN_RESET);
 146              		.loc 1 487 3 view .LVU35
 147 0096 2246     		mov	r2, r4
 148 0098 4946     		mov	r1, r9
 149 009a 4046     		mov	r0, r8
 150 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 151              	.LVL4:
 488:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_12 | GPIO_PIN_15, GPIO_PIN_RESET);
 152              		.loc 1 488 3 view .LVU36
 153 00a0 2246     		mov	r2, r4
 154 00a2 3946     		mov	r1, r7
 155 00a4 2846     		mov	r0, r5
 156 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 157              	.LVL5:
 489:Core/Src/main.c **** 
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   // -------------------------------
 492:Core/Src/main.c ****   // Button0 configuration (PA0)
 493:Core/Src/main.c ****   // -------------------------------
 494:Core/Src/main.c ****   GPIO_InitStruct.Pin = Button0_Pin;
 158              		.loc 1 494 3 view .LVU37
 159              		.loc 1 494 23 is_stmt 0 view .LVU38
 160 00aa 0396     		str	r6, [sp, #12]
 495:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING; // Interrupt on rising edge
 161              		.loc 1 495 3 is_stmt 1 view .LVU39
 162              		.loc 1 495 24 is_stmt 0 view .LVU40
 163 00ac 4FF48813 		mov	r3, #1114112
 164 00b0 0493     		str	r3, [sp, #16]
 496:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;         // Use pull-up resistor
 165              		.loc 1 496 3 is_stmt 1 view .LVU41
 166              		.loc 1 496 24 is_stmt 0 view .LVU42
 167 00b2 0596     		str	r6, [sp, #20]
 497:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 168              		.loc 1 497 3 is_stmt 1 view .LVU43
 169 00b4 03A9     		add	r1, sp, #12
 170 00b6 2846     		mov	r0, r5
 171 00b8 FFF7FEFF 		bl	HAL_GPIO_Init
 172              	.LVL6:
 498:Core/Src/main.c **** 
 499:Core/Src/main.c ****   // Enable and set EXTI line 0 interrupt priority
 500:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);
 173              		.loc 1 500 3 view .LVU44
 174 00bc 2246     		mov	r2, r4
 175 00be 0221     		movs	r1, #2
 176 00c0 0620     		movs	r0, #6
 177 00c2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 178              	.LVL7:
 501:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 179              		.loc 1 501 3 view .LVU45
 180 00c6 0620     		movs	r0, #6
 181 00c8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 182              	.LVL8:
 502:Core/Src/main.c **** 
 503:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 13


 504:Core/Src/main.c **** }
 183              		.loc 1 504 1 is_stmt 0 view .LVU46
 184 00cc 09B0     		add	sp, sp, #36
 185              	.LCFI2:
 186              		.cfi_def_cfa_offset 36
 187              		@ sp needed
 188 00ce BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 189              	.L4:
 190 00d2 00BF     		.align	2
 191              	.L3:
 192 00d4 00380240 		.word	1073887232
 193 00d8 00000240 		.word	1073872896
 194 00dc 00080240 		.word	1073874944
 195 00e0 00040240 		.word	1073873920
 196              		.cfi_endproc
 197              	.LFE142:
 199              		.section	.text.MX_DMA_Init,"ax",%progbits
 200              		.align	1
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 205              	MX_DMA_Init:
 206              	.LFB141:
 438:Core/Src/main.c **** 
 207              		.loc 1 438 1 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 8
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 00B5     		push	{lr}
 212              	.LCFI3:
 213              		.cfi_def_cfa_offset 4
 214              		.cfi_offset 14, -4
 215 0002 83B0     		sub	sp, sp, #12
 216              	.LCFI4:
 217              		.cfi_def_cfa_offset 16
 441:Core/Src/main.c **** 
 218              		.loc 1 441 3 view .LVU48
 219              	.LBB7:
 441:Core/Src/main.c **** 
 220              		.loc 1 441 3 view .LVU49
 221 0004 0021     		movs	r1, #0
 222 0006 0191     		str	r1, [sp, #4]
 441:Core/Src/main.c **** 
 223              		.loc 1 441 3 view .LVU50
 224 0008 094B     		ldr	r3, .L7
 225 000a 1A6B     		ldr	r2, [r3, #48]
 226 000c 42F40012 		orr	r2, r2, #2097152
 227 0010 1A63     		str	r2, [r3, #48]
 441:Core/Src/main.c **** 
 228              		.loc 1 441 3 view .LVU51
 229 0012 1B6B     		ldr	r3, [r3, #48]
 230 0014 03F40013 		and	r3, r3, #2097152
 231 0018 0193     		str	r3, [sp, #4]
 441:Core/Src/main.c **** 
 232              		.loc 1 441 3 view .LVU52
 233 001a 019B     		ldr	r3, [sp, #4]
 234              	.LBE7:
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 14


 441:Core/Src/main.c **** 
 235              		.loc 1 441 3 view .LVU53
 445:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 236              		.loc 1 445 3 view .LVU54
 237 001c 0A46     		mov	r2, r1
 238 001e 1020     		movs	r0, #16
 239 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 240              	.LVL9:
 446:Core/Src/main.c **** 
 241              		.loc 1 446 3 view .LVU55
 242 0024 1020     		movs	r0, #16
 243 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 244              	.LVL10:
 448:Core/Src/main.c **** 
 245              		.loc 1 448 1 is_stmt 0 view .LVU56
 246 002a 03B0     		add	sp, sp, #12
 247              	.LCFI5:
 248              		.cfi_def_cfa_offset 4
 249              		@ sp needed
 250 002c 5DF804FB 		ldr	pc, [sp], #4
 251              	.L8:
 252              		.align	2
 253              	.L7:
 254 0030 00380240 		.word	1073887232
 255              		.cfi_endproc
 256              	.LFE141:
 258              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 259              		.align	1
 260              		.global	EXTI0_IRQHandler
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 265              	EXTI0_IRQHandler:
 266              	.LFB143:
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 507:Core/Src/main.c **** void EXTI0_IRQHandler(void){
 267              		.loc 1 507 28 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271 0000 08B5     		push	{r3, lr}
 272              	.LCFI6:
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 3, -8
 275              		.cfi_offset 14, -4
 508:Core/Src/main.c **** 
 509:Core/Src/main.c **** 	// TODO: Debounce using HAL_GetTick()
 510:Core/Src/main.c **** 
 511:Core/Src/main.c **** 
 512:Core/Src/main.c **** 	// TODO: Disable DMA transfer and abort IT, then start DMA in IT mode with new LUT and re-enable t
 513:Core/Src/main.c **** 	// HINT: Consider using C's "switch" function to handle LUT changes
 514:Core/Src/main.c **** 
 515:Core/Src/main.c **** 
 516:Core/Src/main.c **** 
 517:Core/Src/main.c **** 
 518:Core/Src/main.c **** 	HAL_GPIO_EXTI_IRQHandler(Button0_Pin); // Clear interrupt flags
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 15


 276              		.loc 1 518 2 view .LVU58
 277 0002 0120     		movs	r0, #1
 278 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 279              	.LVL11:
 519:Core/Src/main.c **** }
 280              		.loc 1 519 1 is_stmt 0 view .LVU59
 281 0008 08BD     		pop	{r3, pc}
 282              		.cfi_endproc
 283              	.LFE143:
 285              		.section	.text.Error_Handler,"ax",%progbits
 286              		.align	1
 287              		.global	Error_Handler
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 292              	Error_Handler:
 293              	.LFB144:
 520:Core/Src/main.c **** /* USER CODE END 4 */
 521:Core/Src/main.c **** 
 522:Core/Src/main.c **** /**
 523:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 524:Core/Src/main.c ****   * @retval None
 525:Core/Src/main.c ****   */
 526:Core/Src/main.c **** void Error_Handler(void)
 527:Core/Src/main.c **** {
 294              		.loc 1 527 1 is_stmt 1 view -0
 295              		.cfi_startproc
 296              		@ Volatile: function does not return.
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 528:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 529:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 530:Core/Src/main.c ****   __disable_irq();
 300              		.loc 1 530 3 view .LVU61
 301              	.LBB8:
 302              	.LBI8:
 303              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 16


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 17


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 18


 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 19


 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 20


 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 21


 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 22


 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 23


 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 24


 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 25


 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 26


 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 27


 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 28


 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 29


 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 30


 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 31


 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 32


 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 304              		.loc 2 960 27 view .LVU62
 305              	.LBB9:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 306              		.loc 2 962 3 view .LVU63
 307              		.syntax unified
 308              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 309 0000 72B6     		cpsid i
 310              	@ 0 "" 2
 311              		.thumb
 312              		.syntax unified
 313              	.L12:
 314              	.LBE9:
 315              	.LBE8:
 531:Core/Src/main.c ****   while (1)
 316              		.loc 1 531 3 view .LVU64
 532:Core/Src/main.c ****   {
 533:Core/Src/main.c ****   }
 317              		.loc 1 533 3 view .LVU65
 531:Core/Src/main.c ****   while (1)
 318              		.loc 1 531 9 view .LVU66
 319 0002 FEE7     		b	.L12
 320              		.cfi_endproc
 321              	.LFE144:
 323              		.section	.text.MX_TIM2_Init,"ax",%progbits
 324              		.align	1
 325              		.syntax unified
 326              		.thumb
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 33


 327              		.thumb_func
 329              	MX_TIM2_Init:
 330              	.LFB139:
 303:Core/Src/main.c **** 
 331              		.loc 1 303 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 56
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335 0000 00B5     		push	{lr}
 336              	.LCFI7:
 337              		.cfi_def_cfa_offset 4
 338              		.cfi_offset 14, -4
 339 0002 8FB0     		sub	sp, sp, #60
 340              	.LCFI8:
 341              		.cfi_def_cfa_offset 64
 309:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 342              		.loc 1 309 3 view .LVU68
 309:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 343              		.loc 1 309 26 is_stmt 0 view .LVU69
 344 0004 0023     		movs	r3, #0
 345 0006 0A93     		str	r3, [sp, #40]
 346 0008 0B93     		str	r3, [sp, #44]
 347 000a 0C93     		str	r3, [sp, #48]
 348 000c 0D93     		str	r3, [sp, #52]
 310:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 349              		.loc 1 310 3 is_stmt 1 view .LVU70
 310:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 350              		.loc 1 310 27 is_stmt 0 view .LVU71
 351 000e 0893     		str	r3, [sp, #32]
 352 0010 0993     		str	r3, [sp, #36]
 311:Core/Src/main.c **** 
 353              		.loc 1 311 3 is_stmt 1 view .LVU72
 311:Core/Src/main.c **** 
 354              		.loc 1 311 22 is_stmt 0 view .LVU73
 355 0012 0193     		str	r3, [sp, #4]
 356 0014 0293     		str	r3, [sp, #8]
 357 0016 0393     		str	r3, [sp, #12]
 358 0018 0493     		str	r3, [sp, #16]
 359 001a 0593     		str	r3, [sp, #20]
 360 001c 0693     		str	r3, [sp, #24]
 361 001e 0793     		str	r3, [sp, #28]
 316:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 362              		.loc 1 316 3 is_stmt 1 view .LVU74
 316:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 363              		.loc 1 316 18 is_stmt 0 view .LVU75
 364 0020 3548     		ldr	r0, .L27
 365 0022 4FF08042 		mov	r2, #1073741824
 366 0026 0260     		str	r2, [r0]
 317:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 367              		.loc 1 317 3 is_stmt 1 view .LVU76
 317:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 368              		.loc 1 317 24 is_stmt 0 view .LVU77
 369 0028 4360     		str	r3, [r0, #4]
 318:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 370              		.loc 1 318 3 is_stmt 1 view .LVU78
 318:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 371              		.loc 1 318 26 is_stmt 0 view .LVU79
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 34


 372 002a 8360     		str	r3, [r0, #8]
 319:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 373              		.loc 1 319 3 is_stmt 1 view .LVU80
 319:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 374              		.loc 1 319 21 is_stmt 0 view .LVU81
 375 002c 4FF0FF32 		mov	r2, #-1
 376 0030 C260     		str	r2, [r0, #12]
 320:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 377              		.loc 1 320 3 is_stmt 1 view .LVU82
 320:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 378              		.loc 1 320 28 is_stmt 0 view .LVU83
 379 0032 0361     		str	r3, [r0, #16]
 321:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 380              		.loc 1 321 3 is_stmt 1 view .LVU84
 321:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 381              		.loc 1 321 32 is_stmt 0 view .LVU85
 382 0034 8361     		str	r3, [r0, #24]
 322:Core/Src/main.c ****   {
 383              		.loc 1 322 3 is_stmt 1 view .LVU86
 322:Core/Src/main.c ****   {
 384              		.loc 1 322 7 is_stmt 0 view .LVU87
 385 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 386              	.LVL12:
 322:Core/Src/main.c ****   {
 387              		.loc 1 322 6 discriminator 1 view .LVU88
 388 003a 0028     		cmp	r0, #0
 389 003c 50D1     		bne	.L21
 326:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 390              		.loc 1 326 3 is_stmt 1 view .LVU89
 326:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 391              		.loc 1 326 34 is_stmt 0 view .LVU90
 392 003e 4FF48053 		mov	r3, #4096
 393 0042 0A93     		str	r3, [sp, #40]
 327:Core/Src/main.c ****   {
 394              		.loc 1 327 3 is_stmt 1 view .LVU91
 327:Core/Src/main.c ****   {
 395              		.loc 1 327 7 is_stmt 0 view .LVU92
 396 0044 0AA9     		add	r1, sp, #40
 397 0046 2C48     		ldr	r0, .L27
 398 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 399              	.LVL13:
 327:Core/Src/main.c ****   {
 400              		.loc 1 327 6 discriminator 1 view .LVU93
 401 004c 0028     		cmp	r0, #0
 402 004e 49D1     		bne	.L22
 331:Core/Src/main.c ****   {
 403              		.loc 1 331 3 is_stmt 1 view .LVU94
 331:Core/Src/main.c ****   {
 404              		.loc 1 331 7 is_stmt 0 view .LVU95
 405 0050 2948     		ldr	r0, .L27
 406 0052 FFF7FEFF 		bl	HAL_TIM_OC_Init
 407              	.LVL14:
 331:Core/Src/main.c ****   {
 408              		.loc 1 331 6 discriminator 1 view .LVU96
 409 0056 0028     		cmp	r0, #0
 410 0058 46D1     		bne	.L23
 335:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 35


 411              		.loc 1 335 3 is_stmt 1 view .LVU97
 335:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 412              		.loc 1 335 37 is_stmt 0 view .LVU98
 413 005a 0023     		movs	r3, #0
 414 005c 0893     		str	r3, [sp, #32]
 336:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 415              		.loc 1 336 3 is_stmt 1 view .LVU99
 336:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 416              		.loc 1 336 33 is_stmt 0 view .LVU100
 417 005e 0993     		str	r3, [sp, #36]
 337:Core/Src/main.c ****   {
 418              		.loc 1 337 3 is_stmt 1 view .LVU101
 337:Core/Src/main.c ****   {
 419              		.loc 1 337 7 is_stmt 0 view .LVU102
 420 0060 08A9     		add	r1, sp, #32
 421 0062 2548     		ldr	r0, .L27
 422 0064 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 423              	.LVL15:
 337:Core/Src/main.c ****   {
 424              		.loc 1 337 6 discriminator 1 view .LVU103
 425 0068 0028     		cmp	r0, #0
 426 006a 3FD1     		bne	.L24
 341:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 427              		.loc 1 341 3 is_stmt 1 view .LVU104
 341:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 428              		.loc 1 341 20 is_stmt 0 view .LVU105
 429 006c 0022     		movs	r2, #0
 430 006e 0192     		str	r2, [sp, #4]
 342:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 431              		.loc 1 342 3 is_stmt 1 view .LVU106
 342:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 432              		.loc 1 342 19 is_stmt 0 view .LVU107
 433 0070 0292     		str	r2, [sp, #8]
 343:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 434              		.loc 1 343 3 is_stmt 1 view .LVU108
 343:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 435              		.loc 1 343 24 is_stmt 0 view .LVU109
 436 0072 0392     		str	r2, [sp, #12]
 344:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 437              		.loc 1 344 3 is_stmt 1 view .LVU110
 344:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 438              		.loc 1 344 24 is_stmt 0 view .LVU111
 439 0074 0592     		str	r2, [sp, #20]
 345:Core/Src/main.c ****   {
 440              		.loc 1 345 3 is_stmt 1 view .LVU112
 345:Core/Src/main.c ****   {
 441              		.loc 1 345 7 is_stmt 0 view .LVU113
 442 0076 01A9     		add	r1, sp, #4
 443 0078 1F48     		ldr	r0, .L27
 444 007a FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 445              	.LVL16:
 345:Core/Src/main.c ****   {
 446              		.loc 1 345 6 discriminator 1 view .LVU114
 447 007e 0028     		cmp	r0, #0
 448 0080 36D1     		bne	.L25
 351:Core/Src/main.c **** 
 449              		.loc 1 351 3 is_stmt 1 view .LVU115
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 36


 450              	.LBB10:
 351:Core/Src/main.c **** 
 451              		.loc 1 351 3 view .LVU116
 452 0082 0023     		movs	r3, #0
 453 0084 0093     		str	r3, [sp]
 351:Core/Src/main.c **** 
 454              		.loc 1 351 3 view .LVU117
 455 0086 1D4A     		ldr	r2, .L27+4
 456 0088 116B     		ldr	r1, [r2, #48]
 457 008a 41F40011 		orr	r1, r1, #2097152
 458 008e 1163     		str	r1, [r2, #48]
 351:Core/Src/main.c **** 
 459              		.loc 1 351 3 view .LVU118
 460 0090 126B     		ldr	r2, [r2, #48]
 461 0092 02F40012 		and	r2, r2, #2097152
 462 0096 0092     		str	r2, [sp]
 351:Core/Src/main.c **** 
 463              		.loc 1 351 3 view .LVU119
 464 0098 009A     		ldr	r2, [sp]
 465              	.LBE10:
 351:Core/Src/main.c **** 
 466              		.loc 1 351 3 view .LVU120
 353:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 467              		.loc 1 353 3 view .LVU121
 353:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 468              		.loc 1 353 26 is_stmt 0 view .LVU122
 469 009a 1948     		ldr	r0, .L27+8
 470 009c 194A     		ldr	r2, .L27+12
 471 009e 0260     		str	r2, [r0]
 354:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 472              		.loc 1 354 3 is_stmt 1 view .LVU123
 354:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 473              		.loc 1 354 30 is_stmt 0 view .LVU124
 474 00a0 4FF0C062 		mov	r2, #100663296
 475 00a4 4260     		str	r2, [r0, #4]
 355:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 476              		.loc 1 355 3 is_stmt 1 view .LVU125
 355:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 477              		.loc 1 355 32 is_stmt 0 view .LVU126
 478 00a6 4022     		movs	r2, #64
 479 00a8 8260     		str	r2, [r0, #8]
 356:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 480              		.loc 1 356 3 is_stmt 1 view .LVU127
 356:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 481              		.loc 1 356 32 is_stmt 0 view .LVU128
 482 00aa C360     		str	r3, [r0, #12]
 357:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 483              		.loc 1 357 3 is_stmt 1 view .LVU129
 357:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 484              		.loc 1 357 29 is_stmt 0 view .LVU130
 485 00ac 4FF48062 		mov	r2, #1024
 486 00b0 0261     		str	r2, [r0, #16]
 358:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 487              		.loc 1 358 3 is_stmt 1 view .LVU131
 358:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 488              		.loc 1 358 42 is_stmt 0 view .LVU132
 489 00b2 4FF48052 		mov	r2, #4096
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 37


 490 00b6 4261     		str	r2, [r0, #20]
 359:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 491              		.loc 1 359 3 is_stmt 1 view .LVU133
 359:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 492              		.loc 1 359 39 is_stmt 0 view .LVU134
 493 00b8 4FF48042 		mov	r2, #16384
 494 00bc 8261     		str	r2, [r0, #24]
 360:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 495              		.loc 1 360 3 is_stmt 1 view .LVU135
 360:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 496              		.loc 1 360 27 is_stmt 0 view .LVU136
 497 00be 4FF48072 		mov	r2, #256
 498 00c2 C261     		str	r2, [r0, #28]
 361:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 499              		.loc 1 361 3 is_stmt 1 view .LVU137
 361:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 500              		.loc 1 361 31 is_stmt 0 view .LVU138
 501 00c4 4FF40032 		mov	r2, #131072
 502 00c8 0262     		str	r2, [r0, #32]
 362:Core/Src/main.c **** 
 503              		.loc 1 362 3 is_stmt 1 view .LVU139
 362:Core/Src/main.c **** 
 504              		.loc 1 362 31 is_stmt 0 view .LVU140
 505 00ca 4362     		str	r3, [r0, #36]
 364:Core/Src/main.c ****   {
 506              		.loc 1 364 3 is_stmt 1 view .LVU141
 364:Core/Src/main.c ****   {
 507              		.loc 1 364 7 is_stmt 0 view .LVU142
 508 00cc FFF7FEFF 		bl	HAL_DMA_Init
 509              	.LVL17:
 364:Core/Src/main.c ****   {
 510              		.loc 1 364 6 discriminator 1 view .LVU143
 511 00d0 80B9     		cbnz	r0, .L26
 370:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 512              		.loc 1 370 3 is_stmt 1 view .LVU144
 370:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 513              		.loc 1 370 3 view .LVU145
 514 00d2 094A     		ldr	r2, .L27
 515 00d4 0A4B     		ldr	r3, .L27+8
 516 00d6 5362     		str	r3, [r2, #36]
 370:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 517              		.loc 1 370 3 view .LVU146
 518 00d8 9A63     		str	r2, [r3, #56]
 370:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 519              		.loc 1 370 3 view .LVU147
 373:Core/Src/main.c **** 
 520              		.loc 1 373 1 is_stmt 0 view .LVU148
 521 00da 0FB0     		add	sp, sp, #60
 522              	.LCFI9:
 523              		.cfi_remember_state
 524              		.cfi_def_cfa_offset 4
 525              		@ sp needed
 526 00dc 5DF804FB 		ldr	pc, [sp], #4
 527              	.L21:
 528              	.LCFI10:
 529              		.cfi_restore_state
 324:Core/Src/main.c ****   }
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 38


 530              		.loc 1 324 5 is_stmt 1 view .LVU149
 531 00e0 FFF7FEFF 		bl	Error_Handler
 532              	.LVL18:
 533              	.L22:
 329:Core/Src/main.c ****   }
 534              		.loc 1 329 5 view .LVU150
 535 00e4 FFF7FEFF 		bl	Error_Handler
 536              	.LVL19:
 537              	.L23:
 333:Core/Src/main.c ****   }
 538              		.loc 1 333 5 view .LVU151
 539 00e8 FFF7FEFF 		bl	Error_Handler
 540              	.LVL20:
 541              	.L24:
 339:Core/Src/main.c ****   }
 542              		.loc 1 339 5 view .LVU152
 543 00ec FFF7FEFF 		bl	Error_Handler
 544              	.LVL21:
 545              	.L25:
 347:Core/Src/main.c ****   }
 546              		.loc 1 347 5 view .LVU153
 547 00f0 FFF7FEFF 		bl	Error_Handler
 548              	.LVL22:
 549              	.L26:
 366:Core/Src/main.c ****   }
 550              		.loc 1 366 7 view .LVU154
 551 00f4 FFF7FEFF 		bl	Error_Handler
 552              	.LVL23:
 553              	.L28:
 554              		.align	2
 555              	.L27:
 556 00f8 00000000 		.word	htim2
 557 00fc 00380240 		.word	1073887232
 558 0100 00000000 		.word	hdma_tim2_ch1
 559 0104 88600240 		.word	1073897608
 560              		.cfi_endproc
 561              	.LFE139:
 563              		.section	.text.MX_TIM3_Init,"ax",%progbits
 564              		.align	1
 565              		.syntax unified
 566              		.thumb
 567              		.thumb_func
 569              	MX_TIM3_Init:
 570              	.LFB140:
 381:Core/Src/main.c **** 
 571              		.loc 1 381 1 view -0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 56
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575 0000 00B5     		push	{lr}
 576              	.LCFI11:
 577              		.cfi_def_cfa_offset 4
 578              		.cfi_offset 14, -4
 579 0002 8FB0     		sub	sp, sp, #60
 580              	.LCFI12:
 581              		.cfi_def_cfa_offset 64
 387:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 39


 582              		.loc 1 387 3 view .LVU156
 387:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 583              		.loc 1 387 26 is_stmt 0 view .LVU157
 584 0004 0023     		movs	r3, #0
 585 0006 0A93     		str	r3, [sp, #40]
 586 0008 0B93     		str	r3, [sp, #44]
 587 000a 0C93     		str	r3, [sp, #48]
 588 000c 0D93     		str	r3, [sp, #52]
 388:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 589              		.loc 1 388 3 is_stmt 1 view .LVU158
 388:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 590              		.loc 1 388 27 is_stmt 0 view .LVU159
 591 000e 0893     		str	r3, [sp, #32]
 592 0010 0993     		str	r3, [sp, #36]
 389:Core/Src/main.c **** 
 593              		.loc 1 389 3 is_stmt 1 view .LVU160
 389:Core/Src/main.c **** 
 594              		.loc 1 389 22 is_stmt 0 view .LVU161
 595 0012 0193     		str	r3, [sp, #4]
 596 0014 0293     		str	r3, [sp, #8]
 597 0016 0393     		str	r3, [sp, #12]
 598 0018 0493     		str	r3, [sp, #16]
 599 001a 0593     		str	r3, [sp, #20]
 600 001c 0693     		str	r3, [sp, #24]
 601 001e 0793     		str	r3, [sp, #28]
 394:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 602              		.loc 1 394 3 is_stmt 1 view .LVU162
 394:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 603              		.loc 1 394 18 is_stmt 0 view .LVU163
 604 0020 1E48     		ldr	r0, .L41
 605 0022 1F4A     		ldr	r2, .L41+4
 606 0024 0260     		str	r2, [r0]
 395:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 607              		.loc 1 395 3 is_stmt 1 view .LVU164
 395:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 608              		.loc 1 395 24 is_stmt 0 view .LVU165
 609 0026 4360     		str	r3, [r0, #4]
 396:Core/Src/main.c ****   htim3.Init.Period = 65535;
 610              		.loc 1 396 3 is_stmt 1 view .LVU166
 396:Core/Src/main.c ****   htim3.Init.Period = 65535;
 611              		.loc 1 396 26 is_stmt 0 view .LVU167
 612 0028 8360     		str	r3, [r0, #8]
 397:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 613              		.loc 1 397 3 is_stmt 1 view .LVU168
 397:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 614              		.loc 1 397 21 is_stmt 0 view .LVU169
 615 002a 4FF6FF72 		movw	r2, #65535
 616 002e C260     		str	r2, [r0, #12]
 398:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 617              		.loc 1 398 3 is_stmt 1 view .LVU170
 398:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 618              		.loc 1 398 28 is_stmt 0 view .LVU171
 619 0030 0361     		str	r3, [r0, #16]
 399:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 620              		.loc 1 399 3 is_stmt 1 view .LVU172
 399:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 621              		.loc 1 399 32 is_stmt 0 view .LVU173
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 40


 622 0032 8361     		str	r3, [r0, #24]
 400:Core/Src/main.c ****   {
 623              		.loc 1 400 3 is_stmt 1 view .LVU174
 400:Core/Src/main.c ****   {
 624              		.loc 1 400 7 is_stmt 0 view .LVU175
 625 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 626              	.LVL24:
 400:Core/Src/main.c ****   {
 627              		.loc 1 400 6 discriminator 1 view .LVU176
 628 0038 28BB     		cbnz	r0, .L36
 404:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 629              		.loc 1 404 3 is_stmt 1 view .LVU177
 404:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 630              		.loc 1 404 34 is_stmt 0 view .LVU178
 631 003a 4FF48053 		mov	r3, #4096
 632 003e 0A93     		str	r3, [sp, #40]
 405:Core/Src/main.c ****   {
 633              		.loc 1 405 3 is_stmt 1 view .LVU179
 405:Core/Src/main.c ****   {
 634              		.loc 1 405 7 is_stmt 0 view .LVU180
 635 0040 0AA9     		add	r1, sp, #40
 636 0042 1648     		ldr	r0, .L41
 637 0044 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 638              	.LVL25:
 405:Core/Src/main.c ****   {
 639              		.loc 1 405 6 discriminator 1 view .LVU181
 640 0048 F8B9     		cbnz	r0, .L37
 409:Core/Src/main.c ****   {
 641              		.loc 1 409 3 is_stmt 1 view .LVU182
 409:Core/Src/main.c ****   {
 642              		.loc 1 409 7 is_stmt 0 view .LVU183
 643 004a 1448     		ldr	r0, .L41
 644 004c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 645              	.LVL26:
 409:Core/Src/main.c ****   {
 646              		.loc 1 409 6 discriminator 1 view .LVU184
 647 0050 E8B9     		cbnz	r0, .L38
 413:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 648              		.loc 1 413 3 is_stmt 1 view .LVU185
 413:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 649              		.loc 1 413 37 is_stmt 0 view .LVU186
 650 0052 0023     		movs	r3, #0
 651 0054 0893     		str	r3, [sp, #32]
 414:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 652              		.loc 1 414 3 is_stmt 1 view .LVU187
 414:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 653              		.loc 1 414 33 is_stmt 0 view .LVU188
 654 0056 0993     		str	r3, [sp, #36]
 415:Core/Src/main.c ****   {
 655              		.loc 1 415 3 is_stmt 1 view .LVU189
 415:Core/Src/main.c ****   {
 656              		.loc 1 415 7 is_stmt 0 view .LVU190
 657 0058 08A9     		add	r1, sp, #32
 658 005a 1048     		ldr	r0, .L41
 659 005c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 660              	.LVL27:
 415:Core/Src/main.c ****   {
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 41


 661              		.loc 1 415 6 discriminator 1 view .LVU191
 662 0060 B8B9     		cbnz	r0, .L39
 419:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 663              		.loc 1 419 3 is_stmt 1 view .LVU192
 419:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 664              		.loc 1 419 20 is_stmt 0 view .LVU193
 665 0062 6023     		movs	r3, #96
 666 0064 0193     		str	r3, [sp, #4]
 420:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 667              		.loc 1 420 3 is_stmt 1 view .LVU194
 420:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 668              		.loc 1 420 19 is_stmt 0 view .LVU195
 669 0066 0023     		movs	r3, #0
 670 0068 0293     		str	r3, [sp, #8]
 421:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 671              		.loc 1 421 3 is_stmt 1 view .LVU196
 421:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 672              		.loc 1 421 24 is_stmt 0 view .LVU197
 673 006a 0393     		str	r3, [sp, #12]
 422:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 674              		.loc 1 422 3 is_stmt 1 view .LVU198
 422:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 675              		.loc 1 422 24 is_stmt 0 view .LVU199
 676 006c 0593     		str	r3, [sp, #20]
 423:Core/Src/main.c ****   {
 677              		.loc 1 423 3 is_stmt 1 view .LVU200
 423:Core/Src/main.c ****   {
 678              		.loc 1 423 7 is_stmt 0 view .LVU201
 679 006e 0822     		movs	r2, #8
 680 0070 01A9     		add	r1, sp, #4
 681 0072 0A48     		ldr	r0, .L41
 682 0074 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 683              	.LVL28:
 423:Core/Src/main.c ****   {
 684              		.loc 1 423 6 discriminator 1 view .LVU202
 685 0078 68B9     		cbnz	r0, .L40
 430:Core/Src/main.c **** 
 686              		.loc 1 430 3 is_stmt 1 view .LVU203
 687 007a 0848     		ldr	r0, .L41
 688 007c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 689              	.LVL29:
 432:Core/Src/main.c **** 
 690              		.loc 1 432 1 is_stmt 0 view .LVU204
 691 0080 0FB0     		add	sp, sp, #60
 692              	.LCFI13:
 693              		.cfi_remember_state
 694              		.cfi_def_cfa_offset 4
 695              		@ sp needed
 696 0082 5DF804FB 		ldr	pc, [sp], #4
 697              	.L36:
 698              	.LCFI14:
 699              		.cfi_restore_state
 402:Core/Src/main.c ****   }
 700              		.loc 1 402 5 is_stmt 1 view .LVU205
 701 0086 FFF7FEFF 		bl	Error_Handler
 702              	.LVL30:
 703              	.L37:
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 42


 407:Core/Src/main.c ****   }
 704              		.loc 1 407 5 view .LVU206
 705 008a FFF7FEFF 		bl	Error_Handler
 706              	.LVL31:
 707              	.L38:
 411:Core/Src/main.c ****   }
 708              		.loc 1 411 5 view .LVU207
 709 008e FFF7FEFF 		bl	Error_Handler
 710              	.LVL32:
 711              	.L39:
 417:Core/Src/main.c ****   }
 712              		.loc 1 417 5 view .LVU208
 713 0092 FFF7FEFF 		bl	Error_Handler
 714              	.LVL33:
 715              	.L40:
 425:Core/Src/main.c ****   }
 716              		.loc 1 425 5 view .LVU209
 717 0096 FFF7FEFF 		bl	Error_Handler
 718              	.LVL34:
 719              	.L42:
 720 009a 00BF     		.align	2
 721              	.L41:
 722 009c 00000000 		.word	htim3
 723 00a0 00040040 		.word	1073742848
 724              		.cfi_endproc
 725              	.LFE140:
 727              		.section	.text.SystemClock_Config,"ax",%progbits
 728              		.align	1
 729              		.global	SystemClock_Config
 730              		.syntax unified
 731              		.thumb
 732              		.thumb_func
 734              	SystemClock_Config:
 735              	.LFB138:
 261:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 736              		.loc 1 261 1 view -0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 80
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740 0000 00B5     		push	{lr}
 741              	.LCFI15:
 742              		.cfi_def_cfa_offset 4
 743              		.cfi_offset 14, -4
 744 0002 95B0     		sub	sp, sp, #84
 745              	.LCFI16:
 746              		.cfi_def_cfa_offset 88
 262:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 747              		.loc 1 262 3 view .LVU211
 262:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 748              		.loc 1 262 22 is_stmt 0 view .LVU212
 749 0004 3422     		movs	r2, #52
 750 0006 0021     		movs	r1, #0
 751 0008 07A8     		add	r0, sp, #28
 752 000a FFF7FEFF 		bl	memset
 753              	.LVL35:
 263:Core/Src/main.c **** 
 754              		.loc 1 263 3 is_stmt 1 view .LVU213
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 43


 263:Core/Src/main.c **** 
 755              		.loc 1 263 22 is_stmt 0 view .LVU214
 756 000e 0023     		movs	r3, #0
 757 0010 0293     		str	r3, [sp, #8]
 758 0012 0393     		str	r3, [sp, #12]
 759 0014 0493     		str	r3, [sp, #16]
 760 0016 0593     		str	r3, [sp, #20]
 761 0018 0693     		str	r3, [sp, #24]
 267:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 762              		.loc 1 267 3 is_stmt 1 view .LVU215
 763              	.LBB11:
 267:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 764              		.loc 1 267 3 view .LVU216
 765 001a 0093     		str	r3, [sp]
 267:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 766              		.loc 1 267 3 view .LVU217
 767 001c 194A     		ldr	r2, .L49
 768 001e 116C     		ldr	r1, [r2, #64]
 769 0020 41F08051 		orr	r1, r1, #268435456
 770 0024 1164     		str	r1, [r2, #64]
 267:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 771              		.loc 1 267 3 view .LVU218
 772 0026 126C     		ldr	r2, [r2, #64]
 773 0028 02F08052 		and	r2, r2, #268435456
 774 002c 0092     		str	r2, [sp]
 267:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 775              		.loc 1 267 3 view .LVU219
 776 002e 009A     		ldr	r2, [sp]
 777              	.LBE11:
 267:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 778              		.loc 1 267 3 view .LVU220
 268:Core/Src/main.c **** 
 779              		.loc 1 268 3 view .LVU221
 780              	.LBB12:
 268:Core/Src/main.c **** 
 781              		.loc 1 268 3 view .LVU222
 782 0030 0193     		str	r3, [sp, #4]
 268:Core/Src/main.c **** 
 783              		.loc 1 268 3 view .LVU223
 784 0032 1549     		ldr	r1, .L49+4
 785 0034 0A68     		ldr	r2, [r1]
 786 0036 22F44042 		bic	r2, r2, #49152
 787 003a 42F48042 		orr	r2, r2, #16384
 788 003e 0A60     		str	r2, [r1]
 268:Core/Src/main.c **** 
 789              		.loc 1 268 3 view .LVU224
 790 0040 0A68     		ldr	r2, [r1]
 791 0042 02F44042 		and	r2, r2, #49152
 792 0046 0192     		str	r2, [sp, #4]
 268:Core/Src/main.c **** 
 793              		.loc 1 268 3 view .LVU225
 794 0048 019A     		ldr	r2, [sp, #4]
 795              	.LBE12:
 268:Core/Src/main.c **** 
 796              		.loc 1 268 3 view .LVU226
 273:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 797              		.loc 1 273 3 view .LVU227
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 44


 273:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 798              		.loc 1 273 36 is_stmt 0 view .LVU228
 799 004a 0222     		movs	r2, #2
 800 004c 0792     		str	r2, [sp, #28]
 274:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 801              		.loc 1 274 3 is_stmt 1 view .LVU229
 274:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 802              		.loc 1 274 30 is_stmt 0 view .LVU230
 803 004e 0122     		movs	r2, #1
 804 0050 0A92     		str	r2, [sp, #40]
 275:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 805              		.loc 1 275 3 is_stmt 1 view .LVU231
 275:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 806              		.loc 1 275 41 is_stmt 0 view .LVU232
 807 0052 1022     		movs	r2, #16
 808 0054 0B92     		str	r2, [sp, #44]
 276:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 809              		.loc 1 276 3 is_stmt 1 view .LVU233
 276:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 810              		.loc 1 276 34 is_stmt 0 view .LVU234
 811 0056 0D93     		str	r3, [sp, #52]
 277:Core/Src/main.c ****   {
 812              		.loc 1 277 3 is_stmt 1 view .LVU235
 277:Core/Src/main.c ****   {
 813              		.loc 1 277 7 is_stmt 0 view .LVU236
 814 0058 07A8     		add	r0, sp, #28
 815 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 816              	.LVL36:
 277:Core/Src/main.c ****   {
 817              		.loc 1 277 6 discriminator 1 view .LVU237
 818 005e 68B9     		cbnz	r0, .L47
 284:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 819              		.loc 1 284 3 is_stmt 1 view .LVU238
 284:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 820              		.loc 1 284 31 is_stmt 0 view .LVU239
 821 0060 0F23     		movs	r3, #15
 822 0062 0293     		str	r3, [sp, #8]
 286:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 823              		.loc 1 286 3 is_stmt 1 view .LVU240
 286:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 824              		.loc 1 286 34 is_stmt 0 view .LVU241
 825 0064 0021     		movs	r1, #0
 826 0066 0391     		str	r1, [sp, #12]
 287:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 827              		.loc 1 287 3 is_stmt 1 view .LVU242
 287:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 828              		.loc 1 287 35 is_stmt 0 view .LVU243
 829 0068 0491     		str	r1, [sp, #16]
 288:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 830              		.loc 1 288 3 is_stmt 1 view .LVU244
 288:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 831              		.loc 1 288 36 is_stmt 0 view .LVU245
 832 006a 0591     		str	r1, [sp, #20]
 289:Core/Src/main.c **** 
 833              		.loc 1 289 3 is_stmt 1 view .LVU246
 289:Core/Src/main.c **** 
 834              		.loc 1 289 36 is_stmt 0 view .LVU247
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 45


 835 006c 0691     		str	r1, [sp, #24]
 291:Core/Src/main.c ****   {
 836              		.loc 1 291 3 is_stmt 1 view .LVU248
 291:Core/Src/main.c ****   {
 837              		.loc 1 291 7 is_stmt 0 view .LVU249
 838 006e 02A8     		add	r0, sp, #8
 839 0070 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 840              	.LVL37:
 291:Core/Src/main.c ****   {
 841              		.loc 1 291 6 discriminator 1 view .LVU250
 842 0074 20B9     		cbnz	r0, .L48
 295:Core/Src/main.c **** 
 843              		.loc 1 295 1 view .LVU251
 844 0076 15B0     		add	sp, sp, #84
 845              	.LCFI17:
 846              		.cfi_remember_state
 847              		.cfi_def_cfa_offset 4
 848              		@ sp needed
 849 0078 5DF804FB 		ldr	pc, [sp], #4
 850              	.L47:
 851              	.LCFI18:
 852              		.cfi_restore_state
 279:Core/Src/main.c ****   }
 853              		.loc 1 279 5 is_stmt 1 view .LVU252
 854 007c FFF7FEFF 		bl	Error_Handler
 855              	.LVL38:
 856              	.L48:
 293:Core/Src/main.c ****   }
 857              		.loc 1 293 5 view .LVU253
 858 0080 FFF7FEFF 		bl	Error_Handler
 859              	.LVL39:
 860              	.L50:
 861              		.align	2
 862              	.L49:
 863 0084 00380240 		.word	1073887232
 864 0088 00700040 		.word	1073770496
 865              		.cfi_endproc
 866              	.LFE138:
 868              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 869              		.align	2
 870              	.LC0:
 871 0000 53696E65 		.ascii	"Sine\000"
 871      00
 872              		.section	.text.main,"ax",%progbits
 873              		.align	1
 874              		.global	main
 875              		.syntax unified
 876              		.thumb
 877              		.thumb_func
 879              	main:
 880              	.LFB137:
 201:Core/Src/main.c **** 
 881              		.loc 1 201 1 view -0
 882              		.cfi_startproc
 883              		@ Volatile: function does not return.
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 46


 886 0000 08B5     		push	{r3, lr}
 887              	.LCFI19:
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 3, -8
 890              		.cfi_offset 14, -4
 210:Core/Src/main.c **** 
 891              		.loc 1 210 3 view .LVU255
 892 0002 FFF7FEFF 		bl	HAL_Init
 893              	.LVL40:
 217:Core/Src/main.c **** 
 894              		.loc 1 217 3 view .LVU256
 895 0006 FFF7FEFF 		bl	SystemClock_Config
 896              	.LVL41:
 224:Core/Src/main.c ****   MX_DMA_Init();
 897              		.loc 1 224 3 view .LVU257
 898 000a FFF7FEFF 		bl	MX_GPIO_Init
 899              	.LVL42:
 225:Core/Src/main.c ****   MX_TIM2_Init();
 900              		.loc 1 225 3 view .LVU258
 901 000e FFF7FEFF 		bl	MX_DMA_Init
 902              	.LVL43:
 226:Core/Src/main.c ****   MX_TIM3_Init();
 903              		.loc 1 226 3 view .LVU259
 904 0012 FFF7FEFF 		bl	MX_TIM2_Init
 905              	.LVL44:
 227:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 906              		.loc 1 227 3 view .LVU260
 907 0016 FFF7FEFF 		bl	MX_TIM3_Init
 908              	.LVL45:
 230:Core/Src/main.c ****   HAL_Delay(10);
 909              		.loc 1 230 3 view .LVU261
 910 001a FFF7FEFF 		bl	init_LCD
 911              	.LVL46:
 231:Core/Src/main.c **** 
 912              		.loc 1 231 3 view .LVU262
 913 001e 0A20     		movs	r0, #10
 914 0020 FFF7FEFF 		bl	HAL_Delay
 915              	.LVL47:
 233:Core/Src/main.c ****   // TODO: Start TIM2 in Output Compare (OC) mode on channel 1
 916              		.loc 1 233 3 view .LVU263
 917 0024 0821     		movs	r1, #8
 918 0026 0D48     		ldr	r0, .L54
 919 0028 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 920              	.LVL48:
 235:Core/Src/main.c ****   // TODO: Start DMA in IT mode on TIM2->CH1. Source is LUT and Dest is TIM3->CCR3; start with Sine
 921              		.loc 1 235 3 view .LVU264
 922 002c 0C4C     		ldr	r4, .L54+4
 923 002e 0021     		movs	r1, #0
 924 0030 2046     		mov	r0, r4
 925 0032 FFF7FEFF 		bl	HAL_TIM_OC_Start
 926              	.LVL49:
 237:Core/Src/main.c ****   // TODO: Write current waveform to LCD(Sine is the first waveform)
 927              		.loc 1 237 3 view .LVU265
 928 0036 8023     		movs	r3, #128
 929 0038 0A4A     		ldr	r2, .L54+8
 930 003a 1268     		ldr	r2, [r2]
 931 003c 0A49     		ldr	r1, .L54+12
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 47


 932 003e 0B48     		ldr	r0, .L54+16
 933 0040 FFF7FEFF 		bl	HAL_DMA_Start_IT
 934              	.LVL50:
 239:Core/Src/main.c ****   lcd_putstring("Sine");
 935              		.loc 1 239 3 view .LVU266
 936 0044 0120     		movs	r0, #1
 937 0046 FFF7FEFF 		bl	lcd_command
 938              	.LVL51:
 240:Core/Src/main.c ****   // TODO: Enable DMA (start transfer from LUT to CCR)
 939              		.loc 1 240 3 view .LVU267
 940 004a 0948     		ldr	r0, .L54+20
 941 004c FFF7FEFF 		bl	lcd_putstring
 942              	.LVL52:
 242:Core/Src/main.c ****   /* USER CODE END 2 */
 943              		.loc 1 242 3 view .LVU268
 944 0050 2268     		ldr	r2, [r4]
 945 0052 D368     		ldr	r3, [r2, #12]
 946 0054 43F40073 		orr	r3, r3, #512
 947 0058 D360     		str	r3, [r2, #12]
 948              	.L52:
 247:Core/Src/main.c ****   {
 949              		.loc 1 247 3 view .LVU269
 252:Core/Src/main.c ****   /* USER CODE END 3 */
 950              		.loc 1 252 3 view .LVU270
 247:Core/Src/main.c ****   {
 951              		.loc 1 247 9 view .LVU271
 952 005a FEE7     		b	.L52
 953              	.L55:
 954              		.align	2
 955              	.L54:
 956 005c 00000000 		.word	htim3
 957 0060 00000000 		.word	htim2
 958 0064 00000000 		.word	DestAddress
 959 0068 00000000 		.word	Sin_LUT
 960 006c 00000000 		.word	hdma_tim2_ch1
 961 0070 00000000 		.word	.LC0
 962              		.cfi_endproc
 963              	.LFE137:
 965              		.global	DestAddress
 966              		.section	.data.DestAddress,"aw"
 967              		.align	2
 970              	DestAddress:
 971 0000 3C040040 		.word	1073742908
 972              		.global	TIM2_Ticks
 973              		.section	.data.TIM2_Ticks,"aw"
 974              		.align	2
 977              	TIM2_Ticks:
 978 0000 6B010000 		.word	363
 979              		.global	Drum_LUT
 980              		.section	.data.Drum_LUT,"aw"
 981              		.align	2
 984              	Drum_LUT:
 985 0000 FF070000 		.word	2047
 986              		.global	Guitar_LUT
 987              		.section	.data.Guitar_LUT,"aw"
 988              		.align	2
 991              	Guitar_LUT:
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 48


 992 0000 FF070000 		.word	2047
 993              		.global	Piano_LUT
 994              		.section	.data.Piano_LUT,"aw"
 995              		.align	2
 998              	Piano_LUT:
 999 0000 FF070000 		.word	2047
 1000              		.global	Triangle_LUT
 1001              		.section	.data.Triangle_LUT,"aw"
 1002              		.align	2
 1005              	Triangle_LUT:
 1006 0000 00000000 		.word	0
 1007 0004 3F000000 		.word	63
 1008 0008 7F000000 		.word	127
 1009 000c BF000000 		.word	191
 1010 0010 FF000000 		.word	255
 1011 0014 3F010000 		.word	319
 1012 0018 7F010000 		.word	383
 1013 001c BF010000 		.word	447
 1014 0020 FF010000 		.word	511
 1015 0024 3F020000 		.word	575
 1016 0028 7F020000 		.word	639
 1017 002c BF020000 		.word	703
 1018 0030 FF020000 		.word	767
 1019 0034 3F030000 		.word	831
 1020 0038 7F030000 		.word	895
 1021 003c BF030000 		.word	959
 1022 0040 FF030000 		.word	1023
 1023 0044 3F040000 		.word	1087
 1024 0048 7F040000 		.word	1151
 1025 004c BF040000 		.word	1215
 1026 0050 FF040000 		.word	1279
 1027 0054 3F050000 		.word	1343
 1028 0058 7F050000 		.word	1407
 1029 005c BF050000 		.word	1471
 1030 0060 FF050000 		.word	1535
 1031 0064 3F060000 		.word	1599
 1032 0068 7F060000 		.word	1663
 1033 006c BF060000 		.word	1727
 1034 0070 FF060000 		.word	1791
 1035 0074 3F070000 		.word	1855
 1036 0078 7F070000 		.word	1919
 1037 007c BF070000 		.word	1983
 1038 0080 FF070000 		.word	2047
 1039 0084 3F080000 		.word	2111
 1040 0088 7F080000 		.word	2175
 1041 008c BF080000 		.word	2239
 1042 0090 FF080000 		.word	2303
 1043 0094 3F090000 		.word	2367
 1044 0098 7F090000 		.word	2431
 1045 009c BF090000 		.word	2495
 1046 00a0 FF090000 		.word	2559
 1047 00a4 3F0A0000 		.word	2623
 1048 00a8 7F0A0000 		.word	2687
 1049 00ac BF0A0000 		.word	2751
 1050 00b0 FF0A0000 		.word	2815
 1051 00b4 3F0B0000 		.word	2879
 1052 00b8 7F0B0000 		.word	2943
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 49


 1053 00bc BF0B0000 		.word	3007
 1054 00c0 FF0B0000 		.word	3071
 1055 00c4 3F0C0000 		.word	3135
 1056 00c8 7F0C0000 		.word	3199
 1057 00cc BF0C0000 		.word	3263
 1058 00d0 FF0C0000 		.word	3327
 1059 00d4 3F0D0000 		.word	3391
 1060 00d8 7F0D0000 		.word	3455
 1061 00dc BF0D0000 		.word	3519
 1062 00e0 FF0D0000 		.word	3583
 1063 00e4 3F0E0000 		.word	3647
 1064 00e8 7F0E0000 		.word	3711
 1065 00ec BF0E0000 		.word	3775
 1066 00f0 FF0E0000 		.word	3839
 1067 00f4 3F0F0000 		.word	3903
 1068 00f8 7F0F0000 		.word	3967
 1069 00fc BF0F0000 		.word	4031
 1070 0100 FF0F0000 		.word	4095
 1071 0104 BF0F0000 		.word	4031
 1072 0108 7F0F0000 		.word	3967
 1073 010c 3F0F0000 		.word	3903
 1074 0110 FF0E0000 		.word	3839
 1075 0114 BF0E0000 		.word	3775
 1076 0118 7F0E0000 		.word	3711
 1077 011c 3F0E0000 		.word	3647
 1078 0120 FF0D0000 		.word	3583
 1079 0124 BF0D0000 		.word	3519
 1080 0128 7F0D0000 		.word	3455
 1081 012c 3F0D0000 		.word	3391
 1082 0130 FF0C0000 		.word	3327
 1083 0134 BF0C0000 		.word	3263
 1084 0138 7F0C0000 		.word	3199
 1085 013c 3F0C0000 		.word	3135
 1086 0140 FF0B0000 		.word	3071
 1087 0144 BF0B0000 		.word	3007
 1088 0148 7F0B0000 		.word	2943
 1089 014c 3F0B0000 		.word	2879
 1090 0150 FF0A0000 		.word	2815
 1091 0154 BF0A0000 		.word	2751
 1092 0158 7F0A0000 		.word	2687
 1093 015c 3F0A0000 		.word	2623
 1094 0160 FF090000 		.word	2559
 1095 0164 BF090000 		.word	2495
 1096 0168 7F090000 		.word	2431
 1097 016c 3F090000 		.word	2367
 1098 0170 FF080000 		.word	2303
 1099 0174 BF080000 		.word	2239
 1100 0178 7F080000 		.word	2175
 1101 017c 3F080000 		.word	2111
 1102 0180 FF070000 		.word	2047
 1103 0184 BF070000 		.word	1983
 1104 0188 7F070000 		.word	1919
 1105 018c 3F070000 		.word	1855
 1106 0190 FF060000 		.word	1791
 1107 0194 BF060000 		.word	1727
 1108 0198 7F060000 		.word	1663
 1109 019c 3F060000 		.word	1599
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 50


 1110 01a0 FF050000 		.word	1535
 1111 01a4 BF050000 		.word	1471
 1112 01a8 7F050000 		.word	1407
 1113 01ac 3F050000 		.word	1343
 1114 01b0 FF040000 		.word	1279
 1115 01b4 BF040000 		.word	1215
 1116 01b8 7F040000 		.word	1151
 1117 01bc 3F040000 		.word	1087
 1118 01c0 FF030000 		.word	1023
 1119 01c4 BF030000 		.word	959
 1120 01c8 7F030000 		.word	895
 1121 01cc 3F030000 		.word	831
 1122 01d0 FF020000 		.word	767
 1123 01d4 BF020000 		.word	703
 1124 01d8 7F020000 		.word	639
 1125 01dc 3F020000 		.word	575
 1126 01e0 FF010000 		.word	511
 1127 01e4 BF010000 		.word	447
 1128 01e8 7F010000 		.word	383
 1129 01ec 3F010000 		.word	319
 1130 01f0 FF000000 		.word	255
 1131 01f4 BF000000 		.word	191
 1132 01f8 7F000000 		.word	127
 1133 01fc 3F000000 		.word	63
 1134              		.global	Saw_LUT
 1135              		.section	.data.Saw_LUT,"aw"
 1136              		.align	2
 1139              	Saw_LUT:
 1140 0000 00000000 		.word	0
 1141 0004 1F000000 		.word	31
 1142 0008 3F000000 		.word	63
 1143 000c 5F000000 		.word	95
 1144 0010 7F000000 		.word	127
 1145 0014 9F000000 		.word	159
 1146 0018 BF000000 		.word	191
 1147 001c DF000000 		.word	223
 1148 0020 FF000000 		.word	255
 1149 0024 1F010000 		.word	287
 1150 0028 3F010000 		.word	319
 1151 002c 5F010000 		.word	351
 1152 0030 7F010000 		.word	383
 1153 0034 9F010000 		.word	415
 1154 0038 BF010000 		.word	447
 1155 003c DF010000 		.word	479
 1156 0040 FF010000 		.word	511
 1157 0044 1F020000 		.word	543
 1158 0048 3F020000 		.word	575
 1159 004c 5F020000 		.word	607
 1160 0050 7F020000 		.word	639
 1161 0054 9F020000 		.word	671
 1162 0058 BF020000 		.word	703
 1163 005c DF020000 		.word	735
 1164 0060 FF020000 		.word	767
 1165 0064 1F030000 		.word	799
 1166 0068 3F030000 		.word	831
 1167 006c 5F030000 		.word	863
 1168 0070 7F030000 		.word	895
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 51


 1169 0074 9F030000 		.word	927
 1170 0078 BF030000 		.word	959
 1171 007c DF030000 		.word	991
 1172 0080 FF030000 		.word	1023
 1173 0084 1F040000 		.word	1055
 1174 0088 3F040000 		.word	1087
 1175 008c 5F040000 		.word	1119
 1176 0090 7F040000 		.word	1151
 1177 0094 9F040000 		.word	1183
 1178 0098 BF040000 		.word	1215
 1179 009c DF040000 		.word	1247
 1180 00a0 FF040000 		.word	1279
 1181 00a4 1F050000 		.word	1311
 1182 00a8 3F050000 		.word	1343
 1183 00ac 5F050000 		.word	1375
 1184 00b0 7F050000 		.word	1407
 1185 00b4 9F050000 		.word	1439
 1186 00b8 BF050000 		.word	1471
 1187 00bc DF050000 		.word	1503
 1188 00c0 FF050000 		.word	1535
 1189 00c4 1F060000 		.word	1567
 1190 00c8 3F060000 		.word	1599
 1191 00cc 5F060000 		.word	1631
 1192 00d0 7F060000 		.word	1663
 1193 00d4 9F060000 		.word	1695
 1194 00d8 BF060000 		.word	1727
 1195 00dc DF060000 		.word	1759
 1196 00e0 FF060000 		.word	1791
 1197 00e4 1F070000 		.word	1823
 1198 00e8 3F070000 		.word	1855
 1199 00ec 5F070000 		.word	1887
 1200 00f0 7F070000 		.word	1919
 1201 00f4 9F070000 		.word	1951
 1202 00f8 BF070000 		.word	1983
 1203 00fc DF070000 		.word	2015
 1204 0100 FF070000 		.word	2047
 1205 0104 1F080000 		.word	2079
 1206 0108 3F080000 		.word	2111
 1207 010c 5F080000 		.word	2143
 1208 0110 7F080000 		.word	2175
 1209 0114 9F080000 		.word	2207
 1210 0118 BF080000 		.word	2239
 1211 011c DF080000 		.word	2271
 1212 0120 FF080000 		.word	2303
 1213 0124 1F090000 		.word	2335
 1214 0128 3F090000 		.word	2367
 1215 012c 5F090000 		.word	2399
 1216 0130 7F090000 		.word	2431
 1217 0134 9F090000 		.word	2463
 1218 0138 BF090000 		.word	2495
 1219 013c DF090000 		.word	2527
 1220 0140 FF090000 		.word	2559
 1221 0144 1F0A0000 		.word	2591
 1222 0148 3F0A0000 		.word	2623
 1223 014c 5F0A0000 		.word	2655
 1224 0150 7F0A0000 		.word	2687
 1225 0154 9F0A0000 		.word	2719
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 52


 1226 0158 BF0A0000 		.word	2751
 1227 015c DF0A0000 		.word	2783
 1228 0160 FF0A0000 		.word	2815
 1229 0164 1F0B0000 		.word	2847
 1230 0168 3F0B0000 		.word	2879
 1231 016c 5F0B0000 		.word	2911
 1232 0170 7F0B0000 		.word	2943
 1233 0174 9F0B0000 		.word	2975
 1234 0178 BF0B0000 		.word	3007
 1235 017c DF0B0000 		.word	3039
 1236 0180 FF0B0000 		.word	3071
 1237 0184 1F0C0000 		.word	3103
 1238 0188 3F0C0000 		.word	3135
 1239 018c 5F0C0000 		.word	3167
 1240 0190 7F0C0000 		.word	3199
 1241 0194 9F0C0000 		.word	3231
 1242 0198 BF0C0000 		.word	3263
 1243 019c DF0C0000 		.word	3295
 1244 01a0 FF0C0000 		.word	3327
 1245 01a4 1F0D0000 		.word	3359
 1246 01a8 3F0D0000 		.word	3391
 1247 01ac 5F0D0000 		.word	3423
 1248 01b0 7F0D0000 		.word	3455
 1249 01b4 9F0D0000 		.word	3487
 1250 01b8 BF0D0000 		.word	3519
 1251 01bc DF0D0000 		.word	3551
 1252 01c0 FF0D0000 		.word	3583
 1253 01c4 1F0E0000 		.word	3615
 1254 01c8 3F0E0000 		.word	3647
 1255 01cc 5F0E0000 		.word	3679
 1256 01d0 7F0E0000 		.word	3711
 1257 01d4 9F0E0000 		.word	3743
 1258 01d8 BF0E0000 		.word	3775
 1259 01dc DF0E0000 		.word	3807
 1260 01e0 FF0E0000 		.word	3839
 1261 01e4 1F0F0000 		.word	3871
 1262 01e8 3F0F0000 		.word	3903
 1263 01ec 5F0F0000 		.word	3935
 1264 01f0 7F0F0000 		.word	3967
 1265 01f4 9F0F0000 		.word	3999
 1266 01f8 BF0F0000 		.word	4031
 1267 01fc DF0F0000 		.word	4063
 1268              		.global	Sin_LUT
 1269              		.section	.data.Sin_LUT,"aw"
 1270              		.align	2
 1273              	Sin_LUT:
 1274 0000 FF070000 		.word	2047
 1275 0004 63080000 		.word	2147
 1276 0008 C8080000 		.word	2248
 1277 000c 2B090000 		.word	2347
 1278 0010 8E090000 		.word	2446
 1279 0014 F1090000 		.word	2545
 1280 0018 510A0000 		.word	2641
 1281 001c B10A0000 		.word	2737
 1282 0020 0F0B0000 		.word	2831
 1283 0024 6A0B0000 		.word	2922
 1284 0028 C40B0000 		.word	3012
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 53


 1285 002c 1C0C0000 		.word	3100
 1286 0030 710C0000 		.word	3185
 1287 0034 C30C0000 		.word	3267
 1288 0038 120D0000 		.word	3346
 1289 003c 5E0D0000 		.word	3422
 1290 0040 A70D0000 		.word	3495
 1291 0044 EC0D0000 		.word	3564
 1292 0048 2E0E0000 		.word	3630
 1293 004c 6C0E0000 		.word	3692
 1294 0050 A50E0000 		.word	3749
 1295 0054 DB0E0000 		.word	3803
 1296 0058 0D0F0000 		.word	3853
 1297 005c 3A0F0000 		.word	3898
 1298 0060 630F0000 		.word	3939
 1299 0064 870F0000 		.word	3975
 1300 0068 A60F0000 		.word	4006
 1301 006c C10F0000 		.word	4033
 1302 0070 D70F0000 		.word	4055
 1303 0074 E80F0000 		.word	4072
 1304 0078 F50F0000 		.word	4085
 1305 007c FC0F0000 		.word	4092
 1306 0080 FF0F0000 		.word	4095
 1307 0084 FC0F0000 		.word	4092
 1308 0088 F50F0000 		.word	4085
 1309 008c E80F0000 		.word	4072
 1310 0090 D70F0000 		.word	4055
 1311 0094 C10F0000 		.word	4033
 1312 0098 A60F0000 		.word	4006
 1313 009c 870F0000 		.word	3975
 1314 00a0 630F0000 		.word	3939
 1315 00a4 3A0F0000 		.word	3898
 1316 00a8 0D0F0000 		.word	3853
 1317 00ac DB0E0000 		.word	3803
 1318 00b0 A50E0000 		.word	3749
 1319 00b4 6C0E0000 		.word	3692
 1320 00b8 2E0E0000 		.word	3630
 1321 00bc EC0D0000 		.word	3564
 1322 00c0 A70D0000 		.word	3495
 1323 00c4 5E0D0000 		.word	3422
 1324 00c8 120D0000 		.word	3346
 1325 00cc C30C0000 		.word	3267
 1326 00d0 710C0000 		.word	3185
 1327 00d4 1C0C0000 		.word	3100
 1328 00d8 C40B0000 		.word	3012
 1329 00dc 6A0B0000 		.word	2922
 1330 00e0 0F0B0000 		.word	2831
 1331 00e4 B10A0000 		.word	2737
 1332 00e8 510A0000 		.word	2641
 1333 00ec F1090000 		.word	2545
 1334 00f0 8E090000 		.word	2446
 1335 00f4 2B090000 		.word	2347
 1336 00f8 C8080000 		.word	2248
 1337 00fc 63080000 		.word	2147
 1338 0100 FF070000 		.word	2047
 1339 0104 9B070000 		.word	1947
 1340 0108 36070000 		.word	1846
 1341 010c D3060000 		.word	1747
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 54


 1342 0110 70060000 		.word	1648
 1343 0114 0D060000 		.word	1549
 1344 0118 AD050000 		.word	1453
 1345 011c 4D050000 		.word	1357
 1346 0120 EF040000 		.word	1263
 1347 0124 94040000 		.word	1172
 1348 0128 3A040000 		.word	1082
 1349 012c E2030000 		.word	994
 1350 0130 8D030000 		.word	909
 1351 0134 3B030000 		.word	827
 1352 0138 EC020000 		.word	748
 1353 013c A0020000 		.word	672
 1354 0140 57020000 		.word	599
 1355 0144 12020000 		.word	530
 1356 0148 D0010000 		.word	464
 1357 014c 92010000 		.word	402
 1358 0150 59010000 		.word	345
 1359 0154 23010000 		.word	291
 1360 0158 F1000000 		.word	241
 1361 015c C4000000 		.word	196
 1362 0160 9B000000 		.word	155
 1363 0164 77000000 		.word	119
 1364 0168 58000000 		.word	88
 1365 016c 3D000000 		.word	61
 1366 0170 27000000 		.word	39
 1367 0174 16000000 		.word	22
 1368 0178 09000000 		.word	9
 1369 017c 02000000 		.word	2
 1370 0180 00000000 		.word	0
 1371 0184 02000000 		.word	2
 1372 0188 09000000 		.word	9
 1373 018c 16000000 		.word	22
 1374 0190 27000000 		.word	39
 1375 0194 3D000000 		.word	61
 1376 0198 58000000 		.word	88
 1377 019c 77000000 		.word	119
 1378 01a0 9B000000 		.word	155
 1379 01a4 C4000000 		.word	196
 1380 01a8 F1000000 		.word	241
 1381 01ac 23010000 		.word	291
 1382 01b0 59010000 		.word	345
 1383 01b4 92010000 		.word	402
 1384 01b8 D0010000 		.word	464
 1385 01bc 12020000 		.word	530
 1386 01c0 57020000 		.word	599
 1387 01c4 A0020000 		.word	672
 1388 01c8 EC020000 		.word	748
 1389 01cc 3B030000 		.word	827
 1390 01d0 8D030000 		.word	909
 1391 01d4 E2030000 		.word	994
 1392 01d8 3A040000 		.word	1082
 1393 01dc 94040000 		.word	1172
 1394 01e0 EF040000 		.word	1263
 1395 01e4 4D050000 		.word	1357
 1396 01e8 AD050000 		.word	1453
 1397 01ec 0D060000 		.word	1549
 1398 01f0 70060000 		.word	1648
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 55


 1399 01f4 D3060000 		.word	1747
 1400 01f8 36070000 		.word	1846
 1401 01fc 9B070000 		.word	1947
 1402              		.global	hdma_tim2_ch1
 1403              		.section	.bss.hdma_tim2_ch1,"aw",%nobits
 1404              		.align	2
 1407              	hdma_tim2_ch1:
 1408 0000 00000000 		.space	96
 1408      00000000 
 1408      00000000 
 1408      00000000 
 1408      00000000 
 1409              		.global	htim3
 1410              		.section	.bss.htim3,"aw",%nobits
 1411              		.align	2
 1414              	htim3:
 1415 0000 00000000 		.space	72
 1415      00000000 
 1415      00000000 
 1415      00000000 
 1415      00000000 
 1416              		.global	htim2
 1417              		.section	.bss.htim2,"aw",%nobits
 1418              		.align	2
 1421              	htim2:
 1422 0000 00000000 		.space	72
 1422      00000000 
 1422      00000000 
 1422      00000000 
 1422      00000000 
 1423              		.text
 1424              	.Letext0:
 1425              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1426              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1427              		.file 5 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1428              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1429              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1430              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1431              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1432              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1433              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1434              		.file 12 "Core/Inc/main.h"
 1435              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1436              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1437              		.file 15 "Core/Inc/lcd_stm32f4.h"
 1438              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1439              		.file 17 "<built-in>"
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 56


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:192    .text.MX_GPIO_Init:000000d4 $d
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:200    .text.MX_DMA_Init:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:205    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:254    .text.MX_DMA_Init:00000030 $d
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:259    .text.EXTI0_IRQHandler:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:265    .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:286    .text.Error_Handler:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:292    .text.Error_Handler:00000000 Error_Handler
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:324    .text.MX_TIM2_Init:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:329    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:556    .text.MX_TIM2_Init:000000f8 $d
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:1421   .bss.htim2:00000000 htim2
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:1407   .bss.hdma_tim2_ch1:00000000 hdma_tim2_ch1
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:564    .text.MX_TIM3_Init:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:569    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:722    .text.MX_TIM3_Init:0000009c $d
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:1414   .bss.htim3:00000000 htim3
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:728    .text.SystemClock_Config:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:734    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:863    .text.SystemClock_Config:00000084 $d
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:869    .rodata.main.str1.4:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:873    .text.main:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:879    .text.main:00000000 main
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:956    .text.main:0000005c $d
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:970    .data.DestAddress:00000000 DestAddress
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:1273   .data.Sin_LUT:00000000 Sin_LUT
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:967    .data.DestAddress:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:977    .data.TIM2_Ticks:00000000 TIM2_Ticks
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:974    .data.TIM2_Ticks:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:984    .data.Drum_LUT:00000000 Drum_LUT
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:981    .data.Drum_LUT:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:991    .data.Guitar_LUT:00000000 Guitar_LUT
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:988    .data.Guitar_LUT:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:998    .data.Piano_LUT:00000000 Piano_LUT
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:995    .data.Piano_LUT:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:1005   .data.Triangle_LUT:00000000 Triangle_LUT
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:1002   .data.Triangle_LUT:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:1139   .data.Saw_LUT:00000000 Saw_LUT
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:1136   .data.Saw_LUT:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:1270   .data.Sin_LUT:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:1404   .bss.hdma_tim2_ch1:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:1411   .bss.htim3:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s:1418   .bss.htim2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_EXTI_IRQHandler
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_OC_Init
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cc4AW3nd.s 			page 57


HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
HAL_DMA_Init
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
init_LCD
HAL_Delay
HAL_TIM_PWM_Start
HAL_TIM_OC_Start
HAL_DMA_Start_IT
lcd_command
lcd_putstring
